{% extends 'base.html.twig' %}

{% block stylesheets %}
    {{ parent() }}
{# Agrega aquí tus estilos adicionales específicos de la vista dashboard.html.twig #}
    <link rel="stylesheet" href="{{ asset('bundles/adminlte/adminlte.css') }}">
{% endblock %}

{% block javascripts %}
    {{ parent() }}
{# Agrega aquí tus scripts adicionales específicos de la vista dashboard.html.twig #}
    <script src="{{ asset('bundles/adminlte/adminlte.js') }}"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://unpkg.com/input-panel"></script>
    



{% endblock %}

{% block title %}Mesas{% endblock %}
{% block page_title %}
	Control de mesas
{% endblock %}
{% block page_subtitle %}{% endblock %}

{% block page_content %}
<body>
{% if zonasoff is same as(true)  %}

    <div class="aviso">
        <h2>Aviso Importante</h2>
        <p>Recuerda que para poder acceder al apartado de mesas debes primero crear tus zonas y añadir tus mesas</p>
        <p>Puedes empezar aqui en el apartado "Control de mesas" <a href="{{path('ajustesavanzados')}}">aquí</a>.</p>
    </div>

{% elseif not cajacerrada %}    

    <div class="aviso">
        <h2>La caja no esta abierta</h2>
        <p>Para poder iniciar el apartado de mesas debes iniciar la caja con un valor.</p>
    </div>

{% else %}

<div class="container-buttons-settings d-block d-sm-none">
    <div class="button-container-movil mx-auto w-100 bg-white rounded-lg shadow-md p-6">
        <button class="btn btn-outline-primary" id="papelera-icon" onclick="mostrarPapelera()"><img src="{{ asset('bundles/adminlte/icons/cubobasura.png') }}" style="width:28px;" alt=""></button>
        <button class="btn btn-outline-primary" id="abrir-traspaso" data-toggle="modal" data-target="#transferModal"><i class="fa-solid fa-right-left" style="padding: 2px;"></i></button>
        <button class="btn btn-outline-primary" id="unirmesa-mobil" data-toggle="modal" data-target="#modalBind"><i class="fa-solid fa-arrow-right" style="padding: 2px;"></i><i class="fa-solid fa-arrow-left" style="padding: 2px;"></i></button>
            {% for zona in zonas %}
                <button class="btn btn-outline-primary" id="" onclick="cambiarLocalizacion('{{ path('list_comida') }}', '{{ zona.id }}')">
                    {# <img src="{{ asset('bundles/adminlte/icons/barra.png') }}" style="width:48px;" alt=""> #}
                    <span style="font-size:10px;">{{zona.name}}</span>
                </button>
            {% endfor %}
        <button class="btn btn-outline-primary" data-toggle="modal" data-target="#"><i class="fa-solid fa-cart-shopping"></i></button>    
    </div>
  </div>
<div class="div-titulo" style="display: flex;justify-content: space-around;">
    <div style="background-color: #fff;box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.25); border-radius: 4px; margin: 5px; padding: 2px;">
        <span>
            <h4 id="titulo-sala"><bold>{{ (zonas|first).name }}</bold></h4>
        </span>
    </div>
    
    <div  style="background-color: #fff;box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.25); border-radius: 4px; margin: 5px; padding: 2px;">
        <span>
            <h4 id="total-sala"><bold>Total Sala: {{ (total_zonas|first).totalpagar }} €</bold></h4>
        </span>
    </div>
    
</div>

{# Modal control de mesa #}

<div class="modal fade" id="modalControlMesas" data-bs-focus="false" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable" style="max-width: 90%;">
    <div class="modal-content">
      <div class="modal-header" id="header-comandero">
        <h5 class="modal-title" id="modalControlMesasLabel"></h5>
        <div class="div-comensales">
            <label for="input-comensales">Comensales: </label>
            <input type="number" id="input-comensales" max="99">
        </div>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">X</span>
        </button>
      </div>
      <div class="modal-body">
        <div  class="row">
            <div class="col-lg-5 col-md-5 col-sm-3 col-xs-12" style="display: flex;flex-direction: column;">
                <div class="cat-food">
			<div class="row" style="display: flex;flex-direction: row;align-items: flex-start;">
			{# Display desktop and tablet #}
				<div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 type-food d-none d-sm-block" style="">
					{# <div class="row"> #}
						<div class="" id="display-type-1"> 
							{% for comida in newcomidas %}
								<button id='button-{{comida.name}}' class="food-button" onclick='cargarComida("{{comida.id}}")'>
									<div class="button-type-food-left"
                                        {% if 'bundles/adminlte/icons' in comida.icon %}
                                            >
                                            <img src="{{ asset(comida.icon) }}" id="icono-food">
                                        {% elseif 'typefoodimg/' in comida.icon %}
                                            style="background-image: url('{{ asset(comida.icon) }}'); background-size: cover; background-position: center;">
                                        {% else %}
                                        > <span>{{comida.name}}</span>    
                                        {% endif %}
                                        {# <span id="texto-food">{{comida.name}}</span> #}
                                    </div>

								</button>

							{% endfor %}
						</div>
                        <hr style="border: 1px solid black;">
					</div>
				<div class="col-lg-4 col-md-4 col-sm-4 col-xs-12 type-food d-block d-sm-none" style="">
					<div class="row">
						<div class="col-lg-4 col-sm-4 col-xs-4" id="display-type-1"> 
							{% for comida in comida_moviles %}
								<button id='button-{{comida.name}}' class="food-button" onclick='cargarComida("{{comida.id}}")'>
									<div class="button-type-food-left"
                                        {% if 'bundles/adminlte/icons' in comida.icon %}
                                            >
                                            <img src="{{ asset(comida.icon) }}" id="icono-food">
                                        {% elseif 'typefoodimg/' in comida.icon %}
                                            style="background-image: url('{{ asset(comida.icon) }}'); background-size: cover; background-position: center;">
                                        {% else %}
                                        > <span>{{comida.name}}</span>    
                                        {% endif %}
										
                                    </div>
								</button>

							{% endfor %}
						</div>
					</div>
				</div>
                
				<div class="col-lg-12 col-md-12 col-sm-12 col-xs-12" id="food-container" style="">
                
                </div>
			</div>
		</div>
            </div>
            <div class="col-lg-7 col-md-7 col-xs-12" id="visual-lista">
                <div class="contenido-mesa" id="contenido-mesa">

                        <div style="display: flex;align-items: center;justify-content: space-between;">
                            <label id="tittle-mesa"></label>
                            <label id="total-label"></label>
                        </div>
                    
                
                </div>
                <div class="additional-content">
                    <button class="floating-trash" id="floating-trash" onclick="eliminarElemento()"><img src="{{ asset('bundles/adminlte/icons/cubobasura.png') }}" id="logo-trash" alt=""></button>
                    <button class="floating-tiquet" id="floating-tiquet" onclick="sacarTiquet()">Sacar tiquet</button>
                    <button class="floating-tiquet" id="floating-tiquet" onclick="controlCobro()">Cerrar tiquet</button>
                    <button class="floating-bind" id="abrir-traspaso" data-toggle="modal" data-target="#transferModal"><i class="fa-solid fa-right-left" style="padding: 2px;"></i></button>
                    {% if is_granted('ROLE_ADMIN') %}
                        <button class="floating-barra" id="floating-barra" onclick="descuentoMesa()">Descuento</button>
                    {% endif %}
                    <button class="floating-kitchen" id="floating-kitchen" onclick="enviarCocina()"><img src="{{ asset('bundles/adminlte/icons/cocinanew.png') }}" id="logo-kitchen" alt=""></button> 
                    {# <button class="floating-bind" data-toggle="modal" data-target="#tiendaModal" id="boton-desde-otro-lugar"><i class="fa-solid fa-cart-shopping"></i></button> #}
                </div>    
            </div>
        </div>
        
      </div>
    </div>
  </div>
</div>
{# Fin modal control mesa #}
<div class="modal fade" id="descuentoModal" data-bs-focus="false" role="dialog" aria-labelledby="descuentoModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="descuentoModalLabel">Aplicar Descuento en mesa</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">X</span>
        </button>
      </div>
      <div class="modal-body">
        <div class="form-group">
          <label for="descuentoPorcentajeInput">Descuento (%)</label>
          <input type="number" class="form-control" id="descuentoPorcentajeInput" placeholder="Ingrese el descuento porcentaje">
        </div>
        <div class="form-group">
          <label for="descuentoEurosInput">Descuento (€)</label>
          <input type="number" class="form-control" id="descuentoEurosInput" placeholder="Ingrese el descuento en euros">
        </div>
      </div>
    </div>
  </div>
</div>

{# Modal descuento mesa #}
{# Fin modal descuento mesa #}

{# Modal opciones de plato/pedido #}
<div class="modal fade" id="modalOpciones" data-bs-focus="false" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg modal-dialog-left" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="titulo-comida"></h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">X</span>
        </button>
      </div>
      <div class="modal-body">
        <!-- Botones para sumar y restar -->
        <button type="button" class="btn btn-primary" onclick="sumarProducto()" id="sumar">Añadir</button>
        <button type="button" class="btn btn-danger" onclick="eliminarProducto()" id="restar">Eliminar</button><br>
        
        <!-- Checkbox para invitar -->
        {% if is_granted('ROLE_ADMIN') %}
            <div class="form-group">
                <label for="descuentoInputP">Descuento (%):</label>
                <input type="number" class="form-control" id="descuentoInputP">
            </div>
            <div class="form-group">
                <label for="descuentoInputE">Descuento (€):</label>
                <input type="number" class="form-control" id="descuentoInputE">
            </div>
            <div class="form-group form-check">
                <input type="checkbox" class="form-check-input" id="invitarCheck">
                <label class="form-check-label" for="invitarCheck">Invitar</label>
            </div>
        {% endif %}
      </div>
    </div>
  </div>
</div>

{# Fin Modal opciones de plato/pedido #}

{# Modal para el cambio en efectivo #}
<div class="modal fade modal-right" id="efectivoModal" data-bs-focus="false" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">Ingresa el efectivo recibido</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <!-- Input para agregar un valor -->
        <input type="text" id="cambioInput" class="form-control" placeholder="Ingresa un valor">
        <span id="cambioEfectivo"></span>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
        <button type="button" class="btn btn-primary" id="calcular-cambio">Ver cambio</button>
      </div>
    </div>
  </div>
</div>
{# Fin de modal para el cambio en efectivo #}

{# Modal para observaciones #}
<div class="modal fade" id="observacionesModal" data-bs-focus="false" aria-labelledby="observacionesModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-left">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="observacionesModalLabel">Observaciones</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <label for="swal2-input" class="form-label">Añade un comentario</label>
        <input class="form-control" name="input-observaciones" id="swal2-input" placeholder="" type="text">
        <div style="display: flex; flex-direction: column; align-items: center;">
            <label style="margin-bottom: 10px;">Orden platos</label>
            <div style="display: flex; flex-wrap: wrap; justify-content: center;">
                <div style="display: flex; align-items: center; margin-right: 20px;">
                    <input class="" id="plato-1" name="plato" placeholder="" type="radio" value="1">
                    <label for="plato-1" class="form-label" style="text-align: center;">1º Plato</label>
                </div>
                <div style="display: flex; align-items: center;">
                    <input class="" id="plato-2" name="plato" placeholder="" type="radio" value="2">
                    <label for="plato-2" class="form-label" style="text-align: center;">2º Plato</label>
                </div>
            </div>
            <div style="display: flex; flex-wrap: wrap; justify-content: center;">
                <div style="display: flex; align-items: center; margin-right: 20px;">
                    <input class="" id="plato-3" name="plato" placeholder="" type="radio" value="3">
                    <label for="plato-3" class="form-label" style="text-align: center;">3º Plato</label>
                </div>
                <div style="display: flex; align-items: center;">
                    <input class="" id="plato-4" name="plato" placeholder="" type="radio" value="4">
                    <label for="plato-postre" class="form-label" style="text-align: center;">Postre</label>
                </div>
            </div>
        </div>
        <label class="form-label" for="listaSuplementos">Suplementos</label>
        <div id="suplementosContainer"></div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
        <button type="button" class="btn btn-primary" id="guardar-observaciones">Guardar</button>
      </div>
    </div>
  </div>
</div>

{# Fin del modal de observaciones #}

<!-- Modal Unión de mesas-->
<div class="modal fade" id="modalBind" data-bs-focus="false" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-500" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">Unión de mesas</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close" id="x-modal">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <div class="form-group">
          <label for="select1">Selecciona la mesa principal</label>
          <select class="form-control" id="select1">
            <option disabled selected>Seleciona la mesa principal</option>
            {% for mesa in mesasall %}
                {% if mesa.loc is not same as primerazona  %}
                    <option id="p-{{mesa.numero}}" value="{{mesa.numero}}" style="display:none;">Mesa {{mesa.numero}}</option>
                {% else %}
                    <option id="p-{{mesa.numero}}" value="{{mesa.numero}}">Mesa {{mesa.numero}}</option>
                {% endif %}
            {% endfor %}
          </select>
        </div>
        <div class="form-group">
          <label for="select2">Selecciona las mesas que se unen (multi-selección)</label>
          <select multiple class="form-control" id="select2" style="height: 262px;">
            {% for mesa in mesasall %}
             {% if mesa.loc is not same as primerazona  %}
                    <option id="u-{{mesa.numero}}" value="{{mesa.numero}}" style="display:none;">Mesa {{mesa.numero}}</option>
                {% else %}
                    <option id="u-{{mesa.numero}}" value="{{mesa.numero}}">Mesa {{mesa.numero}}</option>
                {% endif %}  
            {% endfor %}
          </select>
        </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal" id="close-modal">Cerrar</button>
        <button type="button" class="btn btn-primary" data-dismiss="modal" id="save-change">Guardar cambios</button>
      </div>
    </div>
  </div>
</div>

{# Modal papelera #}

<div class="modal fade" data-bs-focus="false" id="modalPapelera" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable" style="max-width: 90%;">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="modalPapeleraLabel"> Papelera de reciclaje </h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">X</span>
        </button>
      </div>
      <div class="modal-body">
        <div  class="row">
            <div class="col-12" style="display: flex;flex-direction: column;">
             	<div id="appPapelera"></div>
            </div>
        </div>
      </div>
    </div>
  </div>
</div>
{# Fin modal control mesa #}

    <div class="container container-mesas" id="contenedor-mesas">
        <div class="row display-mesas-lista" id="display-mesas-lista">
            <div class="col-12" id="visual-mesas">
                <div class="dist-mesas" id="dist-mesas">
                <div class="div-padlock d-sm-flex d-none">
                    <button id="padlock-button" onclick="habilitarMovimiento()">
                        <i id="icon-dist" class="fa-solid fa-lock"></i>
                    </button>
                </div>
                </div>
            </div>                    
        </div>
        
        <div class="row" style="padding:15px;">
            <div class="col-sm-6 col-xs-12" id="cuadro-uniones">
                <div class="mesa-uniones">
                    <div class="mesa-principal">
                        <h4>Mesa principal</h4>
                        <ul id="lista-mesas-principal" style="display: flex;justify-content: center;">
                            {% for mesa_unida in uniones %}
                            <li style="padding:7.5px 4px 4px 10px;" id="principal-{{mesa_unida.numero}}">{{mesa_unida.numero}}</li>
                            {% endfor %}
                        </ul>
                    </div>
                    <div class="mesas-unidad">
                        <h4>Mesas unidas</h4>
                        <ul id="lista-mesas-unidas" style="display: inline-block;">
                            {% for mesa_unida in uniones %}
                            <li class="lista-unidas" id="unida-{{mesa_unida.numero}}">
                                <div class="row" style="display: flex;flex-direction: row;align-items: center;">
                                <div class="col-sm-6">{{ mesa_unida.union_mesas|join(', ') }}</div>
                                <div class="col-sm-6">
                                    <button class="btn btn-primary" onclick="eliminarUnion('{{mesa_unida.numero}}')" id="eliminar-union" style="width: 31px; padding: 2px;">
                                    <i class="fas fa-trash"></i>
                                    </button>
                                </div>
                                </div>
                            </li>
                            {% endfor %}
                        </ul>
                    </div>
                </div>
            </div>
            <div class="col-sm-6 col-xs-12">
                <div class="button-site">
                    
                </div>
            </div>
        </div>
        {# <div class="div-bind">
            <div class="button-bind">
                    <button class="show-hide-button" id="mobile-show-hide-button"><i class="fa-solid fa-arrow-left"></i></button>
            </div>
        </div> #}            

        <div class="additional-content d-none d-sm-flex">
            <button class="floating-trash" id="papelera-icon" onclick="mostrarPapelera()"><img src="{{ asset('bundles/adminlte/icons/cubobasura.png') }}" style="width:48px;" alt=""></button>
            <button class="floating-bind" data-toggle="modal" data-target="#modalBind"><i class="fa-solid fa-arrow-right" style="padding: 2px;"></i><i class="fa-solid fa-arrow-left" style="padding: 2px;"></i></button>
            {% for zona in zonas %}
                <button class="" id="" onclick="cambiarLocalizacion('{{ path('list_comida') }}', '{{ zona.id }}')">
                    {# <img src="{{ asset('bundles/adminlte/icons/barra.png') }}" style="width:48px;" alt=""> #}
                    <span>{{zona.name}}</span>
                </button>
            {% endfor %}

            {# <button class="floating-bind" data-toggle="modal" data-target="#tiendaModal" id="boton-desde-primer-lugar"><i class="fa-solid fa-cart-shopping"></i></button> #}
          
            {# #}
            
            {# <button class="floating-printer" id="floating-printer" onclick="probarImpresora()"><img src="{{ asset('bundles/adminlte/icons/impresoranew.png') }}" style="width:48px;" alt=""></button> #}
        </div>

    
    </div>

    {# Modal para transferir pedidos de una mesa a otra #}

        <div class="modal" id="transferModal" tabindex="-1" data-bs-focus="false" aria-labelledby="transferModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Traspasa pedidos de una mesa</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- Segundo Select -->
                <div class="form-group mb-3">
                <label for="select2" class="form-label">Mesa objetivo: </label>
                <select class="form-control" id="select2-mesa">
                <option disabled selected>Selecciona una mesa</option>
                    {% for mesa in mesasall %}
                        <option value="{{ mesa.id }}">{{ mesa.numero }}</option>
                    {% endfor %}
                </select>
                </div>
            </div>
            <div class="modal-footer">
                {# <button type="button" class="btn btn-secondary" data-dismiss="modal">Cerrar</button> #}
                <button type="button" class="btn btn-primary" onclick="traspasarPedidos()">Traspasar comanda</button>
            </div>
            </div>
        </div>
        </div>


    {# Fin de Modal para transferir pedidos de una mesa a otra  #}

    {# Modal para la tienda #}
        <div class="modal fade" data-bs-focus="false" id="tiendaModal" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-xl" role="document">
                <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Buscar Productos</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <!-- Input para búsqueda en tiempo real -->
                    <input type="text" id="searchInput" class="form-control" placeholder="Escribe para buscar productos..."><br>
                    <ul id="searchResults" style="z-index:99;position: absolute;"></ul><br>
                    <label for="select1" id="label-seleccion-mesa">Selecciona la mesa principal</label>
                    <select class="form-control" id="selectmesa-tienda">
                        <option disabled selected>Seleciona la mesa principal</option>
                        {% for mesa in mesasall %}
                                <option id="p-{{mesa.numero}}" value="{{mesa.numero}}">Mesa {{mesa.numero}}</option>
                        {% endfor %}
                    </select>
                    <div style="display:flex;justify-content:space-between;">
                        <span><strong>Productos Seleccionados</strong></span>
                        <div><strong>Total: <span id="total-tienda"></span>€</strong></div>
                    </div>
                    
                    <!-- Lista para mostrar los productos seleccionados -->
                    <ul id="selectedProducts" class="list-group mt-3">
                    <!-- Aquí se mostrarán los productos seleccionados -->
                    </ul>
                    <!-- Div para mostrar resultados de la búsqueda -->
                    
                </div>
                <div class="container-payments">
                    <div class="div-cobros">
                        <div>
                            <button class="btn btn-primary" id="button-tarjeta" onclick="getTicketAttributes()"><i class="fa-solid fa-credit-card"></i> Sacar Ticket</button>
                        </div>
                        <div>
                            <button class="btn btn-primary" id="button-tarjeta" onclick="getDataAttributes('tarjeta')"><i class="fa-solid fa-credit-card"></i> Tarjeta</button>
                        </div>
                        <div>
                            <button class="btn btn-primary" id="button-efectivo" onclick="getDataAttributes('efectivo')"><i class="fa-solid fa-money-bill"></i> Efectivo</button>
                        </div>
                        <div>
                            <button class="btn btn-primary" id="button-añadir-mesa" onclick="añadirMesa()"  data-dismiss="modal">Añadir Mesa</button>
                        </div>
                        <div>
                            <select class="custom-select" name="select-tax" id="tax-shop">
                            <option value="" disabled selected> Selecciona el IVA</option>
                            <option value="10"> 10% </option>
                            <option value="21"> 21% </option>
                        </select>
                        </div>    
                        
                    </div>
                </div>
                
                
                </div>  
            </div>
        </div>
    {# Fin Modal para la tienda #}

    {# Modal para la tienda #}
       
    {# Fin Modal para la tienda #}

{% endif %}
</body>
<script>

let isLocked = false;


function habilitarMovimiento(){
    const toggleButton = document.getElementById('padlock-button');
    const icon = document.getElementById('icon-dist');

      // Verificar la clase actual del ícono
    if (icon.classList.contains('fa-lock')) {
        // Si la clase actual es 'fa-lock', cambiarla a 'fa-unlock'
        icon.classList.remove('fa-lock');
        icon.classList.add('fa-unlock');
        isLocked = true;
    } else {
        // Si la clase actual no es 'fa-lock', cambiarla a 'fa-lock'
        icon.classList.remove('fa-unlock');
        icon.classList.add('fa-lock');
        isLocked = false;
    }



}


    $(document).ready(function() {
    $('#searchInput').on('input', function() {
        var searchTerm = $(this).val();
        if (searchTerm.length > 0) {
        // Realizar la llamada AJAX al script PHP para buscar productos
        $.ajax({
            url: "{{ path('buscar') }}",
            method: 'POST',
            data: { term: searchTerm },
            success: function(response) {
            // Limpiar los resultados anteriores
                    $('#searchResults').empty();

                    // Procesar los datos devueltos y construir las opciones de búsqueda
                    var productos = response.busqueda;
                    productos.forEach(function(producto) {
                        var html = '<div class="product-item list-group-item" style="cursor:pointer;" data-id="'+ producto.id+'">' + producto.nombre + '.................................. €'+producto.precio+'</div>';
                        $('#searchResults').append(html);
                    });
            }
        });
        } else {
        $('#searchResults').empty();
        }
    });
    });

$(document).ready(function() {
    var total = 0; // Inicializar el total a 0

    // Función para agregar un producto a la lista de productos seleccionados
    function addProductToCart(productName, price, productID) {
        var listItem = $('<li class="list-group-item" data-id="'+productID+'" data-quantity="1" data-price="' + price + '" style="display: flex;justify-content: space-between;">' +
            '<div>'+productName+'</div>' + // Nombre del producto
            '<div><strong>'+
            '<span class="">X</span>' +
            '<span class="quantity">1</span>' + // Contador de cantidad inicializado en 1
            '<span class="line-total"> €' + price.toFixed(2) + '</span>' + // Precio total por línea inicializado
            '</strong></div>'+
            '<div>'+
            '<button class="btn btn-sm btn-success btn-add">Añadir</button>' + // Botón "Añadir"
            '<button class="btn btn-sm btn-danger btn-remove">Eliminar</button>' + // Botón "Eliminar"
            '</div>'+
            '</li>');

        // Manejar el clic en el botón "Eliminar" dentro del elemento de la lista
        listItem.find('.btn-remove').click(function() {
            removeProduct(listItem); // Llamar a la función para eliminar el producto
        });

        // Manejar el clic en el botón "Añadir" dentro del elemento de la lista
        listItem.find('.btn-add').click(function() {
            var itemPrice = parseFloat(listItem.data('price')); // Obtener el precio del producto por unidad
            var quantity = parseInt(listItem.find('.quantity').text()); // Obtener la cantidad actual

            // Incrementar la cantidad y actualizar el contador
            quantity++;
            listItem.find('.quantity').text(quantity);

             listItem.attr('data-quantity', quantity); // Modificar el atributo data-quantity

            // Calcular y mostrar el nuevo precio total por línea
            var lineTotal = itemPrice * quantity;
            listItem.find('.line-total').text(' €' + lineTotal.toFixed(2));

            // Sumar el precio del producto al total
            total += itemPrice;
            $('#total-tienda').text(total.toFixed(2)); // Mostrar el total actualizado
        });

        // Agregar el nuevo elemento de la lista a #selectedProducts
        $('#selectedProducts').append(listItem);

        // Actualizar el total sumando el precio del producto
        total += price;
        $('#total-tienda').text(total.toFixed(2)); // Mostrar el total con dos decimales
    }

    // Función para eliminar un producto de la lista de productos seleccionados
    function removeProduct(listItem) {
        var itemPrice = parseFloat(listItem.data('price')); // Obtener el precio del producto por unidad
        var quantity = parseInt(listItem.find('.quantity').text()); // Obtener la cantidad actual

        // Restar el precio total por línea del producto eliminado
        var lineTotal = itemPrice * quantity;
        total -= lineTotal;
        $('#total-tienda').text(total.toFixed(2)); // Mostrar el total actualizado

        // Eliminar el elemento de la lista de productos seleccionados
        listItem.remove();
    }

    // Manejar el clic en un elemento .product-item para agregarlo al carrito
    $(document).on('click', '.product-item', function() {
        var productName = $(this).text().trim();
        var regex = /(\d+\.\d+)/; // Expresión regular para encontrar un número decimal
        var match = regex.exec(productName);
        var productID = $(this).data('id');

        if (match) {
            var price = parseFloat(match[0]); // Convertir el precio a número decimal
            addProductToCart(productName, price, productID); // Agregar el producto al carrito
        } else {
            // Si no se encuentra ningún número, simplemente agregar el nombre del producto sin precio
            addProductToCart(productName, 0); // Agregar el producto al carrito con precio 0
        }

        // Limpiar el input de búsqueda
        $('#searchInput').val('');
        // Vaciar los resultados de la búsqueda
        $('#searchResults').empty();
    });
});

function getDataAttributes(metodoPago) {

    
    var dataArray = []; // Array para almacenar los datos de los elementos
    // Seleccionar todos los elementos <li> con la clase list-group-item
    $('.list-group-item').each(function() {
        var dataObject = {}; // Objeto para almacenar los datos de un elemento

        // Obtener todos los atributos data del elemento actual
        var dataAttributes = $(this).data();

        // Iterar sobre los atributos data y agregarlos al objeto dataObject
        $.each(dataAttributes, function(key, value) {
            dataObject[key] = value;
        });

        // Agregar el objeto dataObject al array dataArray
        dataArray.push(dataObject);
    });

    var totalTienda = document.getElementById('total-tienda').innerText;
    var iva = document.getElementById('tax-shop').value;


    if( iva !== ''){


    if(metodoPago === 'efectivo'){
        Swal.fire({
            title: 'Introduce el monto:',
            input: 'text',
            showCancelButton: true,
            confirmButtonText: 'Calcular',
            preConfirm: (monto) => {
                $.ajax({
                                url: "{{ path('cambio_efectivo') }}",
                                type: 'POST',
                                data: {
                                    total: totalTienda,
                                    
                                },
                                success: function (response) {

                                    if(response.message){
                                        swal.fire('Error' , response.message, 'error');


                                    } else {                                    

                                    var efectivo = parseFloat(monto)
                                    var total = parseFloat(response.total)
                                    var cambio = efectivo - totalTienda

                                    Swal.fire({
                                            title: 'Cambio a devolver:',
                                            html: `<span><strong>${cambio.toFixed(2)}€</strong></span>`,
                                            icon: 'success',
                                            timer: 3000, // 3000 milisegundos = 3 segundos
                                        });

                                    }
                                    sendDataToServer(dataArray, totalTienda, metodoPago, iva);
                                },
                                    error: function(xhr, status, error) {
                                      console.log("No se ha podido obtener el cambio");
                                   }
                            
                        
                    });
            }
        })


    } else {

        sendDataToServer(dataArray, totalTienda, metodoPago, iva);
    }

    } else {

        Swal.fire({
                    title: 'Debes seleccionar el IVA',
                    icon: 'error',
                    timer: 3000, // 3000 milisegundos = 3 segundos
                });


    }
    

    

   
}
function getTicketAttributes() {

    
    var dataArray = []; // Array para almacenar los datos de los elementos
    // Seleccionar todos los elementos <li> con la clase list-group-item
    $('.list-group-item').each(function() {
        var dataObject = {}; // Objeto para almacenar los datos de un elemento

        // Obtener todos los atributos data del elemento actual
        var dataAttributes = $(this).data();

        // Iterar sobre los atributos data y agregarlos al objeto dataObject
        $.each(dataAttributes, function(key, value) {
            dataObject[key] = value;
        });

        // Agregar el objeto dataObject al array dataArray
        dataArray.push(dataObject);
    });

    var totalTienda = document.getElementById('total-tienda').innerText;
    var iva = document.getElementById('tax-shop').value;



        if(iva){
            sendTicketToServer(dataArray, totalTienda, iva);

        } else {

            swal.fire('Selecciona el tipo de IVA' , '', 'error');

        }
   

        
    

    

   
}

function sendDataToServer(dataArray, totalTienda, metodoPago, iva) {

     let datosEnvio = {
        datos: JSON.stringify(dataArray), // Necesitamos convertir este array a JSON para enviarlo como string
        total: parseFloat(totalTienda),
        metodopago: metodoPago,
        iva: parseInt(iva)
    };
    // Hacer una llamada AJAX para enviar los datos al servidor
    $.ajax({
        url: "{{ path('generarVentaTienda') }}", // URL a la que enviar los datos
        type: 'POST', // Método HTTP para la solicitud
        contentType: 'application/x-www-form-urlencoded', // Tipo de contenido de la solicitud
        data: datosEnvio, // Convertir el array a JSON y enviarlo en el cuerpo de la solicitud

        success: function(response) {
            swal.fire('Venta realizada' , '', 'success');
            // Aquí puedes manejar la respuesta del servidor si es necesario

           
        },
        error: function(xhr, status, error) {
            console.error('Error al enviar datos:', error);
            // Aquí puedes manejar los errores de la solicitud AJAX si es necesario
        }
    });

     // Obtener el elemento ul por su id
            var ul = document.getElementById("selectedProducts");

            // Eliminar todos los elementos li dentro del ul
            while (ul.firstChild) {
                ul.removeChild(ul.firstChild);
            }

            // Obtener el elemento span por su id
            var span = document.getElementById("total-tienda");

            // Establecer el contenido del span en una cadena vacía
            span.textContent = "";
}

function sendTicketToServer(dataArray, totalTienda, iva) {

     let datosEnvio = {
        datos: JSON.stringify(dataArray), // Necesitamos convertir este array a JSON para enviarlo como string
        total: parseFloat(totalTienda),
        iva: parseInt(iva)
    };
    // Hacer una llamada AJAX para enviar los datos al servidor
    $.ajax({
        url: "{{ path('generarTicketTienda') }}", // URL a la que enviar los datos
        type: 'POST', // Método HTTP para la solicitud
        contentType: 'application/x-www-form-urlencoded', // Tipo de contenido de la solicitud
        data: datosEnvio, // Convertir el array a JSON y enviarlo en el cuerpo de la solicitud

        success: function(response) {

           
        },
        error: function(xhr, status, error) {
            console.error('Error al enviar datos:', error);
            // Aquí puedes manejar los errores de la solicitud AJAX si es necesario
        }
    });
}


function añadirMesa(){

    if(numMesa !== null){

        var buttonEfectivo = document.getElementById('button-efectivo');
        var buttonTarjeta = document.getElementById('button-tarjeta');

        buttonEfectivo.style.display="none";
        buttonTarjeta.style.display="none";

        var select = document.getElementById("selectmesa-tienda");

        for (var i = 0; i < select.options.length; i++) {
            if (select.options[i].value == numMesa) {
                select.options[i].selected = true;
                break; // Una vez que se ha encontrado la opción, no es necesario continuar iterando
            }
        }

    // Obtener el valor seleccionado
    var valorSeleccionado = select.value;

    if(valorSeleccionado !== "Seleciona la mesa principal"){
        var dataArray = []; // Array para almacenar los datos de los elementos
    // Seleccionar todos los elementos <li> con la clase list-group-item
    $('.list-group-item').each(function() {
        var dataObject = {}; // Objeto para almacenar los datos de un elemento

        // Obtener todos los atributos data del elemento actual
        var dataAttributes = $(this).data();

        // Iterar sobre los atributos data y agregarlos al objeto dataObject
        $.each(dataAttributes, function(key, value) {
            dataObject[key] = value;
        });

        // Agregar el objeto dataObject al array dataArray
        dataArray.push(dataObject);
    });

    var totalTienda = document.getElementById('total-tienda').innerText;

    var mesa = document.getElementById('selectmesa-tienda').value; 


                $.ajax({
						 url: "{{ path('añadir_mesa_tienda') }}", // URL a la que enviar los datos
                        type: 'POST', // Método HTTP para la solicitud
                        contentType: 'application/json', // Tipo de contenido de la solicitud
                        data: JSON.stringify({ datos: dataArray, mesa: mesa }), 
						success: function (response) {
							if(response.info){
								Swal.fire({
								title: response.info,
								text: 'No puedes añadir este producto a la mesa ya que no quedan existencias',
								icon: 'warning',
								confirmButtonText: 'OK'
								});


							} else {
								// Eliminar todo el contenido anterior excepto el label
								var lista = $('#mi-lista');
								for (var i = 0; i < response.pedido_mesa.length; i++) {
									{# var item = $('<strong><li id="'+response.pedido_mesa[i].id+'" data-invi="'+response.pedido_mesa[i].invitacion+'" data-info="'+response.pedido_mesa[i].pedido_mesa+'" class="li-comida" >'+response.pedido_mesa[i].comida+'.............'+response.pedido_mesa[i].precio+'</strong>€</li>'); #}
                                   var comida = response.pedido_mesa[i].comida;
                                   var comidaSinStrong = response.pedido_mesa[i].comida;
                                    var precio = response.pedido_mesa[i].precio.toFixed(2) + '€'; // Formateamos el precio a dos decimales

                                // Creamos los divs para cada parte del contenido utilizando Bootstrap grid system
                                var $comidaDiv = $('<div id="none-select" class="col-4 col-sm-3 col-md-2 col-lg-5" style="display:flex;justify-content: flex-end;"></div>').text(comida); // Div para la comida
                                var $puntosDiv = $('<div id="none-select" class="col-4 col-sm-3 puntos"></div>'); // Div para los puntos
                                var $precioDiv = $('<div id="none-select" class="col-4 col-sm-3 col-md-3 col-lg-3 precio"></div>').text(precio);

                                var item = $('<div class="row"  id="'+response.pedido_mesa[i].id+'" data-name="'+comida+'" data-invi="'+response.pedido_mesa[i].invitacion+'" data-info="'+response.pedido_mesa[i].pedido_mesa+'" data-desc%="'+response.pedido_mesa[i].descP+'" data-desc€="'+response.pedido_mesa[i].descE+'"></div>');
                                    item.append($comidaDiv, $puntosDiv, $precioDiv);


                                // Creamos el contenedor principal del li
                                var li = $('<li class="row li-pedido"></li>');
                                

                                // Añadimos los divs al contenedor principal
                                li.append(item);

                                // Agregamos el item al DOM antes de calcular dimensiones
                                $('#mi-lista').append(li);

                                // Calculamos el ancho disponible para $comidaDiv
                                var anchoDisponible = item.width() - $precioDiv.outerWidth(true) - $puntosDiv.outerWidth(true);

                                // Eliminamos el elemento del DOM una vez que hayamos terminado de calcular las dimensiones
                                item.remove();

                                var puntos = 50;

                                if(esTablet()){
                                    puntos = 25
                                } else if (esMovil()) {
                                    puntos = 20
                                }


                                {# $puntosDiv.text('.'.repeat(puntos)); #}
										(function(item) {
                                                item.on('click', function() {
                                                    new bootstrap.Modal(document.querySelector("#modalOpciones")).show();
                                                     var tituloOperaciones = document.getElementById('titulo-comida');
                                                    tituloOperaciones.textContent = item.data('name');
                                                    pedidoDatos = item.data('info');
                                                    if (item.data('invi') == '1') {
                                                        $('#invitarCheck').prop('checked', true);
                                                    } else {
                                                        $('#invitarCheck').prop('checked', false);
                                                    }
                                                    if (item.data('desc%') !==  null) {
                                                        $('#descuentoInputP').val(item.data('desc%'));
                                                    } else {
                                                        $('#descuentoInputP').val('');
                                                    }
                                                    if (item.data('desc€') !==  null) {
                                                        $('#descuentoInputE').val(item.data('desc€'));
                                                    } else {
                                                        $('#descuentoInputE').val('');
                                                    }

                                                    
                                                    
                                                });
                                                var tiempoUmbral = 200; // Tiempo en milisegundos para considerar que se ha mantenido pulsado
                                                var tiempoInicio; // Variable para almacenar el tiempo de inicio del toque

                                                item.on('touchstart', function(event) {
                                                    tiempoInicio = new Date().getTime(); // Guardamos el tiempo actual
                                                    // Ejecutar cualquier acción que desees cuando se comienza a mantener pulsado el elemento
                                                });

                                                item.on('touchend', function(event) {
                                                    var tiempoFin = new Date().getTime(); // Tiempo actual al levantar el dedo
                                                    var tiempoTranscurrido = tiempoFin - tiempoInicio; // Tiempo transcurrido desde que se empezó a mantener pulsado

                                                    if (tiempoTranscurrido >= tiempoUmbral) {
                                                        // Se ha mantenido pulsado durante el tiempo umbral
                                                        // Ejecutar cualquier acción adicional que desees
                                                        $(this).toggleClass('selected'); // añade/quita clase "selected"
                                                        var itemId = $(this).attr('id');
                                                        if ($(this).hasClass('selected')) {
                                                            var datosPedido = {
                                                                    itemId: itemId,
                                                                    pedidoDatos: item.data('info')
                                                                };
                                                            elementosSeleccionados.push(datosPedido);
                                                        } else {
                                                            elementosSeleccionados.splice(elementosSeleccionados.indexOf(itemId), 1);
                                                        }
                                                    } else {
                                                        // El tiempo de pulsado no alcanzó el umbral, se trató de un toque corto
                                                        // Ejecutar acciones alternativas si es necesario
                                                    }
                                                });

                                                item.on('mousedown', function() {
                                                tiempoInicio = new Date().getTime(); // Guardamos el tiempo actual
                                                // Ejecutar cualquier acción que desees cuando se comienza a mantener pulsado el elemento
                                                });

                                            item.on('mouseup', function() {
                                                var tiempoFin = new Date().getTime(); // Tiempo actual al soltar el clic
                                                var tiempoTranscurrido = tiempoFin - tiempoInicio; // Tiempo transcurrido desde que se empezó a mantener pulsado

                                                if (tiempoTranscurrido >= tiempoUmbral) {
                                                    // Se ha mantenido pulsado durante el tiempo umbral
                                                    // Ejecutar cualquier acción adicional que desees
                                                    $(this).toggleClass('selected'); // añade/quita clase "selected"
                                                        var itemId = $(this).attr('id');
                                                        if ($(this).hasClass('selected')) {
                                                            var datosPedido = {
                                                                    itemId: itemId,
                                                                    pedidoDatos: item.data('info')
                                                                };
                                                                elementosSeleccionados.push(datosPedido);
                                                        } else {
                                                            elementosSeleccionados.splice(elementosSeleccionados.indexOf(itemId), 1);
                                                        }
                                                } else {
                                                    // El tiempo de pulsado no alcanzó el umbral, se trató de un clic corto
                                                    // Ejecutar acciones alternativas si es necesario
                                                }
                                            });
                                            })(item);
										lista.prepend(item)
                                        totalMesa += parseFloat(response.pedido_mesa[i].precio.toFixed(2))
                                    $('#total-label').text('Total = '+totalMesa+'€')								}

								// Agregar la lista detrás del label
								$('#view-table-dash label').after(lista);

							}

                            // Selecciona el elemento <ul> por su id
                            const ulElement = document.getElementById('selectedProducts');

                            // Mientras el <ul> tenga el primer hijo <li>, elimínalo
                            while (ulElement.firstChild) {
                                ulElement.removeChild(ulElement.firstChild);
                            }

                            jQuery("#tiendaModal").modal("hide");
						
						},
						error: function (response) {
								console.log(response);
								
						}
						});

    } else {
        swal.fire('Error' , 'Selecciona una mesa', 'error');

    }


    } else {

        var select = document.getElementById("selectmesa-tienda");

    // Obtener el valor seleccionado
    var valorSeleccionado = select.value;

    if(valorSeleccionado !== "Seleciona la mesa principal"){
        var dataArray = []; // Array para almacenar los datos de los elementos
    // Seleccionar todos los elementos <li> con la clase list-group-item
    $('.list-group-item').each(function() {
        var dataObject = {}; // Objeto para almacenar los datos de un elemento

        // Obtener todos los atributos data del elemento actual
        var dataAttributes = $(this).data();

        // Iterar sobre los atributos data y agregarlos al objeto dataObject
        $.each(dataAttributes, function(key, value) {
            dataObject[key] = value;
        });

        // Agregar el objeto dataObject al array dataArray
        dataArray.push(dataObject);
    });

    var totalTienda = document.getElementById('total-tienda').innerText;

    var mesa = document.getElementById('selectmesa-tienda').value; 


     $.ajax({
        url: "{{ path('añadir_mesa_tienda') }}", // URL a la que enviar los datos
        type: 'POST', // Método HTTP para la solicitud
        contentType: 'application/json', // Tipo de contenido de la solicitud
        data: JSON.stringify({ datos: dataArray, mesa: mesa }), // Convertir el array a JSON y enviarlo en el cuerpo de la solicitud

        success: function(response) {
            swal.fire('Añadido' , 'Se ha añadido correctamente', 'success');
            // Aquí puedes manejar la respuesta del servidor si es necesario

            // Obtener el elemento ul por su id
                var ul = document.getElementById("selectedProducts");

                // Eliminar todos los elementos li dentro del ul
                while (ul.firstChild) {
                    ul.removeChild(ul.firstChild);
                }

                // Obtener el elemento span por su id
                var span = document.getElementById("total-tienda");

                // Establecer el contenido del span en una cadena vacía
                span.textContent = "";

                new bootstrap.Modal(document.querySelector("#tiendaModal")).hide();
        },
        error: function(xhr, status, error) {
            console.error('Error al enviar datos:', error);
            // Aquí puedes manejar los errores de la solicitud AJAX si es necesario
        }
    });

    } else {
        swal.fire('Error' , 'Selecciona una mesa', 'error');

    }


    }

}

 $('#tiendaModal').on('show.bs.modal', function (e) {
        var modalOrigin = e.relatedTarget; // El botón que abrió el modal
        if (modalOrigin && modalOrigin.id === 'boton-desde-otro-lugar') {
            // Si el modal fue abierto desde otro lugar, ocultamos el botón "Añadir Mesa"
            $('#button-tarjeta').hide();
            $('#button-efectivo').hide();
            $('#selectmesa-tienda').hide();
            $('#label-seleccion-mesa').text('Mesa:' + numMesa);
        } else {
            // Si no, mostramos el botón "Añadir Mesa"
            $('#button-añadir-mesa').show();
            $('#button-tarjeta').show();
            $('#button-efectivo').show();
            $('#label-seleccion-mesa').text('Selecciona la mesa principal');
            $('#selectmesa-tienda').show();
        }
    });






    
        var barra = false;
        var numMesa;
        var elementosSeleccionados = []; // array para almacenar los IDs de los elementos seleccionados
        var zonaActual;
        var totalMesa = 0;
        var arrayComensales = {{mesasconcomensales|json_encode|raw}};
        var pedidoDatos;
        var arrayTotalPorZonas = {{total_zonas|json_encode|raw}}
        var idZona = {{ total_zonas|length > 0 ? (total_zonas|first).zona : 'default_value' }};




        function traspasarPedidos(){

        var mesa2 = $('#select2-mesa').val();

        // Realizar solicitud AJAX para enviar los datos al servidor
        $.ajax({
            url: "{{ path('traspasar_pedidos') }}", // URL del endpoint en el servidor
            method: 'POST', // Método HTTP (por ejemplo, POST)
            data: {
                mesa1: numMesa,
                mesa2: mesa2
            },
            success: function(response) {
                if(response.success){
                    {# swal.fire("¡Éxito!",response.success, "success"); #}

                    var img = document.getElementById('num-mesa-'+response.mesainicio);

                    if(img){
                        
                        var imgSrc = img.querySelector('img')
                        // Obtener la nueva ruta utilizando asset()
                        var nuevaRuta = "{{ asset('img/') }}"+response.icon;

                        // Cambiar el src de la imagen
                        imgSrc.src = nuevaRuta;
                    }

                    var imgElement = document.querySelector('#num-mesa-' + response.mesaobjetivo + ' img');

                    if(imgElement){
                        imgElement.src = "{{ asset('img/mesa-redonda.png') }}";
                    }
                    

                    arrayComensales = response.arraycomensales

                    document.getElementById('mi-lista').innerHTML = '';

                    // Actualizar el contenido del <label>
                    document.getElementById('total-label').textContent = 'Total = 0.00€';
                    document.getElementById('input-comensales').value = 0;

                }
            },
            error: function(xhr, status, error) {
                swal.fire("Erro!",error, "error");
            }
        });

        const select = document.getElementById('select2-mesa');
        select.selectedIndex = 0;

        // Cerrar el modal después de guardar
        new bootstrap.Modal(document.querySelector("#transferModal")).show();


        }

              $('#transferModal').on('shown.bs.modal', function () {

                const numeros = new Set(arrayComensales.map(item => item.numero));

                const select = document.getElementById('select2-mesa');

                // Recorrer las opciones del select y deshabilitar las que están en el Set
                for (let i = 0; i < select.options.length; i++) {
                    const option = select.options[i];
                    if (numeros.has(option.textContent.trim())) {
                        option.style.display = 'none';
                    } else {
                        option.style.display = '';
                    }
                }
            });

        
               
        
        
        // Jquery para poder seleccionar mas de una mesa a unir

        $(document).ready(function() {
        // Habilitar la selección de opciones en un multiselect con un solo clic
        $('#select2 option').mousedown(function(e) {
            e.preventDefault();
            $(this).prop('selected', !$(this).prop('selected'));
            return false;
        });
        });

        //Deshabilitamos del multiselect la opcion de la mesa principal seleccionada
        document.getElementById('select1').addEventListener('change', function () {
            // Deshabilitar la opción seleccionada en el select2 (mesas unidas)
            var selectedOption = this.options[this.selectedIndex];
            document.getElementById('select2').querySelector(`option[value="${selectedOption.value}"]`).setAttribute('disabled', true);
        });

        // Guardar mesas selecionadas

        $('#save-change').on('click', function () {
            // Handler para cuando se muestra el modal
            var selectedValues = {}; // Objeto para almacenar los valores seleccionados de cada select

            // Obtener los valores seleccionados de cada select
            $('#modalBind select').each(function() {
                var selectId = $(this).attr('id');
                var selectedOptions = $(this).val();
                selectedValues[selectId] = selectedOptions;
                
            });
            // establecer los selectores de vuelta a su estado inicial
            $('#select1').prop('selectedIndex', 0);
            $('#select2').prop('selectedIndex', -1);

            
            // Mostrar los valores seleccionados en una alerta
            $.ajax({
                url: "{{ path('unir_mesas') }}",
                data: { union: selectedValues},
                type: "POST",
                success: function(response){
                    
                    var options1 = '';
                    var options2 = '';
                    var isFirts = true;
                    
                    //Actualizamos el selector de uniones de mesas
                    var select1 = document.getElementById('p-'+response.nueva_union[0][0].select1);
                    select1.style.display="none";
                    
                    response.nueva_union[0][0].select2.forEach(function(element) {
                        var select2 = document.getElementById('u-'+element)
                        var select1 = document.getElementById('p-'+element)
                        select2.style.display="none";
                        select1.style.display="none";
                        if(isFirts){
                            var select1_in_select2 = document.getElementById('u-'+response.nueva_union[0][0].select1);
                            select1_in_select2.style.display="none";
                            isFirts = false;
                        }
                        
                    });


                    {# if(zonaActual === 'comedor'){
                        paginacion(mesasComedor, response.total_uniones)
                    } else if(zonaActual === 'terraza') {
                        
                        paginacion(mesasTerraza, response.total_uniones)
                    } #}

                    // Agregamos una nueva linea al unir mesa
                    $(document).ready(function() {
                    
                    var nuevaPrincipal = `
                    <li style="padding:7.5px 4px 4px 10px;" id="principal-${response.nueva_union[0][0].select1}">${response.nueva_union[0][0].select1}</li>
                    `;
                    

                    var nuevaUnion = `
                    <li style="padding: 5px 0px 0px 0px;width: 168px;" id="unida-${response.nueva_union[0][0].select1}">
                        <div class="row" style="display: flex; flex-direction: row; align-items: center;">
                        <div class="col-sm-6">${response.nueva_union[0][0].select2.toString()}</div>
                        <div class="col-sm-6">
                            <button class="btn btn-primary" onclick="eliminarUnion('${response.nueva_union[0][0].select1}')" style="width: 31px; padding: 2px;">
                            <i class="fas fa-trash"></i>
                            </button>
                        </div>
                        </div>
                    </li>
                    `;

                    // Agregar el nuevo elemento al final de la lista
                    $("#lista-mesas-principal").append(nuevaPrincipal);
                    $("#lista-mesas-unidas").append(nuevaUnion);
                    });

                    // Apartado de comedor, visualizar el comedor con respecto a la union de mesas
                    
                    //Cambiamos el label de la mesa principal con los numeros de las mesas unidas
                    var label = document.getElementById('mesa-'+response.nueva_union[0][0].select1);
                    var textoExistente = label.textContent;
                    var nuevoTexto = response.nueva_union[0][0].select2.toString();
                    label.textContent = textoExistente+',' + nuevoTexto;

                    // Display none para las mesas que se van a unir
                    response.nueva_union[0][0].select2.forEach(function(element) {
                        var mesa_unida = document.getElementById('num-mesa-'+element);
                        mesa_unida.style.display="none";
                    });

                    var labelTitleMesa = document.getElementById('tittle-mesa');
                    var ulLista = document.getElementById('mi-lista');
                    var labelTotal = document.getElementById('total-label');

                    labelTitleMesa.innerHTML = "";
                    ulLista.innerHTML = "";
                    labelTotal.innerHTML = "";


                }, 
                error: function(response){
                    console.log('Error al unir mesas');
                }

                

            })
        });

        // Limpiamos el modal una vez cerramos
        $('#x-modal').on('click', function () {
            $('#select1').prop('selectedIndex', 0);
            $('#select2').prop('selectedIndex', -1);

        })
        $('#close-modal').on('click', function () {
            $('#select1').prop('selectedIndex', 0);
            $('#select2').prop('selectedIndex', -1);

        })

        function eliminarUnion(idMesa){
            
            Swal.fire({
            title: '¿Estás seguro?',
            text: '¿Deseas eliminar la unión de mesas?',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Sí, eliminar',
            cancelButtonText: 'Cancelar'
            }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                url: "{{ path('separar_mesa') }}",
                method: 'POST',
                data: { idMesa: idMesa},
                success: function(response) {
                    
                    if(response.tiene_uniones){
                        Swal.fire('Advertencia', response.tiene_uniones, 'warning');

                    } else {
                    
                    Swal.fire('Eliminado', response.desunida, 'success');
                    $(document).ready(function() {
                    var listItem1 = document.getElementById('principal-'+idMesa);
                    var listItem2 = document.getElementById('unida-'+idMesa);
                    listItem1.remove(); 
                    listItem2.remove();
                    })
                    // Apartado de comedor, visualizar el comedor con respecto a la union de mesas
                    
                    //Cambiamos el label de la mesa principal con los numeros de las mesas unidas
                    var label = document.getElementById('mesa-'+response.desunion.numero);
                    var nuevoTexto = response.desunion.numero;
                    label.textContent = nuevoTexto;

                    // Display none para las mesas que se van a unir y rellenar los seleccionables con las mesas que se han liberado
                    response.desunion.union_mesas.split(',').forEach(function(element) {
                        var mesa_unida = document.getElementById('num-mesa-'+element);
                        mesa_unida.style.display="";
    
                        

                        var select2_fill = document.getElementById('u-'+element);
                        select2_fill.style.display="";
                        var select1_fill = document.getElementById('p-'+element);
                        select1_fill.style.display="";
                        var select1_in_select2_fill = document.getElementById('u-'+response.desunion.numero);
                        select1_in_select2_fill.style.display="";
                    });

                    var select1 = document.getElementById('p-'+response.desunion.numero);
                    select1.style.display="";

                    } 

                    {# if(zonaActual === 'comedor'){
                        paginacion(mesasComedor, response.total_uniones)
                    } else if(zonaActual === 'terraza') {
                        
                        paginacion(mesasTerraza, response.total_uniones)
                    } #}



                },
                error: function(xhr, status, error) {
                    
                    Swal.fire('Error', response.desunida, 'error');
                }
                });
            }
            });

        }




        // Array de mesas con uniones
        var array_uniones = {{mesas_con_uniones|json_encode|raw}}
        
        function tieneMesaUnida(uniones, numeroMesa) {
            
                if(uniones === numeroMesa){
                    return true;
                } else {
                    return false;
                }
        }
        
		// Obtener el elemento HTML donde se agregarán las imágenes de mesa
		var mesasContainer = document.getElementById("dist-mesas");
		
        var mesasComedor = {{id_comedor|json_encode|raw}};
        const mesasTerraza = {{id_terraza|json_encode|raw}};


        // Generar una cuadrícula de 4 filas por 4 columnas (16 imágenes en total)
            mesasComedor.forEach((mesaNumero) => {  

                if(array_uniones[mesaNumero.numero]){

                    var selectp = document.getElementById('p-'+ mesaNumero.numero);

                    selectp.style.display = 'none';

                    var selectu = document.getElementById('u-'+ mesaNumero.numero);

                    selectu.style.display = 'none';

                    arrayMesasUnidas = array_uniones[mesaNumero.numero].split(',');

                    for (const mesa of arrayMesasUnidas){

                    var selectpSecond = document.getElementById('p-'+ mesa);

                    selectpSecond.style.display = 'none';

                    var selectuSecond = document.getElementById('u-'+ mesa);

                    selectuSecond.style.display = 'none';

                    }



                }

                 // Verificar si el valor de 'i' está presente en algún contenido del objeto
            var encontrado = false;
            for (var key in array_uniones) {
                if (array_uniones.hasOwnProperty(key) && tieneMesaUnida(array_uniones[key], mesaNumero.numero)) {
                    encontrado = true;
                    break;
                }
            }

            if(esMovil()){
                mesasContainer.style.display = "flex";
                mesasContainer.style.flexDirection = "row";
                mesasContainer.style.flexWrap = "wrap";
                        if(!encontrado){
                    // Crear un contenedor para cada imagen de mesa
                        var mesaDiv = document.createElement("div");
                        mesaDiv.classList.add("col-sm-6", "col-md-4", "col-lg-2", "col-xs-3", "col-3", "unique-mesa");
                        mesaDiv.id="num-mesa-"+mesaNumero.numero;
                        
                    } else {
                        var mesaDiv = document.createElement("div");
                        mesaDiv.classList.add("col-sm-6", "col-md-4", "col-lg-2", "col-xs-3", "col-3", "unique-mesa");
                        mesaDiv.id="num-mesa-"+mesaNumero.numero;
                        mesaDiv.style.display="none";
                    }

            } else {
                if(!encontrado){
			// Crear un contenedor para cada imagen de mesa
                var mesaDiv = document.createElement("div");
                mesaDiv.classList.add("unique-mesa");
                mesaDiv.id="num-mesa-"+mesaNumero.numero;
               // Obtener el contenedor padre
                const parentContainer = document.getElementById('dist-mesas');

                // Obtener las dimensiones del contenedor padre
                const parentWidth = parentContainer.offsetWidth;
                const parentHeight = parentContainer.offsetHeight;

                // Definir un factor de escala para ajustar las coordenadas (solo para tablet)
                const scaleFactorX = esTablet() ? 0.50 : 1; // Factor de escala X solo para tablet
                const scaleFactorY = esTablet() ? 0.80 : 1; // Factor de escala Y solo para tablet



                // Calcular las coordenadas proporcionales para la posición de la mesa
                const scaledX = mesaNumero.coord_x * scaleFactorX;
                const scaledY = mesaNumero.coord_y * scaleFactorY;

                // Convertir las coordenadas proporcionales a porcentajes del contenedor padre
                const relativeX = (scaledX / parentWidth) * 100;
                const relativeY = (scaledY / parentHeight) * 100;

                // Aplicar las coordenadas relativas utilizando porcentajes
                mesaDiv.style.position = "absolute";
                mesaDiv.style.left = `${relativeX}%`;
                mesaDiv.style.top = `${relativeY}%`;
                
            } else {
                var mesaDiv = document.createElement("div");
                mesaDiv.classList.add("unique-mesa");
                mesaDiv.id="num-mesa-"+mesaNumero.numero;
                mesaDiv.style.display="none";
            }

            }

            
            

			// Crear un elemento de imagen para la mesa y establecer sus atributos
			var mesaImg = document.createElement("img");
            var icono = document.createElement('span');
			mesaImg.classList.add("card-img-top");
            if(parseInt(mesaNumero.comensales) != 0){
                mesaImg.src = "{{ asset('img/mesa-redonda.png') }}";

                {# if(mesaNumero.factura === '1'){
                
                icono.style.position = 'absolute';
                icono.style.top = '18px';
                icono.style.right = '92px';
                icono.id = 'span-factura-'+mesaNumero.numero
                icono.classList.add('fa-solid', 'fa-print');
            

                }                         #}
                
            } else {
                mesaImg.src = "{{ asset('img/') }}" +mesaNumero.icon;
            }
			mesaImg.alt = "mesa";
            mesaImg.style.cursor = "pointer";

            if(array_uniones.hasOwnProperty(mesaNumero.numero) && array_uniones[mesaNumero.numero] !== undefined){
                // Crear el label con el número de la mesa
                var mesaLabel = document.createElement("label");
                mesaLabel.textContent = mesaNumero.numero + "," + array_uniones[mesaNumero.numero].toString();
                mesaLabel.id="mesa-"+mesaNumero.numero;
            } else {
                // Crear el label con el número de la mesa
                var mesaLabel = document.createElement("label");
                mesaLabel.textContent = mesaNumero.numero;
                mesaLabel.id="mesa-"+mesaNumero.numero;
            }


            if(!esMovil()){
           interact(mesaDiv)
                    .draggable({
                        modifiers: [
                        interact.modifiers.restrictRect({
                            restriction: 'parent'
                        })
                        ],
                        listeners: {
                        move(event) {
                            if(isLocked){
                                const target = event.target;
                            const x = (parseFloat(target.getAttribute('data-x')) || 0) + event.dx;
                            const y = (parseFloat(target.getAttribute('data-y')) || 0) + event.dy;
                            
                            // Mover el elemento según la posición calculada
                            target.style.transform = `translate(${x}px, ${y}px)`;
                            
                            // Actualizar los atributos de data-x y data-y
                            target.setAttribute('data-x', x);
                            target.setAttribute('data-y', y);
                            }
                            
                        },
                        end(event) {

                            if(isLocked){
                                const target = event.target;
                            
                                // Obtener las coordenadas relativas del elemento respecto al contenedor padre
                                const rect = target.getBoundingClientRect();
                                const parentRect = target.parentElement.getBoundingClientRect();
                                const relativeX = rect.left - parentRect.left;
                                const relativeY = rect.top - parentRect.top;
                                
                                // Llamar a la función para guardar las coordenadas
                                const mesaId = target.id.replace('num-mesa-', '');
                                saveCoordinates(mesaId, relativeX, relativeY);
                            }
                            
                        },
                        gesturestart(event) {

                            if(isLocked){
                                let scale = 1.2; // Escala inicial al iniciar el gesto
                                event.target.style.transform = `scale(${scale})`;
                            }
                            
                        },
                        gestureend(event) {

                            if(isLocked){
                                let scale = 1; // Restaurar escala al finalizar el gesto
                                event.target.style.transform = `scale(${scale})`;
                            }
                            
                        }
                        }
                    });

                    let saveCoordinatesTimeout; // Variable para almacenar el temporizador de debounce

                    mesaDiv.addEventListener('touchmove', (event) => {
                    event.preventDefault(); // Evitar el comportamiento predeterminado del scroll en algunos dispositivos

                    const target = event.target;

                    // Mover el elemento utilizando transform translate
                    target.style.transform = `translate(${event.dx}px, ${event.dy}px)`;

                            // Calcular las coordenadas relativas del elemento respecto al contenedor padre
                            const parentRect = target.parentElement.getBoundingClientRect();
                            const parentScrollLeft = target.parentElement.scrollLeft; // Obtener el desplazamiento horizontal
                            const relativeX = (target.getBoundingClientRect().left + parentScrollLeft) - parentRect.left;
                            const relativeY = target.getBoundingClientRect().top - parentRect.top;


                    // Obtener el ID de la mesa
                    const mesaId = target.id.replace('num-mesa-', '');

                    // Cancelar el temporizador existente si está activo
                    clearTimeout(saveCoordinatesTimeout);

                    // Configurar un nuevo temporizador para llamar a saveCoordinates después de 200 milisegundos (ajusta según sea necesario)
                    saveCoordinatesTimeout = setTimeout(() => {
                        saveCoordinates(mesaId, relativeX, relativeY);
                    }, 400); // Ejecutar saveCoordinates después de 200 milisegundos (ajusta según sea necesario)
                    });

            }

            mesaDiv.addEventListener('contextmenu', function(event) {
                 event.preventDefault(); // Prevenir el comportamiento predeterminado del menú contextual
            });
             

            // Agregar el controlador de eventos para hacer clic en la imagen de la mesa
            
            mesaImg.addEventListener("click", (function(mesaNum) {

                
            
            return function() {
                        elementosSeleccionados = [];
                        
                        new bootstrap.Modal(document.querySelector("#modalControlMesas")).show();
                        var input = document.getElementById('input-comensales');

                        var encontrado = false;

                        if(arrayComensales !== null){

                            try {
                                arrayComensales.forEach(function(objeto) {
                                    if (objeto.numero === mesaNum) {
                                        input.value = objeto.comensales;
                                        encontrado = true;
                                        throw new Error("Se encontró una coincidencia. Salir del bucle.");
                                    }
                                });
                            } catch (error) {
                                if (error.message !== "Se encontró una coincidencia. Salir del bucle.") {
                                    throw error;
                                }
                            }

                            }

                            if (!encontrado) {
                                input.value = 0;
                            }
                        
                        
                            
                   
               
               numMesa = mesaNum; 
               $('#modalControlMesasLabel').text('Mesa '+numMesa);
                $('#total-label').empty();
                $('#total-label').append('Total = ');
                $('#tittle-mesa').empty();
		        $('#tittle-mesa').append('<bold>Mesa '+`${mesaNum}`+'</bold>');
                $('#tittle-mesa').append(
                    '<span class="span-invisible" id="state-table-1">Todo marchando <img id="gif-table" src="{{ asset("gifs/kitchen.gif")}}" alt="GIF"></span>' +
                    '<span class="span-invisible" id="state-table-2"> Faltan elementos por marchar <img id="gif-table" src="{{ asset("gifs/cancelar.gif")}}" alt="GIF"> </span>' +
                    '<span class="span-invisible" id="state-table-3"> Mesa vacía</span>'
                    );
                // Buscamos que pedidos hay en la mesa seleccionada
                            $.ajax({
                            url: "{{ path('list_comida') }}",
                            type: 'POST',
                            data: {
                                mesa_id: mesaNum,
                                idzona: idZona,
                            },
                            success: function (response) {
                                var total_zona = document.getElementById('total-sala');
                                total_zona.innerHTML = 'Total Sala: '+response.total_zona[0].total_porpagar+' €';

                            
                            // Eliminar todo el contenido anterior excepto el label
                            $('#mi-lista').remove();
                            var lista = $('<ul id="mi-lista"></ul>');
                            
                                    for (var i = 0; i < response.pedido_mesa.length; i++) {

                                            {# var item = $('<li class="" class="li-pedido" id="'+response.pedido_mesa[i].id+'" data-invi="'+response.pedido_mesa[i].invitacion+'" data-info="'+response.pedido_mesa[i].pedido_mesa+'" class="li-comida">'+response.pedido_mesa[i].comida+'.........'+response.pedido_mesa[i].precio+'€'+'</li>'); #}
                                 var comida = response.pedido_mesa[i].comida;
                                 if(response.pedido_mesa[i].precio === 'Invitación'){
                                    var precio = response.pedido_mesa[i].precio + '' + response.pedido_mesa[i].numTicket; // Formateamos el precio a dos decimales

                                 } else {
                                    var precio = response.pedido_mesa[i].precio.toFixed(2) + '€' + response.pedido_mesa[i].numTicket; // Formateamos el precio a dos decimales

                                 }

                                // Creamos los divs para cada parte del contenido utilizando Bootstrap grid system
                                var $comidaDiv = $('<div id="none-select" class="col-4 col-sm-3 col-md-2 col-lg-5" style="display:flex;justify-content: flex-end;"></div>').text(comida); // Div para la comida
                                var $puntosDiv = $('<div id="none-select" class="col-4 col-sm-3 puntos"></div>'); // Div para los puntos
                                var $precioDiv = $('<div id="none-select" class="col-4 col-sm-3 col-md-3 col-lg-3 precio"></div>').text(precio);

                                var item = $('<div class="row"  id="'+response.pedido_mesa[i].id+'" data-name="'+comida+'" data-invi="'+response.pedido_mesa[i].invitacion+'" data-info="'+response.pedido_mesa[i].pedido_mesa+'" data-desc%="'+response.pedido_mesa[i].descP+'" data-desc€="'+response.pedido_mesa[i].descE+'"></div>');
                                    item.append($comidaDiv, $puntosDiv, $precioDiv);


                                // Creamos el contenedor principal del li
                                var li = $('<li class="row li-pedido"></li>');
                                

                                // Añadimos los divs al contenedor principal
                                li.append(item);

                                // Agregamos el item al DOM antes de calcular dimensiones
                                $('#mi-lista').append(li);

                                // Calculamos el ancho disponible para $comidaDiv
                                var anchoDisponible = item.width() - $precioDiv.outerWidth(true) - $puntosDiv.outerWidth(true);

                                var puntos = 50;

                                if(esTablet()){
                                    puntos = 25
                                } else if (esMovil()) {
                                    puntos = 40
                                }

                                document.addEventListener('selectstart', function(e) {
                                    e.preventDefault(); // Evita la selección de texto
                                });

                                // Eliminamos el elemento del DOM una vez que hayamos terminado de calcular las dimensiones
                                item.remove();

                                {# $puntosDiv.text('.'.repeat(puntos)); #}
                                         
                                        // evento click para añadir/quitar clase "selected" al elemento "li"
                                         (function(item) {
                                                item.on('click', function() {
                                                    new bootstrap.Modal(document.querySelector("#modalOpciones")).show();
                                                    var tituloOperaciones = document.getElementById('titulo-comida');
                                                    tituloOperaciones.textContent = item.data('name');
                                                    pedidoDatos = item.data('info');
                                                    if (item.data('invi') == '1') {
                                                        $('#invitarCheck').prop('checked', true);
                                                    } else {
                                                        $('#invitarCheck').prop('checked', false);
                                                    }

                                                    if (item.data('desc%') !==  null) {
                                                        $('#descuentoInputP').val(item.data('desc%'));
                                                    } else {
                                                        $('#descuentoInputP').val('');
                                                    }
                                                    if (item.data('desc€') !==  null) {
                                                        $('#descuentoInputE').val(item.data('desc€'));
                                                    } else {
                                                        $('#descuentoInputE').val('');
                                                    }


                                                    
                                                });
                                                var tiempoUmbral = 500; // Tiempo en milisegundos para considerar que se ha mantenido pulsado
                                                var tiempoInicio; // Variable para almacenar el tiempo de inicio del toque

                                                item.on('touchstart', function(event) {
                                                    tiempoInicio = new Date().getTime(); // Guardamos el tiempo actual
                                                    // Ejecutar cualquier acción que desees cuando se comienza a mantener pulsado el elemento
                                                });

                                                item.on('touchend', function(event) {
                                                    var tiempoFin = new Date().getTime(); // Tiempo actual al levantar el dedo
                                                    var tiempoTranscurrido = tiempoFin - tiempoInicio; // Tiempo transcurrido desde que se empezó a mantener pulsado

                                                    if (tiempoTranscurrido >= tiempoUmbral) {
                                                        // Se ha mantenido pulsado durante el tiempo umbral
                                                        // Ejecutar cualquier acción adicional que desees
                                                        $(this).toggleClass('selected'); // añade/quita clase "selected"
                                                        var itemId = $(this).attr('id');
                                                        if ($(this).hasClass('selected')) {
                                                            var datosPedido = {
                                                                    itemId: itemId,
                                                                    pedidoDatos: item.data('info')
                                                                };
                                                            elementosSeleccionados.push(datosPedido);
                                                        } else {
                                                            elementosSeleccionados.splice(elementosSeleccionados.indexOf(itemId), 1);
                                                        }
                                                    } else {
                                                        // El tiempo de pulsado no alcanzó el umbral, se trató de un toque corto
                                                        // Ejecutar acciones alternativas si es necesario
                                                    }
                                                });

                                                item.on('mousedown', function() {
                                                tiempoInicio = new Date().getTime(); // Guardamos el tiempo actual
                                                // Ejecutar cualquier acción que desees cuando se comienza a mantener pulsado el elemento
                                                });

                                                item.on('mouseup', function() {
                                                var tiempoFin = new Date().getTime(); // Tiempo actual al soltar el clic
                                                var tiempoTranscurrido = tiempoFin - tiempoInicio; // Tiempo transcurrido desde que se empezó a mantener pulsado

                                                if (tiempoTranscurrido >= tiempoUmbral) {
                                                    // Se ha mantenido pulsado durante el tiempo umbral
                                                    // Ejecutar cualquier acción adicional que desees
                                                    $(this).toggleClass('selected'); // añade/quita clase "selected"
                                                        var itemId = $(this).attr('id');
                                                        if ($(this).hasClass('selected')) {
                                                            var datosPedido = {
                                                                    itemId: itemId,
                                                                    pedidoDatos: item.data('info')
                                                                };
                                                            elementosSeleccionados.push(datosPedido);
                                                        } else {
                                                            elementosSeleccionados.splice(elementosSeleccionados.indexOf(itemId), 1);
                                                        }
                                                } else {
                                                    // El tiempo de pulsado no alcanzó el umbral, se trató de un clic corto
                                                    // Ejecutar acciones alternativas si es necesario
                                                }
                                            });
                                            })(item);

                                            
                                        
                                        lista.prepend(item);
                                    }

                                    //Creamos el label para el total por pagar de la mesa
                                    //var total_pago = document.createElement("label");
                                    //total_pago.id="total-label";
                                    //total_pago.textContent = 'Total = '+response.total_mesa+'€';
                                    //$('#total-label').append('Total = '+response.total_mesa+'€');
                                    totalMesa = parseFloat(response.total_mesa);
                                    document.getElementById('total-label').innerHTML += totalMesa.toFixed(2)+'€';
                                    //total_pago.style = "padding: 20px";

                                    // Agregar la lista detrás del label
                                    $('.contenido-mesa div:first').after(lista);

                                    // Agregamos el total despues de la lista
                                    //$('.contenido-mesa ul').after(total_pago);
                            },
                            error: function (response) {
                                    console.log(response);
                                    
                            }
                            });
                    };
                })(mesaNumero.numero));

			// Agregar la imagen de la mesa al contenedor
			mesaDiv.appendChild(mesaImg);
            mesaDiv.appendChild(icono);
            mesaDiv.appendChild(mesaLabel);

			// Agregar el contenedor de la mesa a la cuadrícula
			mesasContainer.appendChild(mesaDiv);

            })

            
            function saveCoordinates(mesaId, x, y) {
        // Configurar la solicitud AJAX usando jQuery $.ajax
                $.ajax({
                    url: "{{ path('save_coordenadas') }}", // Reemplazar con la URL de tu script de guardado
                    type: 'POST',
                    data: {
                        mesaId: mesaId,
                        x: x,
                        y: y
                    },
                    success: function(response) {

                    },
                    error: function(xhr, status, error) {
                        console.error('Error al guardar las coordenadas:', error);
                    }
                });
            }

        {# if(mesasComedor.length > 24){
            paginacion(mesasComedor, array_uniones)
        } #}

        // función para enviar los elementos seleccionados al controlador
        function pagoPorSeparado() {

            var precioFloat = 0;
            elementosSeleccionados.forEach(function(item) {
                // Buscar el elemento HTML correspondiente usando el valor de pedidoDatos
                var elementoHTML = document.querySelector('[data-info="' + item.pedidoDatos + '"]');
                
                // Verificar si se encontró el elemento HTML
                if (elementoHTML) {
                    // Obtener el div .precio dentro del elemento HTML
                    var precioDiv = elementoHTML.querySelector('.precio');
                    
                    // Obtener el texto del div .precio y eliminar el símbolo €
                    var precioTexto = precioDiv.textContent.trim().replace('€', '');
                    
                    // Convertir el precio a un número flotante
                    precioFloat += parseFloat(precioTexto);
                    
                }
                });

            var metodoPago;
            Swal.fire({
                title: 'Selecciona un método de pago\n\n ·Total: '+precioFloat.toFixed(2)+'€',
                showDenyButton: true,
                showCancelButton: false,
                confirmButtonText: 'Efectivo',
                confirmButtonColor: '#28a745', // Color verde
                denyButtonText: 'Tarjeta',
                denyButtonColor: '#007bff',
                allowOutsideClick: false, // Evita cerrar el SweetAlert haciendo clic fuera de él // Color azul
                showCloseButton: true, // Agrega un botón para cerrar el SweetAlert
                allowEscapeKey: false
                }).then((result) => {
                if (result.isConfirmed) {
                    var info
                        metodoPago = 'Efectivo';
                        new bootstrap.Modal(document.querySelector("#efectivoModal")).show();
                    function handleCalcularCambio() {
                        if(elementosSeleccionados.length !== 0){
                            if($('#mi-lista li.selected:has(span)').find('span').length === 0){
                                if(result){
                                    $.ajax({
                                    url: "{{ path('pago_parcial') }}",
                                    type: 'POST',
                                    data: {
                                        elementos: elementosSeleccionados,
                                        num_mesa: numMesa,
                                        metodo_pago: metodoPago,
                                        idzona: idZona,
                                    },
                                    success: function (response) {
                                        elementosSeleccionados.forEach(function(id){
                                            // Selecciona el elemento <li> correspondiente al ID
                                             let li = $('[data-info="' + id.pedidoDatos + '"]');
                                                // Si el elemento <li> existe, elimínalo
                                                if (li.length) {
                                                    li.remove();
                                                }

                                        });

                                        elementosSeleccionados = [];

                                        var efectivo = parseFloat(document.getElementById('cambioInput').value)
                                        var total = parseFloat(response.total)
                                        var cambio = efectivo - total

                                        var spanCambio = document.getElementById('cambioEfectivo');
                                        spanCambio.innerHTML = 'Cambio: '+cambio.toFixed(2) +'€'

                                        var label_total = document.getElementById('total-label');
                                        label_total.textContent = 'Total = '+response.falta_pagar+'€';
                                        totalMesa = 0;

                                    
                                            if (response.falta_pagar === '0,00') {
                                                Swal.fire({
                                                    title: 'Cuenta realizada: '+ response.total + '€\n ·Efectivo: '+ efectivo +'€\n ·Cambio: '+cambio.toFixed(2)+'€',
                                                    text: 'Mesa ' + response.mesa + ': Cuenta cerrada',
                                                    icon: 'success',
                                                    confirmButtonText: 'OK',
                                                    confirmButtonColor: '#28a745',
                                                    customClass: {
                                                        heightAuto: false,
                                                        popup: 'pagototal-modal',
                                                    }
                                                    
                                                });

                                                {# var iconoFactura = document.getElementById('span-factura-'+numMesa);
                                                if(iconoFactura){
                                                    iconoFactura.remove();
                                                } #}
                                                var imgMesa = document.getElementById('num-mesa-'+numMesa).querySelector('img');;
                                                imgMesa.src = "{{ asset('img/')}}"+response.img;

                                                var inputComensales = document.getElementById('input-comensales');
                                                inputComensales.value = "";

                                                arrayComensales = response.arraycomensales


                                            } else {
                                                 Swal.fire({
                                                    title: 'Pago realizado de: ' + parseFloat(response.total) + '€\n ·Efectivo: '+ efectivo +'€\n ·Cambio: '+cambio.toFixed(2)+'€',
                                                    text: 'Mesa ' + response.mesa + ': Falta por cobrar ' + parseFloat(response.falta_pagar) + '€',
                                                    icon: 'success',
                                                    confirmButtonText: 'OK',
                                                    confirmButtonColor: '#007bff',
                                                    customClass: {
                                                        heightAuto: false,
                                                        popup: 'pagototal-modal',
                                                    }
                                                });
                                            }
                                    

                                        {# mostrarPrimerSweetAlert().then(() => {
                                                    Swal.fire({
                                                        title: '¿Quieres imprimir el ticket?',
                                                        showCancelButton: true,
                                                        confirmButtonText: 'Sí',
                                                        cancelButtonText: 'No',
                                                    }).then((result) => {
                                                        if (result.isConfirmed) {
                                                            demostrarCapacidades('86:67:7A:3F:28:17', '', response.ticket_content, response.total);

                                                            setTimeout(() => {
                                                                Swal.fire({
                                                                    title: '¿Quieres una copia?',
                                                                    showDenyButton: true,
                                                                    showCancelButton: false,
                                                                    confirmButtonText: 'Sí',
                                                                    confirmButtonColor: '#28a745',
                                                                    denyButtonText: 'No',
                                                                    denyButtonColor: '#007bff',
                                                                    allowOutsideClick: false,
                                                                    showCloseButton: true,
                                                                    allowEscapeKey: false,
                                                                }).then((result) => {
                                                                    if (result.isConfirmed) {
                                                                        demostrarCapacidades('86:67:7A:3F:28:17', '', response.ticket_content, response.total);
                                                                    }
                                                                });
                                                            }, 3700);
                                                        } else {
                                                            // Puedes agregar lógica aquí si es necesario
                                                        }
                                                    });
                                                }); #}
                                            
                                            var total_zona = document.getElementById('total-sala');
                                            total_zona.innerHTML = 'Total Sala: '+response.total_zona[0].total_porpagar+' €';

                                                                                
                                    },
                                    error: function (response) {
                                        console.log(response);
                                    },
                                    complete: function () {
                                        // Desvincula el event listener después de ejecutar el AJAX
                                        document.getElementById("calcular-cambio").removeEventListener("click", handleCalcularCambio);
                                    }
                                });
                                
                            } else {
                                Swal.fire({
                                    title: 'Error de conexión con la impresora',
                                    text: 'Vuelve a abrir el plugin que conecta con la impresora o acercate a ella',
                                    icon: 'error',
                                    confirmButtonText: 'OK'
                                    });
                            }

                            } else {
                                Swal.fire({
                                    title: 'Error al cobrar',
                                    text: 'Hay elementos seleccionados que no han sido enviados a cocina',
                                    icon: 'error',
                                    confirmButtonText: 'OK'
                                    });
                            }
                            
                    } else {
                        Swal.fire({
                            title: 'No hay ningún producto seleccionado',
                            text: 'Recuerda que este botón es para cobrar parcialmente la mesa',
                            icon: 'error',
                            confirmButtonText: 'OK'
                            });
                    }
                    }

                    document.getElementById("calcular-cambio").addEventListener("click", handleCalcularCambio);

                    // Limpiar el valor del input
                    document.getElementById('cambioInput').value = '';

                    // Limpiar el contenido del span
                    document.getElementById('cambioEfectivo').textContent = '';
                        
                
                } else if (result.isDenied) {
                        metodoPago = 'Tarjeta';
                        var info
                        async function verificarImpresora() {
                               return comprobarCapacidades('86:67:7A:3F:28:17', '', 'conectado', 'o_no')
                                        .then(info => {
                                            if(info === false){
                                                return false;
                                            } else {
                                                return true;
                                            }
                                            
                                        })
                                        
                            }
                            if(elementosSeleccionados.length !== 0){
                                if($('#mi-lista li.selected:has(span)').find('span').length === 0){
                            verificarImpresora().then(result => {
                                if(result){
                                    $.ajax({
                                    url: "{{ path('pago_parcial') }}",
                                    type: 'POST',
                                    data: {
                                        elementos: elementosSeleccionados,
                                        num_mesa: numMesa,
                                        metodo_pago: metodoPago,
                                        idzona: idZona, 
                                    },
                                    success: function (response) {
                                        elementosSeleccionados.forEach(function(id){
                                            // Selecciona el elemento <li> correspondiente al ID
                                             let li = $('[data-info="' + id.pedidoDatos + '"]');
                                                // Si el elemento <li> existe, elimínalo
                                                if (li.length) {
                                                    li.remove();
                                                }

                                        });

                                        elementosSeleccionados = [];

                                        var label_total = document.getElementById('total-label');
                                        label_total.textContent = 'Total = '+response.falta_pagar+'€';
                                        totalMesa = 0;

                                        
                                            if (response.falta_pagar === '0,00') {
                                                 Swal.fire({
                                                    title: 'Cuenta realizada: '+ response.total + '€',
                                                    text: 'Mesa ' + response.mesa + ': Cuenta cerrada',
                                                    icon: 'success',
                                                    confirmButtonText: 'OK',
                                                    confirmButtonColor: '#28a745',
                                                });

                                                {# var iconoFactura = document.getElementById('span-factura-'+numMesa);
                                                if(iconoFactura){
                                                    iconoFactura.remove();
                                                } #}
                                                var imgMesa = document.getElementById('num-mesa-'+numMesa).querySelector('img');;
                                                imgMesa.src = "{{ asset('img/')}}"+response.img;

                                                var inputComensales = document.getElementById('input-comensales');
                                                inputComensales.value = "";

                                                // Iterar sobre el array para buscar la clave nummesa con el valor buscado
                                                arrayComensales = response.arraycomensales 

                                              
                                            } else {
                                                 Swal.fire({
                                                    title: 'Pago realizado de: ' + parseFloat(response.total) + '€',
                                                    text: 'Mesa ' + response.mesa + ': Falta por cobrar ' + parseFloat(response.falta_pagar) + '€',
                                                    icon: 'success',
                                                    confirmButtonText: 'OK',
                                                    confirmButtonColor: '#007bff',
                                                });
                                            }
                                        

                                        {# mostrarPrimerSweetAlert().then(() => {
                                                    Swal.fire({
                                                        title: '¿Quieres imprimir el ticket?',
                                                        showCancelButton: true,
                                                        confirmButtonText: 'Sí',
                                                        cancelButtonText: 'No',
                                                    }).then((result) => {
                                                        if (result.isConfirmed) {
                                                            demostrarCapacidades('86:67:7A:3F:28:17', '', response.ticket_content, response.total);

                                                            setTimeout(() => {
                                                                Swal.fire({
                                                                    title: '¿Quieres una copia?',
                                                                    showDenyButton: true,
                                                                    showCancelButton: false,
                                                                    confirmButtonText: 'Sí',
                                                                    confirmButtonColor: '#28a745',
                                                                    denyButtonText: 'No',
                                                                    denyButtonColor: '#007bff',
                                                                    allowOutsideClick: false,
                                                                    showCloseButton: true,
                                                                    allowEscapeKey: false,
                                                                }).then((result) => {
                                                                    if (result.isConfirmed) {
                                                                        demostrarCapacidades('86:67:7A:3F:28:17', '', response.ticket_content, response.total);
                                                                    }
                                                                });
                                                            }, 3700);
                                                        } else {
                                                            // Puedes agregar lógica aquí si es necesario
                                                        }
                                                    });
                                                }); #}
                                            

                                            var total_zona = document.getElementById('total-sala');
                                            total_zona.innerHTML = 'Total Sala: '+response.total_zona[0].total_porpagar+' €';
                                                                                
                                    },
                                    error: function (response) {
                                        console.log(response);
                                    }
                                });
                            } else {
                                Swal.fire({
                                    title: 'Error de conexión con la impresora',
                                    text: 'Vuelve a abrir el plugin que conecta con la impresora o acercate a ella',
                                    icon: 'error',
                                    confirmButtonText: 'OK'
                                    });
                            }

                                })
                            } else {
                                Swal.fire({
                                    title: 'Error al cobrar',
                                    text: 'Hay elementos seleccionados que no han sido enviados a cocina',
                                    icon: 'error',
                                    confirmButtonText: 'OK'
                                    });


                            }
                        } else {
                            Swal.fire({
                                title: 'No hay ningún producto seleccionado',
                                text: 'Recuerda que este botón es para cobrar parcialmente la mesa',
                                icon: 'error',
                                confirmButtonText: 'OK'
                                });
                        }
                
                }

                });
            }

        // función para cobrar toda la mesa
        function cobrarTodo() {
            var metodoPago;
            var comensales = document.getElementById('input-comensales').value;

            const totalLabelValue = document.getElementById('total-label').textContent;

            Swal.fire({
                title: totalLabelValue,
                html: `<div><strong>${totalLabelValue}</strong></div>
                     <div style="display:flex;flex-direction: row;justify-content: center;">
                        <div style="display:flex;justify-content:center;margin:2%;">  
                            <div style="display: flex;flex-direction: column;width: 100%;background-color: #fff;box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.25);padding:5%;border-radius:5%;">
                                <label for="efectivo">Efectivo:</label>
                                <input type="text" id="efectivo" class="swal2-input" placeholder="Monto en efectivo">
                                <label for="efectivo">Cantidad entregada:</label>
                                <input type="text" id="efectivo-entregado" class="swal2-input" placeholder="Cantidad entregada">
                                <span id="cambio-efectivo"></span>
                            </div>     
                        </div> 
                        <div style="display:flex;justify-content:center;margin:2%;"> 
                            <div style="display: flex;flex-direction: column;width: 100%;background-color: #fff;box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.25);padding:5%;border-radius:5%;">
                                <label for="tarjeta">Tarjeta:</label>
                                <input type="text" id="tarjeta" class="swal2-input" placeholder="Monto en tarjeta">
                            </div>
                        </div>
                    </div>
                    <div style="display:flex;justify-content:center;margin:2%;">  
                        <div style="display: flex;flex-direction: column;width: 50%;background-color: #fff;box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.25);padding:5%;border-radius:5%;">
                            <label for="observaciones">Observaciones:</label>
                            <textarea id="observaciones" class="swal2-textarea" placeholder="Añadir observaciones"></textarea>
                        </div>
                    </div>
                `,
                showDenyButton: true,
                showCancelButton: false,
                confirmButtonText: 'Aceptar',
                confirmButtonColor: '#28a745', // Color verde
                denyButtonText: 'Cancelar',
                denyButtonColor: '#007bff', // Color azul
                allowOutsideClick: false, // Evita cerrar el SweetAlert haciendo clic fuera de él
                showCloseButton: true, // Agrega un botón para cerrar el SweetAlert
                allowEscapeKey: false, // Evita cerrar el SweetAlert presionando la tecla Esc
                 didOpen: () => {
                    const efectivoInput = Swal.getPopup().querySelector('#efectivo');
                    const tarjetaInput = Swal.getPopup().querySelector('#tarjeta');
                    const inputCambio = Swal.getPopup().querySelector('#efectivo-entregado');

                    let efectivoInicializado = false;
                    let tarjetaInicializado = false;

                    function updateInput(target, other, total) {
                        const targetValue = parseFloat(target.value) || 0;
                        const remaining = total - targetValue;
                        other.value = remaining.toFixed(2);
                    }

                    function handleEfectivoInput() {
                        if (!efectivoInicializado && !tarjetaInicializado) {
                            efectivoInput.value = totalMesa.toFixed(2);
                            efectivoInicializado = true;
                        } else {
                            updateInput(efectivoInput, tarjetaInput, totalMesa);
                        }
                    }

                    function handleTarjetaInput() {
                        if (!tarjetaInicializado && !efectivoInicializado ) {
                            tarjetaInput.value = totalMesa.toFixed(2);
                            tarjetaInicializado = true;
                        } else {
                            updateInput(tarjetaInput, efectivoInput, totalMesa);
                        }
                    }

                    function handleCambio() {
                        const cambio = parseFloat(inputCambio.value) - parseFloat(efectivoInput.value);
                        if(!isNaN(cambio)){
                            Swal.getPopup().querySelector('#cambio-efectivo').textContent = 'Cambio: ' + cambio.toFixed(2) + '€';

                        } else {
                            Swal.getPopup().querySelector('#cambio-efectivo').textContent = 'Cambio: 0€';
                        }   
                        
                    }

                    efectivoInput.addEventListener('focus', handleEfectivoInput);
                    tarjetaInput.addEventListener('focus', handleTarjetaInput);

                    efectivoInput.addEventListener('input', handleEfectivoInput);
                    efectivoInput.addEventListener('input', handleCambio);
                    tarjetaInput.addEventListener('input', handleTarjetaInput);
                    inputCambio.addEventListener('input', handleCambio);
                },
                customClass: {
                    popup: 'custom-swal-large'
                }
            }).then((result) => {
                if (result.isConfirmed) {                                 

                                    var info
                                    var efectivo = document.getElementById('efectivo').value;
                                    var tarjeta = document.getElementById('tarjeta').value;
                                    var observaciones = document.getElementById('observaciones').value;

                                    if(efectivo === '' && tarjeta === ''){
                                        tarjeta = totalMesa.toFixed(2);
                                    }
                                    
                                    if(typeof numMesa !== "undefined"){
                                        if($('#mi-lista li:has(span)').find('span').length === 0){
                                                if(result){
                                                    $.ajax({
                                                    url: "{{ path('pago_total') }}",
                                                    type: 'POST',
                                                    data: {
                                                        num_mesa: numMesa,
                                                        metodo_pago: metodoPago,
                                                        comensales: comensales,
                                                        idzona: idZona,
                                                        efectivo: efectivo,
                                                        tarjeta: tarjeta,
                                                        observaciones: observaciones,
                                                    },
                                                    success: function (response) {

                                                        $('#mi-lista').empty();
                                                        var label_total = document.getElementById('total-label');
                                                        label_total.textContent = 'Total = 0,00 €';
                                                        totalMesa = 0;

                                                        var inputComensales = document.getElementById('input-comensales');
                                                        inputComensales.value = "";

                                                        
                                                        Swal.fire({
                                                                title: '·Cuenta realizada: ' + response.total + '€' ,
                                                                text: response.pagado,
                                                                icon: 'success',
                                                                confirmButtonText: 'OK',
                                                                customClass: {
                                                                    heightAuto: false,
                                                                    popup: 'pagototal-modal',
                                                                }
                                                            })
                                                        

                                                        // Obtener la referencia al elemento de la imagen por su id
                                                        var img = document.getElementById('num-mesa-'+numMesa);

                                                        if(img){
                                                            
                                                            var imgSrc = img.querySelector('img')
                                                            // Obtener la nueva ruta utilizando asset()
                                                            var nuevaRuta = "{{ asset('img/') }}"+response.img;

                                                            // Cambiar el src de la imagen
                                                            imgSrc.src = nuevaRuta;
                                                        }
                    
                                                        

                                                        {# var iconoFactura = document.getElementById('span-factura-'+numMesa);

                                                        if(iconoFactura){
                                                            iconoFactura.remove();  
                                                        } #}


                                                        arrayComensales = response.arraycomensales

                                                                                 
                                                        
                                                        {# pagadoAlert().then(() => {
                                                            Swal.fire({
                                                            title: '¿Quieres imprimir el ticket?',
                                                            showCancelButton: true,
                                                            confirmButtonText: 'Sí',
                                                            cancelButtonText: 'No'
                                                            }).then((result) => {
                                                            if (result.isConfirmed) {
                                                                
                                                                demostrarCapacidades('86:67:7A:3F:28:17', '', response.ticket_content, response.total);

                                                                setTimeout(() => {
                                                                        Swal.fire({
                                                                            title: '¿Quieres una copia?',
                                                                            showDenyButton: true,
                                                                            showCancelButton: false,
                                                                            confirmButtonText: 'Sí',
                                                                            confirmButtonColor: '#28a745', // Color verde
                                                                            denyButtonText: 'No',
                                                                            denyButtonColor: '#007bff',
                                                                            allowOutsideClick: false, // Evita cerrar el SweetAlert haciendo clic fuera de él
                                                                            showCloseButton: true, // Agrega un botón para cerrar el SweetAlert
                                                                            allowEscapeKey: false // Evita cerrar el SweetAlert presionando la tecla Esc
                                                                        }).then((result) => {
                                                                            if (result.isConfirmed) {
                                                                                demostrarCapacidades('86:67:7A:3F:28:17', '', response.ticket_content, response.total);
                                                                            }
                                                                        });
                                                                    }, 2700);
                                                            } else {
                                                                
                                                            }
                                                        });


                                                        }) #}

                                                        var total_zona = document.getElementById('total-sala');
                                                        total_zona.innerHTML = 'Total Sala: '+response.total_zona[0].total_porpagar+' €';
                                                            
                                                                    
                                                            },
                                                            error: function (response) {
                                                                console.log(response);
                                                            }
                                                        });

                                                } else {
                                                    Swal.fire({
                                                    title: 'Error de conexión con la impresora',
                                                    text: 'Vuelve a abrir el plugin que conecta con la impresora o acercate a ella',
                                                    icon: 'error',
                                                    confirmButtonText: 'OK'
                                                    });

                                                }
                                    } else {
                                        Swal.fire({
                                        title: 'Error al cobrar',
                                        text: 'Estas cobrando un elemento que no se ha enviado a cocina',
                                        icon: 'error',
                                        confirmButtonText: 'OK'
                                        });

                                    }
                                        
                                } 

                    


                

                {# document.getElementById("calcular-cambio").addEventListener("click", handleCalcularCambio); #}


                // Limpiar el valor del input
                document.getElementById('cambioInput').value = '';

                // Limpiar el contenido del span
                document.getElementById('cambioEfectivo').textContent = '';
                                        
                }
                 
                });   
            
            }

            function controlCobro(){

                var comensales = document.getElementById( "input-comensales" ).value;
                if(comensales !== '0'){
                    if(elementosSeleccionados.length !== 0){
                    pagoPorSeparado()
                } else {
                    cobrarTodo()

                }

                } else {
                    Swal.fire({
                        title: "Error",
                        text: "El campo comensales no puede estar vacío",
                        icon: "error",
                        button: "Cerrar",
                    });

                }

                
            }

            function actualizarComensales(numeroMesa) {
                // Buscar el objeto en mesasComedor que tenga el número de mesa dado
                let mesaEncontrada = mesasComedor.find(mesa => mesa.numero === numeroMesa);

                // Si se encontró la mesa, actualizar la propiedad comensales a 0
                if (mesaEncontrada) {
                    mesaEncontrada.comensales = "0"; // Establecer comensales a "0" (cadena)
                    // Si prefieres establecer comensales como un número:
                    // mesaEncontrada.comensales = 0;
                } else {
                    console.log(`Mesa con número ${numeroMesa} no encontrada.`);
                }
            }

            function sacarTiquet(){
            var comensales = document.getElementById('input-comensales').value;
            if(comensales !== '0'){
                
                if(elementosSeleccionados.length !== 0){

                    if(typeof numMesa !== "undefined"){
                        if($('#mi-lista li:has(span)').find('span').length === 0){
                                    $.ajax({
                                    url: "{{ path('sacar_tiquet') }}",
                                    type: 'POST',
                                    data: {
                                        num_mesa: numMesa,
                                        pago: 'parcial',
                                        elementos: elementosSeleccionados,
                                        comensales: comensales,
                                        
                                    },
                                    success: function (response) {

                                       // Suponiendo que elementosSeleccionados es la matriz con los datos del pedido
                                    for (let i = 0; i < elementosSeleccionados.length; i++) {
                                        const pedido = elementosSeleccionados[i];

                                        // Obtener el valor de 'pedidoDatos'
                                        const numeroTicket = pedido.pedidoDatos;

                                        // Seleccionar el <li> basado en el valor de 'data-info'
                                        const liElement = document.querySelector(`div[data-info="${numeroTicket}"]`);

                                        if (liElement) {
                                            // Encontrar el último div dentro del <li>
                                            const precioDiv = liElement.querySelector('.precio');

                                            if (precioDiv) {
                                                // Agregar el texto al precio
                                                precioDiv.textContent += ' (T'+response.numeroTicket+')';
                                            } else {
                                                console.error('No se pudo encontrar el div de precio.');
                                            }
                                        } else {
                                            console.error('No se pudo encontrar el elemento <li> con el data-info proporcionado.');
                                        }
                                    }

                                        

                                        $.ajax({
                                            url: "{{ path('imprimir_ticket') }}",
                                            type: 'POST',
                                            data: {
                                                num_mesa: numMesa,
                                                content: response.content,
                                                apagar: response.apagar,
                                                comensales: response.comensales,
                                        
                                        },
                                         success: function (response) {

                                        },
                                        error: function(response){
                                            console.log(response)
                                        }
                                        })
                                                    
                                    },
                                    error: function (response) {
                                        console.log(response);
                                    }
                                         });

                                
                            } else {
                                Swal.fire({
                                    title: 'Error al cobrar',
                                    text: 'Estas cobrando un elemento que no se ha enviado a cocina',
                                    icon: 'error',
                                    confirmButtonText: 'OK'
                                    });

                            }
                        } else {
                            Swal.fire({
                                title: 'No hay ninguna mesa seleccionada',
                                text: 'Debes selecionar una mesa para poder sacar toda la cuenta',
                                icon: 'success',
                                confirmButtonText: 'OK'
                                });
                }


                } else {

                    if(typeof numMesa !== "undefined"){
                        if($('#mi-lista li:has(span)').find('span').length === 0){
                                    $.ajax({
                                    url: "{{ path('sacar_tiquet') }}",
                                    type: 'POST',
                                    data: {
                                        num_mesa: numMesa,
                                        pago: 'total',
                                        comensales: comensales,
                                    },
                                    success: function (response) {
                                        // Crear un elemento span para el icono
                                        {# var icono = document.createElement('span');
                                        

                                        if(esMovil()){
                                            // Estilizar el icono
                                        icono.style.position = 'absolute';
                                        icono.style.top = '0px';
                                        icono.style.right = '12px';
                                        icono.id = 'span-factura-'+numMesa
                                        // Ajustar otros estilos según sea necesario

                                        } else if(esTablet()){
                                            // Estilizar el icono
                                        icono.style.position = 'absolute';
                                        icono.style.top = '18px';
                                        icono.style.right = '92px';
                                        icono.id = 'span-factura-'+numMesa
                                        // Ajustar otros estilos según sea necesario
                                        } else {
                                            // Estilizar el icono
                                        icono.style.position = 'absolute';
                                        icono.style.top = '18px';
                                        icono.style.right = '92px';
                                        icono.id = 'span-factura-'+numMesa
                                        // Ajustar otros estilos según sea necesario

                                        } #}
                                        
                                        
                                        // Añadir clases de icono (por ejemplo, si estás usando FontAwesome)
                                        {# icono.classList.add('fa-solid', 'fa-print'); #}
                                        // Asegúrate de cambiar 'fa-icono-pequeno' según el icono que quieras usar
                                        
                                        // Obtener el contenedor del div
                                        var contenedor = document.getElementById('num-mesa-'+numMesa);
                                        
                                        // Adjuntar el icono al contenedor
                                        {# contenedor.appendChild(icono); #}
                                

                                            $.ajax({
                                            url: "{{ path('imprimir_ticket') }}",
                                            type: 'POST',
                                            data: {
                                                num_mesa: numMesa,
                                                content: response.content,
                                                apagar: response.apagar,
                                                comensales: response.comensales,
                                        
                                        },
                                         success: function (response) {

                                        },
                                        error: function(response){
                                            console.log(response)
                                        }
                                        })
                                                    
                                    },
                                    error: function (response) {
                                        console.log(response);
                                    }
                                         });

                                
                            } else {
                                Swal.fire({
                                    title: 'Error al cobrar',
                                    text: 'Estas cobrando un elemento que no se ha enviado a cocina',
                                    icon: 'error',
                                    confirmButtonText: 'OK'
                                    });

                            }
                        } else {
                            Swal.fire({
                                title: 'No hay ninguna mesa seleccionada',
                                text: 'Debes selecionar una mesa para poder sacar toda la cuenta',
                                icon: 'success',
                                confirmButtonText: 'OK'
                                });
                }


                }

        } else {

            Swal.fire({
                title: "Error",
                text: "El campo comensales no puede estar vacío",
                icon: "error",
                button: "Cerrar",
            });

        }
                    

            }

            function cambiarLocalizacion(rutaAjax, idZonaButton){
                idZona = idZonaButton
            
                var panelMesas = document.getElementById('dist-mesas');
                panelMesas.innerHTML = "";
                // Crear el elemento div y asignarle la clase 'div-padlock'
                var divPadlock = document.createElement('div');
                divPadlock.className = 'div-padlock d-sm-flex d-none';

                // Crear el elemento button y asignarle el id 'padlock-button' y el atributo onclick
                var buttonPadlock = document.createElement('button');
                buttonPadlock.id = 'padlock-button';
                buttonPadlock.setAttribute('onclick', 'habilitarMovimiento()');

                // Crear el elemento i y asignarle el id 'icon-dist' y la clase 'fa-solid fa-lock'
                var iElement = document.createElement('i');
                iElement.id = 'icon-dist';
                iElement.className = 'fa-solid fa-lock';

                // Agregar el elemento i al botón
                buttonPadlock.appendChild(iElement);

                // Agregar el botón al div
                divPadlock.appendChild(buttonPadlock);

                // Agregar el div al panelMesas
                panelMesas.appendChild(divPadlock);
                // Array de mesas con uniones
                var array_uniones;
                if(rutaAjax === "{{ path('list_comida') }}"){
                    barra = false;
                    zonaActual = 'comedor';
                    var visualMesas = document.getElementById('visual-mesas');
                    visualMesas.style.display=""
                    $.ajax({
                        url: "{{ path('uniones_comedor') }}",
                        data: {idzona:idZona},
                        type: "POST",
                        success: function(response){
                            
                            {# if(response.terraza === true){
                                var btn_float_outside = document.getElementById('floating-outside');
                                btn_float_outside.style.border = "0px";
                            }
                            
                            var btn_float_inside = document.getElementById('floating-inside');
                            btn_float_inside.style.border = "2px solid #605CA8";

                            if(response.barra === true){
                                var btn_float_barra = document.getElementById('floating-barra');
                                btn_float_barra.style.border = "0px";
                            } #}
                            
                            array_uniones = response.uniones_comedor;

                            var labelTitleMesa = document.getElementById('tittle-mesa');
                            var ulLista = document.getElementById('mi-lista');
                            var labelTotal = document.getElementById('total-label');


                            if(labelTitleMesa.innerHTML !== ""){
                                labelTitleMesa.innerHTML = "";
                                if(ulLista){
                                    ulLista.innerHTML = "";
                                } 
                                labelTotal.innerHTML = "";
                            }

                            var titulo_sala = document.getElementById('titulo-sala');
                            titulo_sala.innerHTML = response.zonaname

                            var total_sala = document.getElementById('total-sala');
                            total_sala.innerHTML = 'Total Sala: '+response.total_zona[0].total_porpagar+' €'

                            mesasComedor = response.mesas;

                            // Actualizamos los selectores de union mesas segun la localizacion
                                {# mesasTerraza.forEach((numMesaTerraza) => {
                                    var selectorPrincipal = document.getElementById('p-'+ numMesaTerraza.numero);
                                    selectorPrincipal.style.display = "none"
                                    var selectorSecundario = document.getElementById('u-'+ numMesaTerraza.numero);
                                    selectorSecundario.style.display = "none"

                                }) #}
                                
                                // Obtén todos los elementos que necesitas controlar
                                var elementosAMostrar = [];

                                mesasComedor.forEach((numMesaComedor) => {
                                    var selectorPrincipal = document.getElementById('p-' + numMesaComedor.numero);
                                    var selectorSecundario = document.getElementById('u-' + numMesaComedor.numero);

                                    if (selectorPrincipal && selectorSecundario) {
                                        // Establece el estilo de los elementos correspondientes a mostrar
                                        selectorPrincipal.style.display = "";
                                        selectorSecundario.style.display = "";

                                        // Agrega el número de mesa al array de elementos a mostrar
                                        elementosAMostrar.push(numMesaComedor.numero);
                                    }
                                });

                                // Itera sobre todos los elementos y oculta los que no deben mostrarse
                                var todosElementos = document.querySelectorAll('[id^="p-"], [id^="u-"]');
                                todosElementos.forEach((elemento) => {
                                    var numeroMesa = elemento.id.substring(2); // Extrae el número de mesa del ID del elemento

                                    // Verifica si el número de mesa no está en el array de elementos a mostrar
                                    if (!elementosAMostrar.includes(numeroMesa)) {
                                        elemento.style.display = "none"; // Oculta el elemento
                                    }
                                });

                                    

            

                            // Obtener el elemento HTML donde se agregarán las imágenes de mesa
                            var mesasContainer = document.getElementById("dist-mesas");

                            mesasComedor.forEach((mesaNumero) => {  
                                    
                            // Verificar si el valor de 'i' está presente en algún contenido del objeto
                        var encontrado = false;
                        for (var key in array_uniones) {
                        if (array_uniones.hasOwnProperty(key) && array_uniones[key].indexOf(mesaNumero.numero) !== -1) {
                            encontrado = true;
                            break;
                        }
                        }

                if(esMovil()){
                    mesasContainer.style.display = "flex";
                    mesasContainer.style.flexDirection = "row";
                    mesasContainer.style.flexWrap = "wrap";
                        if(!encontrado){
                        // Crear un contenedor para cada imagen de mesa
                            var mesaDiv = document.createElement("div");
                            mesaDiv.classList.add("col-sm-6", "col-md-4", "col-lg-2", "col-xs-3", "col-3", "unique-mesa");
                            mesaDiv.id="num-mesa-"+mesaNumero.numero;
                            
                        } else {
                            var mesaDiv = document.createElement("div");
                            mesaDiv.classList.add("col-sm-6", "col-md-4", "col-lg-2", "col-xs-3", "col-3", "unique-mesa");
                            mesaDiv.id="num-mesa-"+mesaNumero.numero;
                            mesaDiv.style.display="none";
                        }

                    } else {
                        if(!encontrado){
                    // Crear un contenedor para cada imagen de mesa
                        var mesaDiv = document.createElement("div");
                        mesaDiv.classList.add("unique-mesa");
                        mesaDiv.id="num-mesa-"+mesaNumero.numero;
                    // Obtener el contenedor padre
                        const parentContainer = document.getElementById('dist-mesas');

                        // Obtener las dimensiones del contenedor padre
                        const parentWidth = parentContainer.offsetWidth;
                        const parentHeight = parentContainer.offsetHeight;

                        // Definir un factor de escala para ajustar las coordenadas (solo para tablet)
                         const scaleFactorX = esTablet() ? 0.50 : 1; // Factor de escala X solo para tablet
                         const scaleFactorY = esTablet() ? 0.80 : 1; // Factor de escala Y solo para tablet

                        // Calcular las coordenadas proporcionales para la posición de la mesa
                        const scaledX = mesaNumero.coord_x * scaleFactorX;
                        const scaledY = mesaNumero.coord_y * scaleFactorY;

                        // Convertir las coordenadas proporcionales a porcentajes del contenedor padre
                        const relativeX = (scaledX / parentWidth) * 100;
                        const relativeY = (scaledY / parentHeight) * 100;

                        // Aplicar las coordenadas relativas utilizando porcentajes
                        mesaDiv.style.position = "absolute";
                        mesaDiv.style.left = `${relativeX}%`;
                        mesaDiv.style.top = `${relativeY}%`;
                        
                    } else {
                        var mesaDiv = document.createElement("div");
                        mesaDiv.classList.add("unique-mesa");
                        mesaDiv.id="num-mesa-"+mesaNumero.numero;
                        mesaDiv.style.display="none";
                    }

                    }
                        

                        // Crear un elemento de imagen para la mesa y establecer sus atributos
                            var mesaImg = document.createElement("img");
                            var icono = document.createElement('span');
                            mesaImg.classList.add("card-img-top");
                            {# var seEncontroComedor = false;
                            var indiceEliminarComedor = null;

                            arrayComensales.forEach(function(objeto, index) {
                            if (objeto.hasOwnProperty('nummesa') && objeto.nummesa === mesaNumero.numero) {
                                seEncontroComedor = true;
                                return; // Salir del bucle forEach una vez que se haya encontrado la coincidencia
                            }
                            }); #}
                            
                            if(parseInt(mesaNumero.comensales) !== 0){
                            mesaImg.src = "{{ asset('img/mesa-redonda.png') }}";

                            {# if(mesaNumero.factura === '1'){
                            
                                // Estilizar el icono
                            icono.style.position = 'absolute';
                            icono.style.top = '18px';
                            icono.style.right = '92px';
                            icono.id = 'span-factura-'+mesaNumero.numero
                            // Ajustar otros estilos según sea necesario
                            
                            // Añadir clases de icono (por ejemplo, si estás usando FontAwesome)
                            icono.classList.add('fa-solid', 'fa-print');
                        

                            }                         #}
                            
                        } else {
                            mesaImg.src = "{{ asset('img/') }}" + mesaNumero.icon;
                        }
                        mesaImg.alt = "mesa";
                        mesaImg.style.cursor = "pointer";

                        if(array_uniones.hasOwnProperty(mesaNumero.numero) && array_uniones[mesaNumero.numero] !== undefined){
                            // Crear el label con el número de la mesa
                            var mesaLabel = document.createElement("label");
                            mesaLabel.textContent = mesaNumero.numero + "," + array_uniones[mesaNumero.numero].toString();
                            mesaLabel.id="mesa-"+mesaNumero.numero;
                        } else {
                            // Crear el label con el número de la mesa
                            var mesaLabel = document.createElement("label");
                            mesaLabel.textContent = mesaNumero.numero;
                            mesaLabel.id="mesa-"+mesaNumero.numero;
                        }


                        if(!esMovil()){

                interact(mesaDiv)
                    .draggable({
                        modifiers: [
                        interact.modifiers.restrictRect({
                            restriction: 'parent'
                        })
                        ],
                        listeners: {
                        move(event) {
                            if(isLocked){
                                const target = event.target;
                                const x = (parseFloat(target.getAttribute('data-x')) || 0) + event.dx;
                                const y = (parseFloat(target.getAttribute('data-y')) || 0) + event.dy;
                                
                                // Mover el elemento según la posición calculada
                                target.style.transform = `translate(${x}px, ${y}px)`;
                                
                                // Actualizar los atributos de data-x y data-y
                                target.setAttribute('data-x', x);
                                target.setAttribute('data-y', y);
                            }
                            
                        },
                        end(event) {
                            if(isLocked){
                                const target = event.target;
                            
                            // Obtener las coordenadas relativas del elemento respecto al contenedor padre
                            const rect = target.getBoundingClientRect();
                            const parentRect = target.parentElement.getBoundingClientRect();
                            const relativeX = rect.left - parentRect.left;
                            const relativeY = rect.top - parentRect.top;
                            
                            // Llamar a la función para guardar las coordenadas
                            const mesaId = target.id.replace('num-mesa-', '');
                            saveCoordinates(mesaId, relativeX, relativeY);
                            }
                            
                        },
                        gesturestart(event) {
                            if(isLocked){
                                let scale = 1.2; // Escala inicial al iniciar el gesto
                                event.target.style.transform = `scale(${scale})`;
                            }
                            
                        },
                        gestureend(event) {
                            if(isLocked){
                                let scale = 1; // Restaurar escala al finalizar el gesto
                                event.target.style.transform = `scale(${scale})`;
                            }
                            
                        }
                        }
                    });

                    let saveCoordinatesTimeout; // Variable para almacenar el temporizador de debounce

                    mesaDiv.addEventListener('touchmove', (event) => {
                    event.preventDefault(); // Evitar el comportamiento predeterminado del scroll en algunos dispositivos

                    const target = event.target;

                    // Mover el elemento utilizando transform translate
                    target.style.transform = `translate(${event.dx}px, ${event.dy}px)`;

                            // Calcular las coordenadas relativas del elemento respecto al contenedor padre
                            const parentRect = target.parentElement.getBoundingClientRect();
                            const parentScrollLeft = target.parentElement.scrollLeft; // Obtener el desplazamiento horizontal
                            const relativeX = (target.getBoundingClientRect().left + parentScrollLeft) - parentRect.left;
                            const relativeY = target.getBoundingClientRect().top - parentRect.top;


                    // Obtener el ID de la mesa
                    const mesaId = target.id.replace('num-mesa-', '');

                    // Cancelar el temporizador existente si está activo
                    clearTimeout(saveCoordinatesTimeout);

                    // Configurar un nuevo temporizador para llamar a saveCoordinates después de 200 milisegundos (ajusta según sea necesario)
                    saveCoordinatesTimeout = setTimeout(() => {
                        saveCoordinates(mesaId, relativeX, relativeY);
                    }, 400); // Ejecutar saveCoordinates después de 200 milisegundos (ajusta según sea necesario)
                    });


            }


            mesaDiv.addEventListener('contextmenu', function(event) {
                 event.preventDefault(); // Prevenir el comportamiento predeterminado del menú contextual
            });
                        

                        // Agregar el controlador de eventos para hacer clic en la imagen de la mesa
                        
                        mesaImg.addEventListener("click", (function(mesaNum) {
                        
                        return function() {
                            elementosSeleccionados = [];
                        new bootstrap.Modal(document.querySelector("#modalControlMesas")).show();
                        var input = document.getElementById('input-comensales');
                         var encontrado = false;

                        if(arrayComensales !== null){

                            try {
                                arrayComensales.forEach(function(objeto) {
                                    if (objeto.numero === mesaNum) {
                                        input.value = objeto.comensales;
                                        encontrado = true;
                                        throw new Error("Se encontró una coincidencia. Salir del bucle.");
                                    }
                                });
                            } catch (error) {
                                if (error.message !== "Se encontró una coincidencia. Salir del bucle.") {
                                    throw error;
                                }
                            }

                            }

                            if (!encontrado) {
                                input.value = 0;
                            }
                   
               
               numMesa = mesaNum; 
               $('#modalControlMesasLabel').text('Mesa '+numMesa);
                $('#total-label').empty();
                $('#total-label').append('Total = ');
                $('#tittle-mesa').empty();
		        $('#tittle-mesa').append('<bold>Mesa '+`${mesaNum}`+'</bold>');
                $('#tittle-mesa').append(
                    '<span class="span-invisible" id="state-table-1">Todo marchando <img id="gif-table" src="{{ asset("gifs/kitchen.gif")}}" alt="GIF"></span>' +
                    '<span class="span-invisible" id="state-table-2"> Faltan elementos por marchar <img id="gif-table" src="{{ asset("gifs/cancelar.gif")}}" alt="GIF"> </span>' +
                    '<span class="span-invisible" id="state-table-3"> Mesa vacía</span>'
                    );
                // Buscamos que pedidos hay en la mesa seleccionada
                            $.ajax({
                            url: "{{ path('list_comida') }}",
                            type: 'POST',
                            data: {
                                mesa_id: mesaNum,
                                idzona: idZona,
                            },
                            success: function (response) {
                                var total_zona = document.getElementById('total-sala');
                                total_zona.innerHTML = 'Total Sala: '+response.total_zona[0].total_porpagar+' €';

                            
                            // Eliminar todo el contenido anterior excepto el label
                            $('#mi-lista').remove();
                            var lista = $('<ul id="mi-lista"></ul>');
                            
                                    for (var i = 0; i < response.pedido_mesa.length; i++) {

                                            {# var item = $('<li class="li-pedido" id="'+response.pedido_mesa[i].id+'" data-invi="'+response.pedido_mesa[i].invitacion+'" data-info="'+response.pedido_mesa[i].pedido_mesa+'" class="li-comida">'+response.pedido_mesa[i].comida+'.........'+response.pedido_mesa[i].precio+'€'+'</li>'); #}
                                 var comida = response.pedido_mesa[i].comida;
                                if(response.pedido_mesa[i].precio === 'Invitación'){
                                    var precio = response.pedido_mesa[i].precio + '' + response.pedido_mesa[i].numTicket; // Formateamos el precio a dos decimales

                                 } else {
                                    var precio = response.pedido_mesa[i].precio.toFixed(2) + '€' + response.pedido_mesa[i].numTicket; // Formateamos el precio a dos decimales

                                 }

                                // Creamos los divs para cada parte del contenido utilizando Bootstrap grid system
                                // Creamos los divs para cada parte del contenido utilizando Bootstrap grid system
                                var $comidaDiv = $('<div id="none-select" class="col-4 col-sm-3 col-md-2 col-lg-5" style="display:flex;justify-content: flex-end;"></div>').text(comida); // Div para la comida
                                var $puntosDiv = $('<div id="none-select" class="col-4 col-sm-3 puntos"></div>'); // Div para los puntos
                                var $precioDiv = $('<div id="none-select" class="col-4 col-sm-3 col-md-3 col-lg-3 precio"></div>').text(precio);

                                var item = $('<div class="row"  id="'+response.pedido_mesa[i].id+'" data-name="'+comida+'" data-invi="'+response.pedido_mesa[i].invitacion+'" data-info="'+response.pedido_mesa[i].pedido_mesa+'" data-desc%="'+response.pedido_mesa[i].descP+'" data-desc€="'+response.pedido_mesa[i].descE+'"></div>');
                                    item.append($comidaDiv, $puntosDiv, $precioDiv);


                                // Creamos el contenedor principal del li
                                var li = $('<li class="row li-pedido"></li>');
                                

                                // Añadimos los divs al contenedor principal
                                li.append(item);

                                // Agregamos el item al DOM antes de calcular dimensiones
                                $('#mi-lista').append(li);

                                // Calculamos el ancho disponible para $comidaDiv
                                var anchoDisponible = item.width() - $precioDiv.outerWidth(true) - $puntosDiv.outerWidth(true);

                                var puntos = 50;

                                if(esTablet()){
                                    puntos = 25
                                } else if (esMovil()) {
                                    puntos = 40
                                }

                                document.addEventListener('selectstart', function(e) {
                                    e.preventDefault(); // Evita la selección de texto
                                });

                                // Eliminamos el elemento del DOM una vez que hayamos terminado de calcular las dimensiones
                                item.remove();

                                {# $puntosDiv.text('.'.repeat(puntos)); #}
                                         
                                        // evento click para añadir/quitar clase "selected" al elemento "li"
                                         (function(item) {
                                                item.on('click', function() {
                                                    new bootstrap.Modal(document.querySelector("#modalOpciones")).show();
                                                    var tituloOperaciones = document.getElementById('titulo-comida');
                                                    tituloOperaciones.textContent = item.data('name');
                                                    pedidoDatos = item.data('info');
                                                    if (item.data('invi') == '1') {
                                                        $('#invitarCheck').prop('checked', true);
                                                    } else {
                                                        $('#invitarCheck').prop('checked', false);
                                                    }

                                                    if (item.data('desc%') !==  null) {
                                                        $('#descuentoInputP').val(item.data('desc%'));
                                                    } else {
                                                        $('#descuentoInputP').val('');
                                                    }
                                                    if (item.data('desc€') !==  null) {
                                                        $('#descuentoInputE').val(item.data('desc€'));
                                                    } else {
                                                        $('#descuentoInputE').val('');
                                                    }


                                                    
                                                });
                                                var tiempoUmbral = 200; // Tiempo en milisegundos para considerar que se ha mantenido pulsado
                                                var tiempoInicio; // Variable para almacenar el tiempo de inicio del toque

                                                item.on('touchstart', function(event) {
                                                    tiempoInicio = new Date().getTime(); // Guardamos el tiempo actual
                                                    // Ejecutar cualquier acción que desees cuando se comienza a mantener pulsado el elemento
                                                });

                                                item.on('touchend', function(event) {
                                                    var tiempoFin = new Date().getTime(); // Tiempo actual al levantar el dedo
                                                    var tiempoTranscurrido = tiempoFin - tiempoInicio; // Tiempo transcurrido desde que se empezó a mantener pulsado

                                                    if (tiempoTranscurrido >= tiempoUmbral) {
                                                        // Se ha mantenido pulsado durante el tiempo umbral
                                                        // Ejecutar cualquier acción adicional que desees
                                                        $(this).toggleClass('selected'); // añade/quita clase "selected"
                                                        var itemId = $(this).attr('id');
                                                        if ($(this).hasClass('selected')) {
                                                             var datosPedido = {
                                                                    itemId: itemId,
                                                                    pedidoDatos: item.data('info')
                                                                };
                                                            elementosSeleccionados.push(datosPedido);
                                                        } else {
                                                            elementosSeleccionados.splice(elementosSeleccionados.indexOf(itemId), 1);
                                                        }
                                                    } else {
                                                        // El tiempo de pulsado no alcanzó el umbral, se trató de un toque corto
                                                        // Ejecutar acciones alternativas si es necesario
                                                    }
                                                });

                                                item.on('mousedown', function() {
                                                tiempoInicio = new Date().getTime(); // Guardamos el tiempo actual
                                                // Ejecutar cualquier acción que desees cuando se comienza a mantener pulsado el elemento
                                                });

                                            item.on('mouseup', function() {
                                                var tiempoFin = new Date().getTime(); // Tiempo actual al soltar el clic
                                                var tiempoTranscurrido = tiempoFin - tiempoInicio; // Tiempo transcurrido desde que se empezó a mantener pulsado

                                                if (tiempoTranscurrido >= tiempoUmbral) {
                                                    // Se ha mantenido pulsado durante el tiempo umbral
                                                    // Ejecutar cualquier acción adicional que desees
                                                    $(this).toggleClass('selected'); // añade/quita clase "selected"
                                                        var itemId = $(this).attr('id');
                                                        if ($(this).hasClass('selected')) {
                                                             var datosPedido = {
                                                                    itemId: itemId,
                                                                    pedidoDatos: item.data('info')
                                                                };
                                                            elementosSeleccionados.push(datosPedido);
                                                        } else {
                                                            elementosSeleccionados.splice(elementosSeleccionados.indexOf(itemId), 1);
                                                        }
                                                } else {
                                                    // El tiempo de pulsado no alcanzó el umbral, se trató de un clic corto
                                                    // Ejecutar acciones alternativas si es necesario
                                                }
                                            });
                                            })(item);

                                            
                                        
                                        lista.prepend(item);
                                    }

                                    //Creamos el label para el total por pagar de la mesa
                                    //var total_pago = document.createElement("label");
                                    //total_pago.id="total-label";
                                    //total_pago.textContent = 'Total = '+response.total_mesa+'€';
                                    //$('#total-label').append('Total = '+response.total_mesa+'€');
                                    totalMesa = parseFloat(response.total_mesa);
                                    document.getElementById('total-label').innerHTML += totalMesa.toFixed(2)+'€';
                                    //total_pago.style = "padding: 20px";

                                    // Agregar la lista detrás del label
                                    $('.contenido-mesa div:first').after(lista);

                                    // Agregamos el total despues de la lista
                                    //$('.contenido-mesa ul').after(total_pago);
                            },
                            error: function (response) {
                                    console.log(response);
                                    
                            }
                            });
                    };
                            })(mesaNumero.numero));

                        // Agregar la imagen de la mesa al contenedor
                        mesaDiv.appendChild(mesaImg);
                        mesaDiv.appendChild(icono);
                        mesaDiv.appendChild(mesaLabel);

                        // Agregar el contenedor de la mesa a la cuadrícula
                        mesasContainer.appendChild(mesaDiv);

                        })

                        
                            {# paginacion(mesasComedor, array_uniones); #}
                        
                            
                        },
                        error: function(response){
                            console.log(response);
                        }
                    })
                
                } else if (rutaAjax === "{{ path('list_comida_terraza') }}") {
                    barra = false;
                    zonaActual= 'terraza';
                    var visualMesas = document.getElementById('visual-mesas');
                    visualMesas.style.display=""
                    $.ajax({
                        url: "{{ path('uniones_terraza') }}",
                        success: function(response){



                            if(response.comedor === true){
                                var btn_float_inside = document.getElementById('floating-inside');
                                btn_float_inside.style.border = "0px";
                            }
                            
                            var btn_float_outside = document.getElementById('floating-outside');
                            btn_float_outside.style.border = "2px solid #605CA8";

                            if(response.barra === true){
                                var btn_float_barra = document.getElementById('floating-barra');
                                btn_float_barra.style.border = "0px";

                            }
                            
                            
                            array_uniones = response.uniones_terraza;


                            var labelTitleMesa = document.getElementById('tittle-mesa');
                            var ulLista = document.getElementById('mi-lista');
                            var labelTotal = document.getElementById('total-label');

                            if(labelTitleMesa.innerHTML !== ""){
                                labelTitleMesa.innerHTML = "";
                                ulLista.innerHTML = "";
                                labelTotal.innerHTML = "";
                            }
                            

                            var titulo_sala = document.getElementById('titulo-sala');
                            titulo_sala.innerHTML = 'Terraza'

                            // Obtener el elemento HTML donde se agregarán las imágenes de mesa
                            var mesasContainer = document.getElementById("mesas");

                            // Actualizamos los selectores de union mesas segun la localizacion
                                    mesasComedor.forEach((numMesaComedor) =>{
                                        var selectorPrincipal = document.getElementById('p-'+numMesaComedor.numero);
                                        selectorPrincipal.style.display = "none"
                                        var selectorSecundario = document.getElementById('u-'+numMesaComedor.numero);
                                        selectorSecundario.style.display = "none";
                                    
                                    })

                                mesasTerraza.forEach((numMesaTerraza) => {
                                    var selectorPrincipal = document.getElementById('p-'+numMesaTerraza.numero);
                                    selectorPrincipal.style.display = ""
                                    var selectorSecundario = document.getElementById('u-'+numMesaTerraza.numero);
                                    selectorSecundario.style.display = ""

                                })
                                
                            
                            // Generar una cuadrícula de 3 filas por 4 columnas (12 imágenes en total)
                             mesasTerraza.forEach((mesaNumero) => {  
                                    
                                    // Verificar si el valor de 'i' está presente en algún contenido del objeto
                                var encontrado = false;
                                for (var key in array_uniones) {
                                if (array_uniones.hasOwnProperty(key) && array_uniones[key].indexOf(mesaNumero.numero) !== -1) {
                                    encontrado = true;
                                    break;
                                }
                                }

                                if(!encontrado){
                                // Crear un contenedor para cada imagen de mesa
                                    var mesaDiv = document.createElement("div");
                                    mesaDiv.classList.add("col-sm-6", "col-md-4", "col-lg-2", "col-xs-3", "col-3", "unique-mesa");
                                    mesaDiv.id="num-mesa-"+mesaNumero.numero;
                                    
                                } else {
                                    var mesaDiv = document.createElement("div");
                                    mesaDiv.classList.add("col-sm-6", "col-md-4", "col-lg-2", "col-xs-3", "col-3", "unique-mesa");
                                    mesaDiv.id="num-mesa-"+mesaNumero.numero;
                                    mesaDiv.style.display="none";
                                }
                                

                                // Crear un elemento de imagen para la mesa y establecer sus atributos
                                var mesaImg = document.createElement("img");
                                var icono = document.createElement('span');
                                mesaImg.classList.add("card-img-top");
                                var seEncontroTerraza = false;
                                var indiceEliminarTerraza = null;

                                arrayComensales.forEach(function(objeto, index) {
                                if (objeto.hasOwnProperty('nummesa') && objeto.nummesa === mesaNumero.numero) {
                                    seEncontroTerraza = true;
                                    return; // Salir del bucle forEach una vez que se haya encontrado la coincidencia
                                }
                                });
                                if(parseInt(mesaNumero.comensales) !== 0 || seEncontroTerraza){
                                    mesaImg.src = "{{ asset('img/mesa-redonda.png') }}";

                                    {# if(mesaNumero.factura === '1'){
                                    
                                        // Estilizar el icono
                                    icono.style.position = 'absolute';
                                    icono.style.top = '18px';
                                    icono.style.right = '92px';
                                    icono.id = 'span-factura-'+mesaNumero.numero
                                    
                                    
                                    
                                    icono.classList.add('fa-solid', 'fa-print');
                                

                                    }                         #}
                                    
                                } else {
                                    mesaImg.src = "{{ asset('img/mesa.png') }}";
                                }
                                mesaImg.alt = "mesa";
                                mesaImg.style.cursor = "pointer";

                                if(array_uniones.hasOwnProperty(mesaNumero.numero) && array_uniones[mesaNumero.numero] !== undefined){
                                    // Crear el label con el número de la mesa
                                    var mesaLabel = document.createElement("label");
                                    mesaLabel.textContent = "Mesa " + mesaNumero.numero + "," + array_uniones[mesaNumero.numero].toString();
                                    mesaLabel.id="mesa-"+mesaNumero.numero;
                                } else {
                                    // Crear el label con el número de la mesa
                                    var mesaLabel = document.createElement("label");
                                    mesaLabel.textContent = "Mesa " + mesaNumero.numero;
                                    mesaLabel.id="mesa-"+mesaNumero.numero;
                                }
                                
                                

                                // Agregar el controlador de eventos para hacer clic en la imagen de la mesa
                                
                                mesaImg.addEventListener("click", (function(mesaNum) {
                                
                                return function() {
                                    elementosSeleccionados = [];
                        new bootstrap.Modal(document.querySelector("#modalControlMesas")).show();
                        var input = document.getElementById('input-comensales');
                        input.value = '';
                        seEncontro = false;
                        arrayComensales.forEach(function(objeto) {
                                if (objeto.hasOwnProperty('nummesa') && objeto.nummesa === mesaNum) {
                                    seEncontro = true;
                                    comensalesEncontrados = objeto.comensales;
                                    return; // Salir del bucle forEach una vez que se haya encontrado la coincidencia
                                }
                                });
                                
                            if(mesaNumero.comensales && seEncontro === false){
                                    if(parseInt(mesaNumero.comensales) === 0){
                                        var comensales = mesaNumero.comensales
                                        input.value = comensales;
                                        input.select();
                                    } else {
                                        var comensales = mesaNumero.comensales
                                        input.value = comensales;
                                    }
                                    

                            } else if(seEncontro){
                                input.value = comensalesEncontrados;
                            }
                   
               
               numMesa = mesaNum; 
               $('#modalControlMesasLabel').text('Mesa '+numMesa);
                $('#total-label').empty();
                $('#total-label').append('Total = ');
                $('#tittle-mesa').empty();
		        $('#tittle-mesa').append('<bold>Mesa '+`${mesaNum}`+'</bold>');
                $('#tittle-mesa').append(
                    '<span class="span-invisible" id="state-table-1">Todo marchando <img id="gif-table" src="{{ asset("gifs/kitchen.gif")}}" alt="GIF"></span>' +
                    '<span class="span-invisible" id="state-table-2"> Faltan elementos por marchar <img id="gif-table" src="{{ asset("gifs/cancelar.gif")}}" alt="GIF"> </span>' +
                    '<span class="span-invisible" id="state-table-3"> Mesa vacía</span>'
                    );
                // Buscamos que pedidos hay en la mesa seleccionada
                            $.ajax({
                            url: "{{ path('list_comida') }}",
                            type: 'POST',
                            data: {
                                mesa_id: mesaNum,
                            },
                            success: function (response) {
                                {# if (response.control_mesa === 1) {
                                    // Activar solo el elemento 1
                                    $('#state-table-1').removeClass('span-invisible');
                                    $('#state-table-2, #state-table-3').addClass('span-invisible');
                                    } else if (response.control_mesa === 0) {
                                    // Activar solo el elemento 2
                                    $('#state-table-1, #state-table-3').addClass('span-invisible');
                                    $('#state-table-2').removeClass('span-invisible');
                                    } else if (response.control_mesa === null) {
                                    // Activar solo el elemento 3
                                    $('#state-table-1, #state-table-2').addClass('span-invisible');
                                    $('#state-table-3').removeClass('span-invisible');
                                    } #}

                            
                            // Eliminar todo el contenido anterior excepto el label
                            $('#mi-lista').remove();
                            var lista = $('<ul id="mi-lista"></ul>');
                            
                                    for (var i = 0; i < response.pedido_mesa.length; i++) {

                                            {# var item = $('<li class="li-pedido" id="'+response.pedido_mesa[i].id+'" data-invi="'+response.pedido_mesa[i].invitacion+'" data-info="'+response.pedido_mesa[i].pedido_mesa+'" class="li-comida">'+response.pedido_mesa[i].comida+'.........'+response.pedido_mesa[i].precio+'€'+'</li>'); #}
                                 var comida = response.pedido_mesa[i].comida;
                                if(response.pedido_mesa[i].precio === 'Invitación'){
                                    var precio = response.pedido_mesa[i].precio + '' + response.pedido_mesa[i].numTicket; // Formateamos el precio a dos decimales

                                 } else {
                                    var precio = response.pedido_mesa[i].precio.toFixed(2) + '€' + response.pedido_mesa[i].numTicket; // Formateamos el precio a dos decimales

                                 }

                                // Creamos los divs para cada parte del contenido utilizando Bootstrap grid system
                               var $comidaDiv = $('<div id="none-select" class="col-4 col-sm-3 col-md-2 col-lg-2" style="display:flex;justify-content: flex-end;"></div>').text(comida); // Div para la comida
                                var $puntosDiv = $('<div id="none-select" class="col-4 col-sm-3 puntos"></div>'); // Div para los puntos
                                var $precioDiv = $('<div id="none-select" class="col-4 col-sm-5 col-md-5 col-lg-5 precio"></div>').text(precio);

                                // Creamos el contenedor principal del li
                                var item = $('<li class="row li-pedido" style="width:70%;" id="'+response.pedido_mesa[i].id+'" data-name="'+comida+'" data-invi="'+response.pedido_mesa[i].invitacion+'" data-info="'+response.pedido_mesa[i].pedido_mesa+'" data-desc%="'+response.pedido_mesa[i].descP+'" data-desc€="'+response.pedido_mesa[i].descE+'" class="li-comida"></li>');
                                

                                // Añadimos los divs al contenedor principal
                                item.append($comidaDiv, $puntosDiv, $precioDiv);

                                // Agregamos el item al DOM antes de calcular dimensiones
                                $('body').append(item);

                                // Calculamos el ancho disponible para $comidaDiv
                                var anchoDisponible = item.width() - $precioDiv.outerWidth(true) - $puntosDiv.outerWidth(true);

                                var puntos = 50;

                                if(esTablet()){
                                    puntos = 25
                                } else if (esMovil()) {
                                    puntos = 40
                                }

                                document.addEventListener('selectstart', function(e) {
                                    e.preventDefault(); // Evita la selección de texto
                                });

                                // Eliminamos el elemento del DOM una vez que hayamos terminado de calcular las dimensiones
                                item.remove();

                                $puntosDiv.text('.'.repeat(puntos));
                                         
                                        // evento click para añadir/quitar clase "selected" al elemento "li"
                                         (function(item) {
                                                item.on('click', function() {
                                                    new bootstrap.Modal(document.querySelector("#modalOpciones")).show();
                                                    var tituloOperaciones = document.getElementById('titulo-comida')
                                                    tituloOperaciones.textContent = item.data('name');
                                                    pedidoDatos = item.data('info');
                                                    if (item.data('invi') == '1') {
                                                        $('#invitarCheck').prop('checked', true);
                                                    } else {
                                                        $('#invitarCheck').prop('checked', false);
                                                    }

                                                    if (item.data('desc%') !==  null) {
                                                        $('#descuentoInputP').val(item.data('desc%'));
                                                    } else {
                                                        $('#descuentoInputP').val('');
                                                    }
                                                    if (item.data('desc€') !==  null) {
                                                        $('#descuentoInputE').val(item.data('desc€'));
                                                    } else {
                                                        $('#descuentoInputE').val('');
                                                    }


                                                    
                                                });
                                                var tiempoUmbral = 200; // Tiempo en milisegundos para considerar que se ha mantenido pulsado
                                                var tiempoInicio; // Variable para almacenar el tiempo de inicio del toque

                                                item.on('touchstart', function(event) {
                                                    tiempoInicio = new Date().getTime(); // Guardamos el tiempo actual
                                                    // Ejecutar cualquier acción que desees cuando se comienza a mantener pulsado el elemento
                                                });

                                                item.on('touchend', function(event) {
                                                    var tiempoFin = new Date().getTime(); // Tiempo actual al levantar el dedo
                                                    var tiempoTranscurrido = tiempoFin - tiempoInicio; // Tiempo transcurrido desde que se empezó a mantener pulsado

                                                    if (tiempoTranscurrido >= tiempoUmbral) {
                                                        // Se ha mantenido pulsado durante el tiempo umbral
                                                        // Ejecutar cualquier acción adicional que desees
                                                        $(this).toggleClass('selected'); // añade/quita clase "selected"
                                                        var itemId = $(this).attr('id');
                                                        if ($(this).hasClass('selected')) {
                                                             var datosPedido = {
                                                                    itemId: itemId,
                                                                    pedidoDatos: item.data('info')
                                                                };
                                                            elementosSeleccionados.push(datosPedido);
                                                        } else {
                                                            elementosSeleccionados.splice(elementosSeleccionados.indexOf(itemId), 1);
                                                        }
                                                    } else {
                                                        // El tiempo de pulsado no alcanzó el umbral, se trató de un toque corto
                                                        // Ejecutar acciones alternativas si es necesario
                                                    }
                                                });

                                                item.on('mousedown', function() {
                                                tiempoInicio = new Date().getTime(); // Guardamos el tiempo actual
                                                // Ejecutar cualquier acción que desees cuando se comienza a mantener pulsado el elemento
                                                });

                                            item.on('mouseup', function() {
                                                var tiempoFin = new Date().getTime(); // Tiempo actual al soltar el clic
                                                var tiempoTranscurrido = tiempoFin - tiempoInicio; // Tiempo transcurrido desde que se empezó a mantener pulsado

                                                if (tiempoTranscurrido >= tiempoUmbral) {
                                                    // Se ha mantenido pulsado durante el tiempo umbral
                                                    // Ejecutar cualquier acción adicional que desees
                                                    $(this).toggleClass('selected'); // añade/quita clase "selected"
                                                        var itemId = $(this).attr('id');
                                                        if ($(this).hasClass('selected')) {
                                                             var datosPedido = {
                                                                    itemId: itemId,
                                                                    pedidoDatos: item.data('info')
                                                                };
                                                            elementosSeleccionados.push(datosPedido);
                                                        } else {
                                                            elementosSeleccionados.splice(elementosSeleccionados.indexOf(itemId), 1);
                                                        }
                                                } else {
                                                    // El tiempo de pulsado no alcanzó el umbral, se trató de un clic corto
                                                    // Ejecutar acciones alternativas si es necesario
                                                }
                                            });
                                            })(item);

                                            
                                        
                                        lista.prepend(item);
                                    }

                                    //Creamos el label para el total por pagar de la mesa
                                    //var total_pago = document.createElement("label");
                                    //total_pago.id="total-label";
                                    //total_pago.textContent = 'Total = '+response.total_mesa+'€';
                                    //$('#total-label').append('Total = '+response.total_mesa+'€');
                                    totalMesa = parseFloat(response.total_mesa);
                                    document.getElementById('total-label').innerHTML += totalMesa.toFixed(2)+'€';
                                    //total_pago.style = "padding: 20px";

                                    // Agregar la lista detrás del label
                                    $('.contenido-mesa div:first').after(lista);

                                    // Agregamos el total despues de la lista
                                    //$('.contenido-mesa ul').after(total_pago);
                            },
                            error: function (response) {
                                    console.log(response);
                                    
                            }
                            });
                    };
                                    })(mesaNumero.numero));

                                // Agregar la imagen de la mesa al contenedor
                                mesaDiv.appendChild(mesaImg);
                                mesaDiv.appendChild(icono);
                                mesaDiv.appendChild(mesaLabel);

                                // Agregar el contenedor de la mesa a la cuadrícula
                                mesasContainer.appendChild(mesaDiv);

                        })

                        
                            {# paginacion(mesasTerraza, array_uniones); #}
                        
                        },
                        error: function(response){
                            console.log(response);
                        }
                    })

                } else {
                    {# numMesa = {{barra|json_encode|raw}}; #}
                    barra = true;
                    $('#total-label').empty();
                    $('#total-label').append('Total = ');
                    $('#tittle-mesa').empty();
                    $('#tittle-mesa').append('<bold> Barra </bold>');

                    new bootstrap.Modal(document.querySelector("#modalControlMesas")).show();

                    {# var visualMesas = document.getElementById('visual-mesas');
                    visualMesas.style.display="none"

                    var displayMesas = document.getElementById('display-mesas-lista')
                    displayMesas.style.justifyContent = "center"; #}

                    {# var titulo_sala = document.getElementById('titulo-sala');
                    titulo_sala.innerHTML = 'Barra' #}
                    // Buscamos que pedidos hay en la mesa seleccionada
                                $.ajax({
                                url: "{{ path('list_barra')}}",
                                type: 'POST',
                                data: {
                                    mesa_id: numMesa,
                                    comensales: 1,
                                },
                                success: function (response) {

                                    if(response.comedor === true){
                                        var btn_float_inside = document.getElementById('floating-inside');
                                        btn_float_inside.style.border = "0px";
                                    }

                                    if(response.terraza === true){
                                        var btn_float_outside = document.getElementById('floating-outside');
                                        btn_float_outside.style.border = "0px";
                                    }
                                    
                                    
                                    var btn_float_barra = document.getElementById('floating-barra');
                                    btn_float_barra.style.border = "2px solid #605CA8";

                                //numMesa = mesaNum;   
                                // Eliminar todo el contenido anterior excepto el label
                                $('#mi-lista').remove();
                                var lista = $('<ul id="mi-lista"></ul>');
                                
                                        for (var i = 0; i < response.pedido_mesa.length; i++) {
                                            
                                            {# var item = $('<li class="li-pedido" id="'+response.pedido_mesa[i].id+'" style="cursor:pointer;">'+response.pedido_mesa[i].comida+'.........'+response.pedido_mesa[i].precio+'€'+'</li><br>'); #}
                                             var comida = response.pedido_mesa[i].comida;
                                            var precio = response.pedido_mesa[i].precio.toFixed(2) + '€'; // Formateamos el precio a dos decimales

                                            // Creamos los divs para cada parte del contenido utilizando Bootstrap grid system
                                            var $comidaDiv = $('<div id="none-select" class="col-4 col-sm-3 col-md-2 col-lg-2" style="display:flex;justify-content: flex-end;"></div>').text(comida); // Div para la comida
                                            var $puntosDiv = $('<div id="none-select" class="col-4 col-sm-3 puntos"></div>'); // Div para los puntos
                                            var $precioDiv = $('<div id="none-select" class="col-4 col-sm-5 col-md-5 col-lg-5 precio"></div>').text(precio);

                                            // Creamos el contenedor principal del li
                                            var item = $('<li class="row li-pedido" style="width:70%;" id="'+response.pedido_mesa[i].id+'"  data-name="'+comida+'" data-invi="'+response.pedido_mesa[i].invitacion+'" data-info="'+response.pedido_mesa[i].pedido_mesa+'" data-desc%="'+response.pedido_mesa[i].descP+'" data-desc€="'+response.pedido_mesa[i].descE+'" class="li-comida"></li>');
                                            

                                            // Añadimos los divs al contenedor principal
                                            item.append($comidaDiv, $puntosDiv, $precioDiv);

                                            // Agregamos el item al DOM antes de calcular dimensiones
                                            $('body').append(item);

                                            // Calculamos el ancho disponible para $comidaDiv
                                            var anchoDisponible = item.width() - $precioDiv.outerWidth(true) - $puntosDiv.outerWidth(true);

                                            var puntos = 70;

                                            if(esTablet()){
                                                puntos = 30
                                            } else if (esMovil()) {
                                                puntos = 40
                                            }

                                            document.addEventListener('selectstart', function(e) {
                                                e.preventDefault(); // Evita la selección de texto
                                            });

                                            // Eliminamos el elemento del DOM una vez que hayamos terminado de calcular las dimensiones
                                            item.remove();

                                            $puntosDiv.text('.'.repeat(puntos));
                                            // evento click para añadir/quitar clase "selected" al elemento "li"
                                            (function(item) {
                                                item.on('click', function() {
                                                    new bootstrap.Modal(document.querySelector("#modalOpciones")).show();
                                                    var tituloOperaciones = document.getElementById('titulo-comidas')
                                                    tituloOperaciones.textContent = item.data('name');
                                                    pedidoDatos = item.data('info');
                                                    if (item.data('invi') == '1') {
                                                        $('#invitarCheck').prop('checked', true);
                                                    } else {
                                                        $('#invitarCheck').prop('checked', false);
                                                    }

                                                    if (item.data('desc%') !==  null) {
                                                        $('#descuentoInputP').val(item.data('desc%'));
                                                    } else {
                                                        $('#descuentoInputP').val('');
                                                    }
                                                    if (item.data('desc€') !==  null) {
                                                        $('#descuentoInputE').val(item.data('desc€'));
                                                    } else {
                                                        $('#descuentoInputE').val('');
                                                    }


                                                    
                                                });
                                                var tiempoUmbral = 200; // Tiempo en milisegundos para considerar que se ha mantenido pulsado
                                                var tiempoInicio; // Variable para almacenar el tiempo de inicio del toque

                                                item.on('touchstart', function(event) {
                                                    tiempoInicio = new Date().getTime(); // Guardamos el tiempo actual
                                                    // Ejecutar cualquier acción que desees cuando se comienza a mantener pulsado el elemento
                                                });

                                                item.on('touchend', function(event) {
                                                    var tiempoFin = new Date().getTime(); // Tiempo actual al levantar el dedo
                                                    var tiempoTranscurrido = tiempoFin - tiempoInicio; // Tiempo transcurrido desde que se empezó a mantener pulsado

                                                    if (tiempoTranscurrido >= tiempoUmbral) {
                                                        // Se ha mantenido pulsado durante el tiempo umbral
                                                        // Ejecutar cualquier acción adicional que desees
                                                        $(this).toggleClass('selected'); // añade/quita clase "selected"
                                                        var itemId = $(this).attr('id');
                                                        if ($(this).hasClass('selected')) {
                                                             var datosPedido = {
                                                                    itemId: itemId,
                                                                    pedidoDatos: item.data('info')
                                                                };
                                                            elementosSeleccionados.push(datosPedido);
                                                        } else {
                                                            elementosSeleccionados.splice(elementosSeleccionados.indexOf(itemId), 1);
                                                        }
                                                    } else {
                                                        // El tiempo de pulsado no alcanzó el umbral, se trató de un toque corto
                                                        // Ejecutar acciones alternativas si es necesario
                                                    }
                                                });

                                                item.on('mousedown', function() {
                                                tiempoInicio = new Date().getTime(); // Guardamos el tiempo actual
                                                // Ejecutar cualquier acción que desees cuando se comienza a mantener pulsado el elemento
                                                });

                                            item.on('mouseup', function() {
                                                var tiempoFin = new Date().getTime(); // Tiempo actual al soltar el clic
                                                var tiempoTranscurrido = tiempoFin - tiempoInicio; // Tiempo transcurrido desde que se empezó a mantener pulsado

                                                if (tiempoTranscurrido >= tiempoUmbral) {
                                                    // Se ha mantenido pulsado durante el tiempo umbral
                                                    // Ejecutar cualquier acción adicional que desees
                                                    $(this).toggleClass('selected'); // añade/quita clase "selected"
                                                        var itemId = $(this).attr('id');
                                                        if ($(this).hasClass('selected')) {
                                                             var datosPedido = {
                                                                    itemId: itemId,
                                                                    pedidoDatos: item.data('info')
                                                                };
                                                            elementosSeleccionados.push(datosPedido);
                                                        } else {
                                                            elementosSeleccionados.splice(elementosSeleccionados.indexOf(itemId), 1);
                                                        }
                                                } else {
                                                    // El tiempo de pulsado no alcanzó el umbral, se trató de un clic corto
                                                    // Ejecutar acciones alternativas si es necesario
                                                }
                                            });
                                            })(item);
                                            
                                            lista.append(item);
                                        }

                                        //Creamos el label para el total por pagar de la mesa
                                        //var total_pago = document.createElement("label");
                                        //total_pago.id="total-label";
                                        //total_pago.textContent = 'Total = '+response.total_mesa+'€';
                                        //$('#total-label').append('Total = '+response.total_mesa+'€');
                                        totalMesa = parseFloat(response.total_mesa);
                                        document.getElementById('total-label').innerHTML += totalMesa +'€';
                                        //total_pago.style = "padding: 20px";

                                        // Agregar la lista detrás del label
                                        $('.contenido-mesa div:first').after(lista);

                                        // Agregamos el total despues de la lista
                                        //$('.contenido-mesa ul').after(total_pago);
                                },
                                error: function (response) {
                                        console.log(response);
                                        
                                }
                                });


                }
                
        
		

            }

            function eliminarElemento(){
                
                if(elementosSeleccionados.length !== 0){

                        Swal.fire({
                                title: 'Eliminar elementos',
                                text: '¿Estás seguro de que deseas eliminar los elementos seleccionados?',
                                icon: 'warning',
                                showCancelButton: true,
                                confirmButtonText: 'Sí, eliminar',
                                cancelButtonText: 'Cancelar'
                            }).then((result) => {
                                if (result.isConfirmed) {
                                    // El usuario hizo clic en "Sí, eliminar"
                                    var datos = {
                                        mesa: numMesa,
                                        elementosSeleccionados: elementosSeleccionados,
                                        idzona: idZona,
                                    };

                                    // Realizar la solicitud AJAX
                                    $.ajax({
                                        type: 'POST',
                                        url: "{{ path('eliminar_comida')}}",
                                        data: datos,
                                        success: function(response) {
                                            elementosSeleccionados = [];
                                            var selectedElements = document.querySelectorAll('.selected');

                                            selectedElements.forEach(function(element) {
                                                element.parentNode.removeChild(element);
                                            });

                                            var label_total = document.getElementById('total-label');
                                            totalMesa = parseFloat(response.total)
                                            label_total.textContent = 'Total = '+response.total+'€';

                                             var total_zona = document.getElementById('total-sala');
                                            total_zona.innerHTML = 'Total Sala: '+response.total_zona[0].total_porpagar+' €';


                                            // Manejar la respuesta de la solicitud AJAX (por ejemplo, mostrar un mensaje de éxito)
                                            Swal.fire('Éxito', 'Los elementos han sido eliminados con éxito', 'success');

                                            {# if($('#mi-lista li:has(span)').find('span').length === 0){
                                                $('#state-table-1').removeClass('span-invisible');
                                                $('#state-table-2, #state-table-3').addClass('span-invisible');
                                            } #}
                                        },
                                        error: function(xhr) {                                            
                                            if (xhr.status === 400) {
                                                // Manejar errores con código de estado 400 (u otros códigos de error)
                                                var errorMessage = xhr.responseText;
                                                Swal.fire('Error', errorMessage , 'error');
                                            } else {
                                                // Otros códigos de error
                                                alert('Ocurrió un error inesperado.');
        }
                                        }
                                    });
                                }
                            });

                }  else {

                    let listaPedidos = document.querySelectorAll('#mi-lista > div');
                    let numeroMesa = document.querySelector('#tittle-mesa').firstChild.innerHTML.split(' ')[1];
                    let arrPedidos = [];
                    for (let item of listaPedidos) {
                        arrPedidos.push(item.getAttribute('data-info'));
                    }
                    const copiarMesa = async () => {
                        const URL_COPIARMESA = '/copiarmesa';
                        const OPTIONS_COPIARMESA = {
                            method: "POST",
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({
                                pedidos: arrPedidos,
                                numeroMesa
                            })
                        };
                        try {
                            let res = await fetch(URL_COPIARMESA, OPTIONS_COPIARMESA);
                            res = await res.json();
                        } catch(e) {
                            console.log(e);
                        }
                    }

                    // Obtener todos los elementos <li> dentro de #mi-lista
                    var listaElementos = document.querySelectorAll('#mi-lista > div');

                    // Iterar sobre los elementos de la lista
                    listaElementos.forEach(function(elemento) {
                    // Agregar el ID de cada elemento a elementosSeleccionados
                    elementosSeleccionados.push(elemento.getAttribute('id'));
                });

                   Swal.fire({
                                title: 'Eliminar elementos',
                                text: '¿Estás seguro de que deseas eliminar los elementos seleccionados?',
                                icon: 'warning',
                                showCancelButton: true,
                                confirmButtonText: 'Sí, eliminar',
                                cancelButtonText: 'Cancelar'
                            }).then((result) => {
                                if (result.isConfirmed) {
                                    copiarMesa();
                                    // El usuario hizo clic en "Sí, eliminar"
                                    var datos = {
                                        mesa: numMesa,
                                        elementosSeleccionados: elementosSeleccionados,
                                        idzona: idZona,
                                    };

                                    // Realizar la solicitud AJAX
                                    $.ajax({
                                        type: 'POST',
                                        url: "{{ path('eliminar_comida')}}",
                                        data: datos,
                                        success: function(response) {
                                        
                                            elementosSeleccionados = [];
                                            var selectedElements = document.querySelectorAll('#mi-lista > div');

                                            selectedElements.forEach(function(element) {
                                                element.parentNode.removeChild(element);
                                            });


                                            if(response.icon !== ''){
                                                var inputComensales = document.getElementById('input-comensales');
                                                inputComensales.value = 0;
                                                var imgElement = document.querySelector('#num-mesa-' + numMesa + ' img');
                                                imgElement.src = "{{ asset('img/') }}" + response.icon;
                                                arrayComensales = response.arraycomensales
                                            }

                                        

                                            var label_total = document.getElementById('total-label');
                                            totalMesa = parseFloat(response.total)
                                            label_total.textContent = 'Total = '+response.total+'€';

                                            var total_zona = document.getElementById('total-sala');
                                            total_zona.innerHTML = 'Total Sala: '+response.total_zona[0].total_porpagar+' €';
                                            // Manejar la respuesta de la solicitud AJAX (por ejemplo, mostrar un mensaje de éxito)
                                            Swal.fire('Éxito', 'Los elementos han sido eliminados con éxito', 'success');

                                        },
                                        error: function(xhr) {                                            
                                            if (xhr.status === 400) {
                                                // Manejar errores con código de estado 400 (u otros códigos de error)
                                                var errorMessage = xhr.responseText;
                                                Swal.fire('Error', errorMessage , 'error');
                                            } else {
                                                // Otros códigos de error
                                                alert('Ocurrió un error inesperado.');
        }
                                        }
                                    });
                                }
                            });



                }


            }

            function probarImpresora(){
                demostrarCapacidades('86:67:7A:3F:28:17','','Hola Mundo', 10);
            }


            function enviarCocina(){
                var ruta = "<img src='{{ asset('gifs/cocinando.gif') }}' alt='GIF' style='width:25%;'>";
                        $.ajax({
                                type: 'POST',
                                url: "{{ path('envio_cocina')}}",
                                data: {
                                    mesa_id: numMesa,
                                },
                                success: function (response) {
                                    if(response.todo_marchando){
                                        Swal.fire({
                                        position: "top-end",
                                        icon: "info",
                                        title: response.todo_marchando,
                                        showConfirmButton: false,
                                        customClass: {
                                            popup: 'ventana-cocina', // Clase personalizada para el contenedor del Swal
                                        },
                                        timer: 2500
                                        });

                                        

                                    } else {

                                        $.ajax({
                                            type: 'POST',
                                            url: "{{ path('imprimir_ticket_cocina')}}",
                                            data: {
                                                mesa: response.mesa,
                                                content: response.ticket_content,
                                                contentbarra: response.ticket_content_barra,
                                            },
                                            success: function (response) {


                                            },
                                            error: function (response){

                                            }
                                        })

                                        Swal.fire({
                                        position: "top-end",
                                        icon: "success",
                                        title: response.cocina,
                                        html: ruta,
                                        showConfirmButton: false,
                                        customClass: {
                                            popup: 'ventana-cocina', // Clase personalizada para el contenedor del Swal
                                        },
                                        timer: 2500
                                        });

                                        {# $('#state-table-1').removeClass('span-invisible');
                                        $('#state-table-2, #state-table-3').addClass('span-invisible');
                                        $('#mi-lista li:has(span)').find('span').remove(); #}


                                    }

                                    

                                    

                                       
                                    
                                },
                                error: function (response) {
                                        console.log(response);
                                        
                                }
                                });


            }


            {# function paginacion(arrayMesas, arrayUniones) {

                 const mesasPorPagina = 24;

                    // Calcular el número total de páginas
                    const totalPaginas = Math.max(Math.ceil(arrayMesas.length / mesasPorPagina), 1);

                    // Obtener el elemento con la clase "dist-mesas"
                    var distMesasElement = document.querySelector(".dist-mesas");

                    // Verificar si el contenedor de paginación ya existe
                    var paginacionContainer = document.getElementById("paginacion");

                    // Si no existe, crear un nuevo contenedor de paginación
                    if (!paginacionContainer) {
                        paginacionContainer = document.createElement("div");
                        paginacionContainer.id = "paginacion";
                        paginacionContainer.style.padding = "7px";

                        // Insertar el contenedor de paginación justo después de "dist-mesas"
                        distMesasElement.insertAdjacentElement('afterend', paginacionContainer);
                    } else {
                        // Limpiar el contenido del contenedor de paginación existente
                        paginacionContainer.innerHTML = "";
                    }

                    // Crear botones de paginación solo si hay más de una página
                    if (totalPaginas > 1) {
                        for (let pagina = 1; pagina <= totalPaginas; pagina++) {
                            var paginaBtn = document.createElement("button");
                            paginaBtn.classList.add("btn", "btn-primary");
                            paginaBtn.style.margin = "5px";
                            paginaBtn.textContent = pagina;
                            paginaBtn.addEventListener("click", function () {
                                mostrarMesasPorPagina(pagina);
                            });
                            paginacionContainer.appendChild(paginaBtn);
                        }
                    }

                  function mostrarMesasPorPagina(paginaSeleccionada) {
                    // Calcular el rango de mesas a mostrar
                    const inicio = (paginaSeleccionada - 1) * mesasPorPagina;
                    const fin = inicio + mesasPorPagina;

                    // Ocultar todas las mesas
                    arrayMesas.forEach((mesaNumero) => {
                        var mesaDiv = document.getElementById("num-mesa-" + mesaNumero.numero);
                        if (mesaDiv) {
                            mesaDiv.style.display = "none";
                        }
                    });

                    // Mostrar las mesas en el rango seleccionado
                    for (let i = inicio; i < fin && i < arrayMesas.length; i++) {
                        var mesaNumero = arrayMesas[i];

                        // Verificar si la mesa no está unida a ninguna otra
                        var estaUnida = false;
                        for (let mesaUnidaNumero in arrayUniones) {
                            var cadenaUniones = arrayUniones[mesaUnidaNumero];

                            if (cadenaUniones) {
                                // Si la cadena de uniones existe, puedes dividirla en un array de números
                                var arrayDeUniones = cadenaUniones.split(",");

                                // Verificar si la mesa actual coincide con el número de una mesa unida
                                if (arrayDeUniones.includes(mesaNumero.numero.toString())) {
                                    estaUnida = true;
                                    break;
                                }
                            }
                        }

                        // Si no está unida, mostrar la mesa
                        if (!estaUnida) {
                            var mesaDiv = document.getElementById("num-mesa-" + mesaNumero.numero);
                            if (mesaDiv) {
                                mesaDiv.style.display = ""; // Dejar el estilo vacío para que use el estilo por defecto
                            }
                        }
                    }
            }


                    // Mostrar las primeras mesas por defecto
                    mostrarMesasPorPagina(1);
            } #}

            {# Apartado de comandero y datos mesa #}
            function cargarComida(id_type_food) {

                    $.ajax({
                        url: "{{ path('search_comida') }}",
                        type: 'POST',
                        data: {
                            id_type: id_type_food
                        },
                        success: function (response) {
                                $('#food-container').empty();

                                var $foodContainer = $('#food-container');

                                // Crear un contenedor para los botones
                                var $groupContainer = $('<div class="button-group flex-wrap" style="display:flex;"></div>');
                                $foodContainer.append($groupContainer);

                                response.foods.forEach(function (food) {
                                    var extrasString = JSON.stringify(food.extras).replace(/"/g, '\\"');
                                    var $button = $('<button class="food-by-type"></button>');

                                    var buttonText = food.name;
                                    if (food.name === 'VARIS') {
                                        buttonText += ' (' + food.precio + '€)';
                                    }

                                    if(food.img !== ''){

                                        $button.append('<div class="button-type-food-right" style="background-image: url(\'' + food.img + '\'); background-size:cover;background-position: center;"></div>');

                                    } else {

                                        $button.append('<div class="button-type-food-right"><span id="texto-food">' + buttonText + '</span></div>');



                                    }


                                    $button.on('click', function () {
                                        cargarComidaMesa(food.id, food.extras, food.ordenplato);
                                    });

                                    // Agregar el botón al contenedor de botones
                                    $groupContainer.append($button);
                                });

                                // Ajustar el diseño de los botones al cargar la página y en respuesta al redimensionamiento
                                adjustButtonLayout();

                                $(window).on('resize', adjustButtonLayout);

                                // Función para ajustar el diseño de los botones según el tamaño del contenedor
                                function adjustButtonLayout() {
                                    var containerWidth = $groupContainer.width();
                                    var buttonWidth = $groupContainer.find('.food-by-type').outerWidth(true); // Ancho de un botón incluyendo márgenes

                                    var buttonsPerRow = Math.floor(containerWidth / buttonWidth);

                                    // Ajustar el número de columnas en función del ancho del contenedor y el ancho de los botones
                                    $groupContainer.css('flex-wrap', 'wrap');
                                    $groupContainer.find('.food-by-type').css('flex-basis', (100 / buttonsPerRow) + '%');
                                }
                            },

                        error: function (response) {
                                console.log(response);
                        }
                });

}

elementosSeleccionadosComida = [];

 function obtenerCheckboxOrdenPlato() {
        var radios = [
            document.getElementById('plato-1'),
            document.getElementById('plato-2'),
            document.getElementById('plato-3'),
            document.getElementById('plato-4')
        ];
        var seleccionado = null;

        radios.forEach(function(radio) {
            if (radio.checked) {
                seleccionado = radio.value;
            }
        });


        return seleccionado;
    }

    function limpiarCheckbox() {
        var checkboxes = [
            document.getElementById('plato-1'),
            document.getElementById('plato-2'),
            document.getElementById('plato-3'),
            document.getElementById('plato-4')
        ];

        checkboxes.forEach(function(checkbox) {
            checkbox.checked = false;
        });
    }

    function limpiarCheckboxes() {
    // Obtener el contenedor por su ID
    const contenedor = document.getElementById('suplementosContainer');

    // Verificar si se encontró el contenedor
    if (contenedor) {
        // Obtener todos los elementos input de tipo checkbox dentro del contenedor
        const checkboxes = contenedor.querySelectorAll('input[type="checkbox"]');

        // Iterar sobre cada checkbox encontrado
        checkboxes.forEach(function(checkbox) {
            // Desmarcar el checkbox
            checkbox.checked = false;
        });
    } else {
        console.error('No se encontró el contenedor con el ID "suplementosContainer".');
    }
}




function cargarComidaMesa(food_id, opcionesSuplementos, ordenplato){

	var suplementosContainer = document.getElementById('suplementosContainer');
	var inputObservaciones = document.getElementById('swal2-input');
    inputObservaciones.innerHTML = '';
    suplementosContainer.innerHTML = '';
        opcionesSuplementos.forEach(function (opcion, index) {
            var checkboxLabel = document.createElement('label');
            checkboxLabel.classList.add('form-check-label');
            checkboxLabel.innerHTML = '<input class="form-check-input" type="checkbox" value="' + opcion.nombre + '" onchange="checkboxChanged(this)">' +
                              opcion.nombre;
                checkboxLabel.style.margin = '5px'; // Agregar un pequeño margen
                checkboxLabel.style.display = 'block'; // Hacer que cada elemento sea una línea nueva
                checkboxLabel.style.textAlign = 'center'; // Centrar el texto
                suplementosContainer.appendChild(checkboxLabel);
                });

    // Obtener el radio correspondiente al valor de ordenplato
    var radioSeleccionado = document.querySelector('input[name="plato"][value="' + ordenplato + '"]');

    // Marcar el radio seleccionado si existe
    if (radioSeleccionado) {
        radioSeleccionado.checked = true;
    } else {
        var radios = document.querySelectorAll('input[name="plato"]');
        radios.forEach(function(radio) {
            radio.checked = false;
        });
    }

var arrayIsComida = {{is_comida|json_encode|raw}};

var esComida = arrayIsComida.findIndex(function(item){
	return item.id === food_id;
})
	
	if(numMesa){
		if(esComida !== -1 ){

            var modal = new bootstrap.Modal(document.getElementById('observacionesModal'));
            modal.show();

            var guardarObservacionesHandler = function () {
                document.getElementById('guardar-observaciones').removeEventListener('click', guardarObservacionesHandler);
                modal.hide();
                var checkboxOrden = obtenerCheckboxOrdenPlato();
                var inputValue = document.getElementById('swal2-input').value
			if (inputValue || inputValue === '') {
					$.ajax({
						url: "{{ path('add_comida_mesa') }}",
						type: 'POST',
						data: {
							mesa_id: numMesa,
							food_id: food_id,
							comentario: inputValue,
							extras: elementosSeleccionadosComida,
                            ordenplato: checkboxOrden,
                            idzona: idZona,
						},
						success: function (response) {
                            limpiarCheckbox();
                            elementosSeleccionadosComida = [];
                            document.getElementById('swal2-input').value = "";
							if(response.info){
								Swal.fire({
								title: response.info,
								text: 'No puedes añadir este producto a la mesa ya que no quedan existencias',
								icon: 'warning',
								confirmButtonText: 'OK'
								});


							} else {
								// Eliminar todo el contenido anterior excepto el label
								var lista = $('#mi-lista');
								for (var i = 0; i < response.pedido_mesa.length; i++) {
									{# var item = $('<strong><li id="'+response.pedido_mesa[i].id+'" data-invi="'+response.pedido_mesa[i].invitacion+'" data-info="'+response.pedido_mesa[i].pedido_mesa+'" class="li-comida" >'+response.pedido_mesa[i].comida+'.............'+response.pedido_mesa[i].precio+'</strong>€</li>'); #}
                                   var comida = response.pedido_mesa[i].comida;
                                    var precio = response.pedido_mesa[i].precio.toFixed(2) + '€'; // Formateamos el precio a dos decimales

                                // Creamos los divs para cada parte del contenido utilizando Bootstrap grid system
                                var $comidaDiv = $('<div id="none-select" class="col-4 col-sm-3 col-md-2 col-lg-5" style="display:flex;justify-content: flex-end;"></div>').text(comida); // Div para la comida
                                var $puntosDiv = $('<div id="none-select" class="col-4 col-sm-3 puntos"></div>'); // Div para los puntos
                                var $precioDiv = $('<div id="none-select" class="col-4 col-sm-3 col-md-3 col-lg-3 precio"></div>').text(precio);

                                var item = $('<div class="row"  id="'+response.pedido_mesa[i].id+'" data-name="'+comida+'" data-invi="'+response.pedido_mesa[i].invitacion+'" data-info="'+response.pedido_mesa[i].pedido_mesa+'" data-desc%="'+response.pedido_mesa[i].descP+'" data-desc€="'+response.pedido_mesa[i].descE+'" data-numplato="'+response.numplato+'" ></div>');
                                    item.append($comidaDiv, $puntosDiv, $precioDiv);


                                // Creamos el contenedor principal del li
                                var li = $('<li class="row li-pedido"></li>');
                                

                                // Añadimos los divs al contenedor principal
                                li.append(item);

                                // Agregamos el item al DOM antes de calcular dimensiones
                                $('#mi-lista').append(li);

                                // Calculamos el ancho disponible para $comidaDiv
                                var anchoDisponible = item.width() - $precioDiv.outerWidth(true) - $puntosDiv.outerWidth(true);

                                // Eliminamos el elemento del DOM una vez que hayamos terminado de calcular las dimensiones
                                item.remove();

                                var puntos = 50;

                                if(esTablet()){
                                    puntos = 25
                                } else if (esMovil()) {
                                    puntos = 20
                                }


                                {# $puntosDiv.text('.'.repeat(puntos)); #}
										(function(item) {
                                                item.on('click', function() {
                                                    new bootstrap.Modal(document.querySelector("#modalOpciones")).show();
                                                     var tituloOperaciones = document.getElementById('titulo-comida');
                                                    tituloOperaciones.textContent = item.data('name');
                                                    pedidoDatos = item.data('info');
                                                    if (item.data('invi') == '1') {
                                                        $('#invitarCheck').prop('checked', true);
                                                    } else {
                                                        $('#invitarCheck').prop('checked', false);
                                                    }
                                                    if (item.data('desc%') !==  null) {
                                                        $('#descuentoInputP').val(item.data('desc%'));
                                                    } else {
                                                        $('#descuentoInputP').val('');
                                                    }
                                                    if (item.data('desc€') !==  null) {
                                                        $('#descuentoInputE').val(item.data('desc€'));
                                                    } else {
                                                        $('#descuentoInputE').val('');
                                                    }

                                                    
                                                    
                                                });
                                                var tiempoUmbral = 200; // Tiempo en milisegundos para considerar que se ha mantenido pulsado
                                                var tiempoInicio; // Variable para almacenar el tiempo de inicio del toque

                                                item.on('touchstart', function(event) {
                                                    tiempoInicio = new Date().getTime(); // Guardamos el tiempo actual
                                                    // Ejecutar cualquier acción que desees cuando se comienza a mantener pulsado el elemento
                                                });

                                                item.on('touchend', function(event) {
                                                    var tiempoFin = new Date().getTime(); // Tiempo actual al levantar el dedo
                                                    var tiempoTranscurrido = tiempoFin - tiempoInicio; // Tiempo transcurrido desde que se empezó a mantener pulsado

                                                    if (tiempoTranscurrido >= tiempoUmbral) {
                                                        // Se ha mantenido pulsado durante el tiempo umbral
                                                        // Ejecutar cualquier acción adicional que desees
                                                        $(this).toggleClass('selected'); // añade/quita clase "selected"
                                                        var itemId = $(this).attr('id');
                                                        if ($(this).hasClass('selected')) {
                                                            var datosPedido = {
                                                                    itemId: itemId,
                                                                    pedidoDatos: item.data('info')
                                                                };
                                                            elementosSeleccionados.push(datosPedido);
                                                        } else {
                                                            elementosSeleccionados.splice(elementosSeleccionados.indexOf(itemId), 1);
                                                        }
                                                    } else {
                                                        // El tiempo de pulsado no alcanzó el umbral, se trató de un toque corto
                                                        // Ejecutar acciones alternativas si es necesario
                                                    }
                                                });

                                                item.on('mousedown', function() {
                                                tiempoInicio = new Date().getTime(); // Guardamos el tiempo actual
                                                // Ejecutar cualquier acción que desees cuando se comienza a mantener pulsado el elemento
                                                });

                                            item.on('mouseup', function() {
                                                var tiempoFin = new Date().getTime(); // Tiempo actual al soltar el clic
                                                var tiempoTranscurrido = tiempoFin - tiempoInicio; // Tiempo transcurrido desde que se empezó a mantener pulsado

                                                if (tiempoTranscurrido >= tiempoUmbral) {
                                                    // Se ha mantenido pulsado durante el tiempo umbral
                                                    // Ejecutar cualquier acción adicional que desees
                                                    $(this).toggleClass('selected'); // añade/quita clase "selected"
                                                        var itemId = $(this).attr('id');
                                                        if ($(this).hasClass('selected')) {
                                                            var datosPedido = {
                                                                    itemId: itemId,
                                                                    pedidoDatos: item.data('info')
                                                                };
                                                                elementosSeleccionados.push(datosPedido);
                                                        } else {
                                                            elementosSeleccionados.splice(elementosSeleccionados.indexOf(itemId), 1);
                                                        }
                                                } else {
                                                    // El tiempo de pulsado no alcanzó el umbral, se trató de un clic corto
                                                    // Ejecutar acciones alternativas si es necesario
                                                }
                                            });
                                            })(item);
										lista.prepend(item)
                                        totalMesa += parseFloat(response.pedido_mesa[i].precio.toFixed(2))
                                        
                                    $('#total-label').text('Total = '+totalMesa.toFixed(2)+'€')	
                                    }

								// Agregar la lista detrás del label
								$('#view-table-dash label').after(lista);

                                var total_zona = document.getElementById('total-sala');
                                total_zona.innerHTML = 'Total Sala: '+response.total_zona[0].total_porpagar+' €';


							}
						
						},
						error: function (response) {
								console.log(response);
								
						}
						});
							}


            }

            document.getElementById('guardar-observaciones').addEventListener('click', guardarObservacionesHandler);
            	

		} else {
				$.ajax({
						url: "{{ path('add_comida_mesa') }}",
						type: 'POST',
						data: {
							mesa_id: numMesa,
							food_id: food_id,
                            idzona: idZona,
						},
						success: function (response) {
                            
							if(response.info){
								Swal.fire({
								title: response.info,
								text: 'No puedes añadir este producto a la mesa ya que no quedan existencias',
								icon: 'warning',
								confirmButtonText: 'OK'
								});


							} else {
								// Eliminar todo el contenido anterior excepto el label
								var lista = $('#mi-lista');
								for (var i = 0; i < response.pedido_mesa.length; i++) {
								{# var item = $('<strong><li id="'+response.pedido_mesa[i].id+'" data-invi="'+response.pedido_mesa[i].invitacion+'" data-info="'+response.pedido_mesa[i].pedido_mesa+'" class="li-comida">'+response.pedido_mesa[i].comida+'.............'+response.pedido_mesa[i].precio+'€</strong></li>'); #}
                                var comida = response.pedido_mesa[i].comida;
                                var precio = response.pedido_mesa[i].precio.toFixed(2) + '€'; // Formateamos el precio a dos decimales

                                // Creamos los divs para cada parte del contenido utilizando Bootstrap grid system
                                var $comidaDiv = $('<div id="none-select" class="col-4 col-sm-3 col-md-2 col-lg-5" style="display:flex;justify-content: flex-end;"></div>').text(comida); // Div para la comida
                                var $puntosDiv = $('<div id="none-select" class="col-4 col-sm-3 puntos"></div>'); // Div para los puntos
                                var $precioDiv = $('<div id="none-select" class="col-4 col-sm-3 col-md-3 col-lg-3 precio"></div>').text(precio);

                                var item = $('<div class="row"  id="'+response.pedido_mesa[i].id+'" data-name="'+comida+'" data-invi="'+response.pedido_mesa[i].invitacion+'" data-info="'+response.pedido_mesa[i].pedido_mesa+'" data-desc%="'+response.pedido_mesa[i].descP+'" data-desc€="'+response.pedido_mesa[i].descE+'"></div>');
                                    item.append($comidaDiv, $puntosDiv, $precioDiv);


                                // Creamos el contenedor principal del li
                                var li = $('<li class="row li-pedido"></li>');
                                

                                // Añadimos los divs al contenedor principal
                                li.append(item);

                                // Agregamos el item al DOM antes de calcular dimensiones
                                $('#mi-lista').append(li);

                                // Calculamos el ancho disponible para $comidaDiv
                                var anchoDisponible = item.width() - $precioDiv.outerWidth(true) - $puntosDiv.outerWidth(true);

                                // Eliminamos el elemento del DOM una vez que hayamos terminado de calcular las dimensiones
                                item.remove();

                                var puntos = 50;

                                if(esTablet()){
                                    puntos = 25
                                } else if (esMovil()) {
                                    puntos = 20
                                }


                                {# $puntosDiv.text('.'.repeat(puntos)); #}

                                // Ahora 'item' contiene el elemento <li> completo
									(function(item) {
                                                item.on('click', function() {
                                                    new bootstrap.Modal(document.querySelector("#modalOpciones")).show();
                                                     var tituloOperaciones = document.getElementById('titulo-comida');
                                                    tituloOperaciones.textContent = item.data('name');
                                                    pedidoDatos = item.data('info');
                                                    if (item.data('invi') == '1') {
                                                        $('#invitarCheck').prop('checked', true);
                                                    } else {
                                                        $('#invitarCheck').prop('checked', false);
                                                    }
                                                    if (item.data('desc%') !==  null) {
                                                        $('#descuentoInputP').val(item.data('desc%'));
                                                    } else {
                                                        $('#descuentoInputP').val('');
                                                    }
                                                    if (item.data('desc€') !==  null) {
                                                        $('#descuentoInputE').val(item.data('desc€'));
                                                    } else {
                                                        $('#descuentoInputE').val('');
                                                    }
                                                    
                                                });
                                                var tiempoUmbral = 200; // Tiempo en milisegundos para considerar que se ha mantenido pulsado
                                                var tiempoInicio; // Variable para almacenar el tiempo de inicio del toque

                                                item.on('touchstart', function(event) {
                                                    tiempoInicio = new Date().getTime(); // Guardamos el tiempo actual
                                                    // Ejecutar cualquier acción que desees cuando se comienza a mantener pulsado el elemento
                                                });

                                                item.on('touchend', function(event) {
                                                    var tiempoFin = new Date().getTime(); // Tiempo actual al levantar el dedo
                                                    var tiempoTranscurrido = tiempoFin - tiempoInicio; // Tiempo transcurrido desde que se empezó a mantener pulsado

                                                    if (tiempoTranscurrido >= tiempoUmbral) {
                                                        // Se ha mantenido pulsado durante el tiempo umbral
                                                        // Ejecutar cualquier acción adicional que desees
                                                        $(this).toggleClass('selected'); // añade/quita clase "selected"
                                                        var itemId = $(this).attr('id');
                                                        if ($(this).hasClass('selected')) {
                                                            var datosPedido = {
                                                                    itemId: itemId,
                                                                    pedidoDatos: item.data('info')
                                                                };
                                                                elementosSeleccionados.push(datosPedido);
                                                        } else {
                                                            elementosSeleccionados.splice(elementosSeleccionados.indexOf(itemId), 1);
                                                        }
                                                    } else {
                                                        // El tiempo de pulsado no alcanzó el umbral, se trató de un toque corto
                                                        // Ejecutar acciones alternativas si es necesario
                                                    }
                                                });

                                                item.on('mousedown', function() {
                                                tiempoInicio = new Date().getTime(); // Guardamos el tiempo actual
                                                // Ejecutar cualquier acción que desees cuando se comienza a mantener pulsado el elemento
                                                });

                                            item.on('mouseup', function() {
                                                var tiempoFin = new Date().getTime(); // Tiempo actual al soltar el clic
                                                var tiempoTranscurrido = tiempoFin - tiempoInicio; // Tiempo transcurrido desde que se empezó a mantener pulsado

                                                if (tiempoTranscurrido >= tiempoUmbral) {
                                                    // Se ha mantenido pulsado durante el tiempo umbral
                                                    // Ejecutar cualquier acción adicional que desees
                                                    $(this).toggleClass('selected'); // añade/quita clase "selected"
                                                        var itemId = $(this).attr('id');
                                                        if ($(this).hasClass('selected')) {
                                                            var datosPedido = {
                                                                    itemId: itemId,
                                                                    pedidoDatos: item.data('info')
                                                                };
                                                                elementosSeleccionados.push(datosPedido);
                                                        } else {
                                                            elementosSeleccionados.splice(elementosSeleccionados.indexOf(itemId), 1);
                                                        }
                                                } else {
                                                    // El tiempo de pulsado no alcanzó el umbral, se trató de un clic corto
                                                    // Ejecutar acciones alternativas si es necesario
                                                }
                                            });
                                            })(item);
									lista.prepend(item)
                                        totalMesa += parseFloat(response.pedido_mesa[i].precio.toFixed(2))
                                    
                                    $('#total-label').text('Total = '+totalMesa.toFixed(2)+'€')								}

								// Agregar la lista detrás del label
								$('#view-table-dash label').after(lista);

                                var total_zona = document.getElementById('total-sala');
                                total_zona.innerHTML = 'Total Sala: '+response.total_zona[0].total_porpagar+' €';

							}
						
						},
						error: function (response) {
								console.log(response);
								
						}
						});
			
		}
		
		

	} else {

		Swal.fire({
            title: 'Tienes que elegir una mesa',
            text: 'No se puede añadir un producto si no has seleccionado una mesa',
            icon: 'error',
            confirmButtonText: 'OK'
            });
	}




}

function checkboxChanged(checkbox) {
    var valor = checkbox.value;

    // Verificar si el checkbox está marcado o desmarcado y actualizar el array en consecuencia
    if (checkbox.checked) {
        // Agregar el valor al array si está marcado
        elementosSeleccionadosComida.push(valor);
    } else {
        // Eliminar el valor del array si está desmarcado
        var index = elementosSeleccionadosComida.indexOf(valor);
        if (index !== -1) {
            elementosSeleccionadosComida.splice(index, 1);
        }
    }

}

document.getElementById('input-comensales').addEventListener('input', function() {
    var comensales = this.value.trim(); // Trim para eliminar espacios en blanco
    if (comensales !== '') {
        guardarModal();
    }
});

function guardarModal(){

    var comensales = document.getElementById('input-comensales').value;

    if (comensales) {
    var imgElement = document.querySelector('#num-mesa-' + numMesa + ' img');
    imgElement.src = "{{ asset('img/mesa-redonda.png') }}";


}


    $.ajax({
            url: "{{ path('add_comensales')}}",
            method: 'POST',
            data: {
                numComensales: comensales,
                mesa: numMesa,
            },
            success: function (response) {
                
                arrayComensales = response.arraycomensales

                if(response.icon !== ''){
                    var imgElement = document.querySelector('#num-mesa-' + numMesa + ' img');
                    imgElement.src = "{{ asset('img/') }}" + response.icon;
                }

            },
            error: function (response) {
                console.log(response);
            }
        });
}

function sumarProducto(){
    food_id = elementosSeleccionados[0]
    esComida = -1;
    if(esComida !== -1 ){
			Swal.fire({
		title: "Observaciones",
		html: htmlFragment,
		customClass: {
			popup: 'observaciones-cocina', // Clase personalizada para el contenedor del Swal
		},
		preConfirm: function () {
			var inputValue = document.getElementById('swal2-input').value
			if (inputValue || inputValue === '') {
					$.ajax({
						url: "{{ path('add_comida_mesa') }}",
						type: 'POST',
						data: {
							mesa_id: numMesa,
							pedido: pedidoDatos,
                            idzona: idZona,
						},
						success: function (response) {
                            

							if(response.info){
								Swal.fire({
								title: response.info,
								text: 'No puedes añadir este producto a la mesa ya que no quedan existencias',
								icon: 'warning',
								confirmButtonText: 'OK'
								});


							} else {
								// Eliminar todo el contenido anterior excepto el label
								var lista = $('#mi-lista');
								for (var i = 0; i < response.pedido_mesa.length; i++) {
									{# var item = $('<li class="li-pedido" id="'+response.pedido_mesa[i].id+'" data-invi="'+response.pedido_mesa[i].invitacion+'" data-info="'+response.pedido_mesa[i].pedido_mesa+'" class="li-comida" >'+response.pedido_mesa[i].comida+'.............'+response.pedido_mesa[i].precio+'€</li>'); #}
                                    var comida = response.pedido_mesa[i].comida;
                                var precio = response.pedido_mesa[i].precio.toFixed(2) + '€'; // Formateamos el precio a dos decimales

                                // Creamos los divs para cada parte del contenido utilizando Bootstrap grid system
                                var $comidaDiv = $('<div id="none-select" class="col-4 col-sm-3 col-md-2 col-lg-5" style="display:flex;justify-content: flex-end;"></div>').text(comida); // Div para la comida
                                var $puntosDiv = $('<div id="none-select" class="col-4 col-sm-3 puntos"></div>'); // Div para los puntos
                                var $precioDiv = $('<div id="none-select" class="col-4 col-sm-3 col-md-3 col-lg-3 precio"></div>').text(precio);

                                var item = $('<div class="row"  id="'+response.pedido_mesa[i].id+'" data-name="'+comida+'" data-invi="'+response.pedido_mesa[i].invitacion+'" data-info="'+response.pedido_mesa[i].pedido_mesa+'" data-desc%="'+response.pedido_mesa[i].descP+'" data-desc€="'+response.pedido_mesa[i].descE+'"></div>');
                                    item.append($comidaDiv, $puntosDiv, $precioDiv);


                                // Creamos el contenedor principal del li
                                var li = $('<li class="row li-pedido"></li>');
                                

                                // Añadimos los divs al contenedor principal
                                li.append(item);

                                // Agregamos el item al DOM antes de calcular dimensiones
                                $('#mi-lista').append(li);

                                // Calculamos el ancho disponible para $comidaDiv
                                var anchoDisponible = item.width() - $precioDiv.outerWidth(true) - $puntosDiv.outerWidth(true);

                                var puntos = 50;

                                if(esTablet()){
                                    puntos = 25
                                } else if (esMovil()) {
                                    puntos = 40
                                }

                                document.addEventListener('selectstart', function(e) {
                                    e.preventDefault(); // Evita la selección de texto
                                });

                                // Eliminamos el elemento del DOM una vez que hayamos terminado de calcular las dimensiones
                                item.remove();

                                {# $puntosDiv.text('.'.repeat(puntos)); #}
										(function(item) {
                                                item.on('click', function() {
                                                    new bootstrap.Modal(document.querySelector("#modalOpciones")).show();
                                                    var tituloOperaciones = document.getElementById('titulo-comidas');
                                                    tituloOperaciones = item.data('info');
                                                    pedidoDatos = item.data('info');
                                                    if (item.data('invi') == '1') {
                                                        $('#invitarCheck').prop('checked', true);
                                                    } else {
                                                        $('#invitarCheck').prop('checked', false);
                                                    }
                                                    
                                                });
                                                var tiempoUmbral = 200; // Tiempo en milisegundos para considerar que se ha mantenido pulsado
                                                var tiempoInicio; // Variable para almacenar el tiempo de inicio del toque

                                                item.on('touchstart', function(event) {
                                                    tiempoInicio = new Date().getTime(); // Guardamos el tiempo actual
                                                    // Ejecutar cualquier acción que desees cuando se comienza a mantener pulsado el elemento
                                                });

                                                item.on('touchend', function(event) {
                                                    var tiempoFin = new Date().getTime(); // Tiempo actual al levantar el dedo
                                                    var tiempoTranscurrido = tiempoFin - tiempoInicio; // Tiempo transcurrido desde que se empezó a mantener pulsado

                                                    if (tiempoTranscurrido >= tiempoUmbral) {
                                                        // Se ha mantenido pulsado durante el tiempo umbral
                                                        // Ejecutar cualquier acción adicional que desees
                                                        $(this).toggleClass('selected'); // añade/quita clase "selected"
                                                        var itemId = $(this).attr('id');
                                                        if ($(this).hasClass('selected')) {
                                                            elementosSeleccionados.push(itemId);
                                                        } else {
                                                            elementosSeleccionados.splice(elementosSeleccionados.indexOf(itemId), 1);
                                                        }
                                                    } else {
                                                        // El tiempo de pulsado no alcanzó el umbral, se trató de un toque corto
                                                        // Ejecutar acciones alternativas si es necesario
                                                    }
                                                });

                                                item.on('mousedown', function() {
                                                tiempoInicio = new Date().getTime(); // Guardamos el tiempo actual
                                                // Ejecutar cualquier acción que desees cuando se comienza a mantener pulsado el elemento
                                                });

                                            item.on('mouseup', function() {
                                                var tiempoFin = new Date().getTime(); // Tiempo actual al soltar el clic
                                                var tiempoTranscurrido = tiempoFin - tiempoInicio; // Tiempo transcurrido desde que se empezó a mantener pulsado

                                                if (tiempoTranscurrido >= tiempoUmbral) {
                                                    // Se ha mantenido pulsado durante el tiempo umbral
                                                    // Ejecutar cualquier acción adicional que desees
                                                    $(this).toggleClass('selected'); // añade/quita clase "selected"
                                                        var itemId = $(this).attr('id');
                                                        if ($(this).hasClass('selected')) {
                                                            elementosSeleccionados.push(itemId);
                                                        } else {
                                                            elementosSeleccionados.splice(elementosSeleccionados.indexOf(itemId), 1);
                                                        }
                                                } else {
                                                    // El tiempo de pulsado no alcanzó el umbral, se trató de un clic corto
                                                    // Ejecutar acciones alternativas si es necesario
                                                }
                                            });
                                            })(item);
										lista.prepend(item)
                                        totalMesa += parseFloat(response.pedido_mesa[i].precio)
                                    $('#total-label').text('Total = '+totalMesa.toFixed(2)+'€')								}

								// Agregar la lista detrás del label
								$('#view-table-dash label').after(lista);

                                var total_zona = document.getElementById('total-sala');
                                total_zona.innerHTML = 'Total Sala: '+response.total_zona[0].total_porpagar+' €';

							}
						
						},
						error: function (response) {
								console.log(response);
								
						}
						});
							}
						}
				});
		} else {
				$.ajax({
						url: "{{ path('add_comida_mesa') }}",
						type: 'POST',
						data: {
							mesa_id: numMesa,
							pedido: pedidoDatos,
                            idzona: idZona,
						},
						success: function (response) {
                        
							if(response.info){
								Swal.fire({
								title: response.info,
								text: 'No puedes añadir este producto a la mesa ya que no quedan existencias',
								icon: 'warning',
								confirmButtonText: 'OK'
								});


							} else {
								// Eliminar todo el contenido anterior excepto el label
								var lista = $('#mi-lista');
								for (var i = 0; i < response.pedido_mesa.length; i++) {
								{# var item = $('<li class="li-pedido" id="'+response.pedido_mesa[i].id+'" data-invi="'+response.pedido_mesa[i].invitacion+'" data-info="'+response.pedido_mesa[i].pedido_mesa+'" class="li-comida">'+response.pedido_mesa[i].comida+'.............'+response.pedido_mesa[i].precio+'€</li>'); #}
                                  var comida = response.pedido_mesa[i].comida;
                                var precio = response.pedido_mesa[i].precio.toFixed(2) + '€'; // Formateamos el precio a dos decimales

                                // Creamos los divs para cada parte del contenido utilizando Bootstrap grid system
                                var $comidaDiv = $('<div id="none-select" class="col-4 col-sm-3 col-md-2 col-lg-5" style="display:flex;justify-content: flex-end;"></div>').text(comida); // Div para la comida
                                var $puntosDiv = $('<div id="none-select" class="col-4 col-sm-3 puntos"></div>'); // Div para los puntos
                                var $precioDiv = $('<div id="none-select" class="col-4 col-sm-3 col-md-3 col-lg-3 precio"></div>').text(precio);

                                var item = $('<div class="row"  id="'+response.pedido_mesa[i].id+'" data-name="'+comida+'" data-invi="'+response.pedido_mesa[i].invitacion+'" data-info="'+response.pedido_mesa[i].pedido_mesa+'" data-desc%="'+response.pedido_mesa[i].descP+'" data-desc€="'+response.pedido_mesa[i].descE+'"></div>');
                                    item.append($comidaDiv, $puntosDiv, $precioDiv);


                                // Creamos el contenedor principal del li
                                var li = $('<li class="row li-pedido"></li>');
                                

                                // Añadimos los divs al contenedor principal
                                li.append(item);

                                // Agregamos el item al DOM antes de calcular dimensiones
                                $('#mi-lista').append(li);

                                // Calculamos el ancho disponible para $comidaDiv
                                var anchoDisponible = item.width() - $precioDiv.outerWidth(true) - $puntosDiv.outerWidth(true);

                                var puntos = 50;

                                if(esTablet()){
                                    puntos = 25
                                } else if (esMovil()) {
                                    puntos = 40
                                }

                                document.addEventListener('selectstart', function(e) {
                                    e.preventDefault(); // Evita la selección de texto
                                });

                                // Eliminamos el elemento del DOM una vez que hayamos terminado de calcular las dimensiones
                                item.remove();

                                {# $puntosDiv.text('.'.repeat(puntos)); #}
									(function(item) {
                                                item.on('click', function() {
                                                    new bootstrap.Modal(document.querySelector("#modalOpciones")).show();
                                                    var tituloOperaciones = document.getElementById('titulo-comidas');
                                                    tituloOperaciones = item.data('info');
                                                    pedidoDatos = item.data('info');
                                                    if (item.data('invi') == '1') {
                                                        $('#invitarCheck').prop('checked', true);
                                                    } else {
                                                        $('#invitarCheck').prop('checked', false);
                                                    }
                                                    
                                                });
                                                var tiempoUmbral = 200; // Tiempo en milisegundos para considerar que se ha mantenido pulsado
                                                var tiempoInicio; // Variable para almacenar el tiempo de inicio del toque

                                                item.on('touchstart', function(event) {
                                                    tiempoInicio = new Date().getTime(); // Guardamos el tiempo actual
                                                    // Ejecutar cualquier acción que desees cuando se comienza a mantener pulsado el elemento
                                                });

                                                item.on('touchend', function(event) {
                                                    var tiempoFin = new Date().getTime(); // Tiempo actual al levantar el dedo
                                                    var tiempoTranscurrido = tiempoFin - tiempoInicio; // Tiempo transcurrido desde que se empezó a mantener pulsado

                                                    if (tiempoTranscurrido >= tiempoUmbral) {
                                                        // Se ha mantenido pulsado durante el tiempo umbral
                                                        // Ejecutar cualquier acción adicional que desees
                                                        $(this).toggleClass('selected'); // añade/quita clase "selected"
                                                        var itemId = $(this).attr('id');
                                                        if ($(this).hasClass('selected')) {
                                                            elementosSeleccionados.push(itemId);
                                                        } else {
                                                            elementosSeleccionados.splice(elementosSeleccionados.indexOf(itemId), 1);
                                                        }
                                                    } else {
                                                        // El tiempo de pulsado no alcanzó el umbral, se trató de un toque corto
                                                        // Ejecutar acciones alternativas si es necesario
                                                    }
                                                });

                                                item.on('mousedown', function() {
                                                tiempoInicio = new Date().getTime(); // Guardamos el tiempo actual
                                                // Ejecutar cualquier acción que desees cuando se comienza a mantener pulsado el elemento
                                                });

                                            item.on('mouseup', function() {
                                                var tiempoFin = new Date().getTime(); // Tiempo actual al soltar el clic
                                                var tiempoTranscurrido = tiempoFin - tiempoInicio; // Tiempo transcurrido desde que se empezó a mantener pulsado

                                                if (tiempoTranscurrido >= tiempoUmbral) {
                                                    // Se ha mantenido pulsado durante el tiempo umbral
                                                    // Ejecutar cualquier acción adicional que desees
                                                    $(this).toggleClass('selected'); // añade/quita clase "selected"
                                                        var itemId = $(this).attr('id');
                                                        if ($(this).hasClass('selected')) {
                                                            elementosSeleccionados.push(itemId);
                                                        } else {
                                                            elementosSeleccionados.splice(elementosSeleccionados.indexOf(itemId), 1);
                                                        }
                                                } else {
                                                    // El tiempo de pulsado no alcanzó el umbral, se trató de un clic corto
                                                    // Ejecutar acciones alternativas si es necesario
                                                }
                                            });
                                            })(item);
									lista.prepend(item)
                                        totalMesa += parseFloat(response.pedido_mesa[i].precio)
                                    $('#total-label').text('Total = '+totalMesa.toFixed(2)+'€')	
                                    
                                    
                                    							

								// Agregar la lista detrás del label
								$('#view-table-dash label').after(lista);

                                var total_zona = document.getElementById('total-sala');
                                total_zona.innerHTML = 'Total Sala: '+response.total_zona[0].total_porpagar+' €';

                                }

							}
						
						},
						error: function (response) {
								console.log(response);
								
						}
						});
			
		}


}

function eliminarProducto(){

    $.ajax({

            url: "{{ path('eliminar_producto') }}",
            type: 'POST',
            data: {
                pedido: pedidoDatos,
                mesa: numMesa,
                idzona: idZona,
            },
            success: function (response) {
               

                $('div[data-info="'+pedidoDatos+'"]').remove();
                totalMesa -= parseFloat(response.restar);
                $('#total-label').text('Total = '+totalMesa.toFixed(2)+'€');

                // Seleccionar la lista ul
                var lista = document.getElementById("mi-lista");

                // Verificar si la lista no tiene ningún elemento hijo
                if (lista.children.length === 0) {
                   arrayComensales = response.arraycomensales
                   // Obtener el elemento div con el id que contiene el identificador de la mesa
                    var mesaElement = document.getElementById('num-mesa-' + numMesa);

                    // Verificar si se encontró el elemento
                    if (mesaElement) {
                        // Obtener la imagen dentro del elemento div
                        var imagenElement = mesaElement.querySelector('img.card-img-top');
                        
                        // Verificar si se encontró la imagen
                        if (imagenElement) {
                            // Cambiar el atributo src de la imagen
                            imagenElement.src = "{{ asset('img/') }}" + response.icon; // Cambia 'nueva-ruta-de-la-imagen.png' por la ruta de tu nueva imagen
                        }
                    }
                }

                var total_zona = document.getElementById('total-sala');
                total_zona.innerHTML = 'Total Sala: '+response.total_zona[0].total_porpagar+' €';


            },
            error: function (response){

            }

    });           


} 

function inivitar(ref){
    

        $.ajax({

            url: "{{ path('invitar') }}",
            type: 'POST',
            data: {
                pedido: pedidoDatos,
                mesa: numMesa,
                ref: ref,
                idzona: idZona,
            },
            success: function (response) {

                // Seleccionar el elemento <li> con el atributo data-info igual a "2276"
                var elementoLi = document.querySelector('div[data-info="'+pedidoDatos+'"]');

                // Verificar si se encontró el elemento <li>
                if (elementoLi) {
                    // Seleccionar el elemento con la clase "precio" dentro del elemento <li>
                    var elementoPrecio = elementoLi.querySelector('.precio');
                    
                    // Verificar si se encontró el elemento con la clase "precio"
                    if (elementoPrecio) {
                        
                        if(response.precioproducto !== null){
                            elementoPrecio.textContent = response.precioproducto;
                        } else {
                            elementoPrecio.textContent = 'Invitación';
                        }
                        
                    } 
                } 



                    totalMesa = response.total_mesa;
                    document.getElementById('total-label').innerHTML = 'Total: '+totalMesa+'€';

                    var total_zona = document.getElementById('total-sala');
                    total_zona.innerHTML = 'Total Sala: '+response.total_zona[0].total_porpagar+' €';


            },
            error: function (response){
                console.log(response);

            }

    }); 



}

 $('#invitarCheck').on('change', function() {
        if ($(this).is(':checked')) {
            // Llama a tu función aquí
            inivitar(1);
        } else {
            // Llama a tu otra función aquí
            inivitar(2);
        }
        });

        function esTablet() {
             const isTabletUserAgent = /iPad/i.test(navigator.userAgent) || 
            (navigator.userAgent.toLowerCase().indexOf('android') > -1 && 
            navigator.userAgent.toLowerCase().indexOf('mobile') === -1) ||
            /tablet/i.test(navigator.userAgent);

        const screenWidth = Math.min(window.screen.width, window.screen.height);
        const screenHeight = Math.max(window.screen.width, window.screen.height);
        const isTabletResolution = (screenWidth === 800 && screenHeight === 1280);

    return isTabletUserAgent || isTabletResolution;
        }

        function escalaTablet() {
            const width = window.innerWidth;
            if (width >= 800 && width <= 854) {
                return 0.45; // Escala para un ancho entre 800 y 854
            } else if (width >= 900 && width <= 1300) {
                return 0.55;// Define otros rangos y escalas según sea necesario
            } else {
                return 1; // Por defecto, no se aplica escala
            }
        }

        function esMovil() {

            return /iPhone|Android/.test(navigator.userAgent) && !window.MSStream &&
                (window.innerWidth < 768); // Excluir tablets con este umbral
        }



        // Obtener los elementos de entrada por su ID
        var descuentoInputPorcentaje = document.getElementById('descuentoInputP');
        var descuentoInputEuros = document.getElementById('descuentoInputE');

        var timeout; // Variable para almacenar el temporizador

        descuentoInputPorcentaje.addEventListener('input', function() {
            clearTimeout(timeout); // Limpiar el temporizador existente, si lo hay

            // Establecer un nuevo temporizador para ejecutar el código después de 500 milisegundos (medio segundo) de inactividad
            timeout = setTimeout(function() {
                $.ajax({
                    url: "{{path('descuento')}}",
                    method: 'POST',
                    data: {mesa: numMesa, descuento: descuentoInputPorcentaje.value, pedido: pedidoDatos, tipo: 'porcentaje', idzona: idZona},
                    success: function(response) {

                        var elementoLi = document.querySelector('div.row[data-info="'+pedidoDatos+'"]');
                        var divPrecio = elementoLi.querySelector('.precio');
                        divPrecio.innerHTML = '<strong>'+response.preciofinal+'€ </strong>';

                        totalMesa = response.total;
                        document.getElementById('total-label').innerHTML = 'Total: '+totalMesa+'€';

                        var total_zona = document.getElementById('total-sala');
                        total_zona.innerHTML = 'Total Sala: '+response.total_zona[0].total_porpagar+' €';
                    },
                    error: function(xhr, status, error) {
                        console.error('Error en la solicitud:', status, error);
                    }
                });
            }, 500); // Medio segundo de tiempo de espera antes de ejecutar la solicitud AJAX
        });

        descuentoInputEuros.addEventListener('input', function() {

            clearTimeout(timeout); // Limpiar el temporizador existente, si lo hay

            // Establecer un nuevo temporizador para ejecutar el código después de 500 milisegundos (medio segundo) de inactividad
            timeout = setTimeout(function() {
                $.ajax({
                    url: "{{path('descuento')}}",
                    method: 'POST',
                    data: {mesa: numMesa, descuento: descuentoInputEuros.value, pedido: pedidoDatos, tipo: 'euros', idzona: idZona},
                    success: function(response) {
                        var elementoLi = document.querySelector('div.row[data-info="'+pedidoDatos+'"]');
                        var divPrecio = elementoLi.querySelector('.precio');
                        divPrecio.innerHTML = '<strong>'+response.preciofinal+'€ </strong>';

                        totalMesa = response.total;
                        document.getElementById('total-label').innerHTML = 'Total: '+totalMesa+'€';

                        var total_zona = document.getElementById('total-sala');
                        total_zona.innerHTML = 'Total Sala: '+response.total_zona[0].total_porpagar+' €';
                    },
                    error: function(xhr, status, error) {
                        console.error('Error en la solicitud:', status, error);
                    }
                });
            }, 500); // Medio segundo de tiempo de espera antes de ejecutar la solicitud AJAX
            
        });




        function descuentoMesa(){

            var timeout;
            var descuentoInputPorcentaje = document.getElementById('descuentoPorcentajeInput');
            var descuentoInputEuros = document.getElementById('descuentoEurosInput');

            new bootstrap.Modal(document.querySelector("#descuentoModal")).show();

            descuentoInputPorcentaje.addEventListener('input', function() {

            clearTimeout(timeout); // Limpiar el temporizador existente, si lo hay

            // Establecer un nuevo temporizador para ejecutar el código después de 500 milisegundos (medio segundo) de inactividad
            timeout = setTimeout(function() {
                $.ajax({
                    url: "{{path('descuento_mesa')}}",
                    method: 'POST',
                    data: {mesa: numMesa, descuento: descuentoInputPorcentaje.value, tipo: 'porcentaje'},
                    success: function(response) {

                        totalMesa = parseFloat(response.total);
                        document.getElementById('total-label').innerHTML = 'Total: '+totalMesa.toFixed(2)+'€';
                       
                    },
                    error: function(xhr, status, error) {
                        console.error('Error en la solicitud:', status, error);
                    }
                });
            }, 500); // Medio segundo de tiempo de espera antes de ejecutar la solicitud AJAX
            
        });


            descuentoInputEuros.addEventListener('input', function() {

            clearTimeout(timeout); // Limpiar el temporizador existente, si lo hay

            // Establecer un nuevo temporizador para ejecutar el código después de 500 milisegundos (medio segundo) de inactividad
            timeout = setTimeout(function() {
                $.ajax({
                    url: "{{path('descuento_mesa')}}",
                    method: 'POST',
                    data: {mesa: numMesa, descuento: descuentoInputEuros.value, tipo: 'euros'},
                    success: function(response) {

                        totalMesa = response.total;
                        document.getElementById('total-label').innerHTML = 'Total: '+totalMesa+'€';
                        
                    },
                    error: function(xhr, status, error) {
                        console.error('Error en la solicitud:', status, error);
                    }
                });
            }, 500); // Medio segundo de tiempo de espera antes de ejecutar la solicitud AJAX
            
        });
        }






        document.addEventListener("DOMContentLoaded", function() {
        // Obtener el modal por su ID
        var modal = document.getElementById('modalControlMesas');

        // Agregar un listener para el evento 'hidden.bs.modal' (puedes necesitar ajustar esto dependiendo de cómo se implemente el modal en tu proyecto)
        modal.addEventListener('hidden.bs.modal', function () {
            $('#mi-lista').remove()
        });

        elementosSeleccionados = [];
    });


            {# Fin apartado de comandero y datos mesa #}
	    {# RR #}
	    function mostrarPapelera() {
                new bootstrap.Modal(document.querySelector("#modalPapelera")).show();
	    }
	    {# END OF RR #}

	</script>
{% endblock %}
