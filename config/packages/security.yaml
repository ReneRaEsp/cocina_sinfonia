# security:
#     enable_authenticator_manager: true
#     # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
#     password_hashers:
#         Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
#     # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
#     providers:
#         # used to reload user from session & other features (e.g. switch_user)
#         app_user_provider:
#             entity:
#                 class: App\Entity\User
#                 property: email
#     firewalls:
#         dev:
#             pattern: ^/(_(profiler|wdt)|css|images|js)/
#             security: false
#         main:
#             lazy: true
#             provider: app_user_provider
#             custom_authenticator: App\Security\LoginFormAuthenticator
#             logout:
#                 path: app_logout
#                 # where to redirect after logout
#                 # target: app_any_route

#             # activate different ways to authenticate
#             # https://symfony.com/doc/current/security.html#the-firewall

#             # https://symfony.com/doc/current/security/impersonating_user.html
#             # switch_user: true

#     # Easy way to control access for large sections of your site
#     # Note: Only the *first* access control that matches will be used
#     access_control:
#         # - { path: ^/admin, roles: ROLE_ADMIN }
#         # - { path: ^/profile, roles: ROLE_USER }

# when@test:
#     security:
#         password_hashers:
#             # By default, password hashers are resource intensive and take time. This is
#             # important to generate secure password hashes. In tests however, secure hashes
#             # are not important, waste resources and increase test times. The following
#             # reduces the work factor to the lowest possible values.
#             Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
#                 algorithm: auto
#                 cost: 4 # Lowest possible value for bcrypt
#                 time_cost: 3 # Lowest possible value for argon
#                 memory_cost: 10 # Lowest possible value for argon


security:
    access_denied_url: /error/403
    always_authenticate_before_granting: false
    encoders:
            FOS\UserBundle\Model\UserInterface: bcrypt

    role_hierarchy:
            ROLE_USER:        []
            ROLE_GESTOR:      []
            ROLE_CAMARERO:    []
            ROLE_ADMIN:       [ROLE_USER, ROLE_GESTOR, ROLE_CAMARERO]
            ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_USER, ROLE_GESTOR, ROLE_CAMARERO, ROLE_ALLOWED_TO_SWITCH]
    # https://symfony.com/doc/current/book/security.html#where-do-users-come-from-user-providers
    providers:
        fos_userbundle:
                id: fos_user.user_provider.username
        in_memory: { memory: ~ }
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        prod:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            pattern: ^/
            remember_me:
                secret: '%kernel.secret%'
                lifetime: 21600
            form_login:
              provider: fos_userbundle
              csrf_token_generator: security.csrf.token_manager
              login_path: fos_user_security_login
              check_path: fos_user_security_check
            #   default_target_path: / # Ruta a la que se redirige después de iniciar sesión correctamente

            logout:       
                path: fos_user_security_logout
                target: fos_user_security_login
            anonymous:    true

            # activate different ways to authenticate

            # http_basic: ~
            # https://symfony.com/doc/current/book/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: ~
            # https://symfony.com/doc/current/cookbook/security/form_login_setup.html
    access_control:
            - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
            - { path: ^/register, role: ROLE_ADMIN }
            - { path: ^/resetting, role: ROLE_ADMIN }
            - { path: ^/admin/, role: ROLE_ADMIN }
            - { path: ^/stock, role: ROLE_ADMIN }
            - { path: ^/proveedores, role: ROLE_ADMIN }
            - { path: ^/personal, role: ROLE_ADMIN }
            - { path: ^/fichaje, role: [ROLE_ADMIN,ROLE_CAMARERO] }
            - { path: ^/ventas, role: ROLE_ADMIN }
            - { path: ^/facturas, role: [ROLE_ADMIN,ROLE_GESTOR] }
            - { path: ^/mesas, role: [ROLE_ADMIN,ROLE_CAMARERO]  }
            - { path: ^/reservas, role: [ROLE_ADMIN,ROLE_CAMARERO]  }
            - { path: ^/ajustes, role: ROLE_ADMIN }
            - { path: ^/ajustesavanzados, role: ROLE_ADMIN }
            - { path: ^/statsbebida, role: ROLE_ADMIN }
            - { path: ^/statscomida, role: ROLE_ADMIN }
            - { path: ^/statscomensales, role: ROLE_ADMIN }